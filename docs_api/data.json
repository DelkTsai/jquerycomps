{
    "project": {
        "name": "jquery components",
        "description": "The third party jquery UI components",
        "version": "0.2",
        "url": "http://jc2.openjavascript/docs_api/",
        "logo": "jc_logo.png"
    },
    "files": {
        "../modules/Bizs.ActionLogic/0.1/ActionLogic.js": {
            "name": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "modules": {},
            "classes": {
                "window.Bizs.ActionLogic": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.AutoSelectComplete/0.1/AutoSelectComplete.js": {
            "name": "../modules/Bizs.AutoSelectComplete/0.1/AutoSelectComplete.js",
            "modules": {},
            "classes": {
                "window.Bizs.AutoSelectComplete": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.ChangeLogic/0.1/ChangeLogic.js": {
            "name": "../modules/Bizs.ChangeLogic/0.1/ChangeLogic.js",
            "modules": {},
            "classes": {
                "window.Bizs.ChangeLogic": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.CommonModify/0.1/CommonModify.js": {
            "name": "../modules/Bizs.CommonModify/0.1/CommonModify.js",
            "modules": {},
            "classes": {
                "window.Bizs.CommonModify": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.DMultiDate/0.1/DMultiDate.js": {
            "name": "../modules/Bizs.DMultiDate/0.1/DMultiDate.js",
            "modules": {},
            "classes": {
                "window.Bizs.DMultiDate": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.DisableLogic/0.1/DisableLogic.js": {
            "name": "../modules/Bizs.DisableLogic/0.1/DisableLogic.js",
            "modules": {},
            "classes": {
                "window.Bizs.DisableLogic": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.DropdownTree/0.1/DropdownTree.js": {
            "name": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "modules": {},
            "classes": {
                "window.Bizs.DropdownTree": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.FormLogic/0.2/FormLogic.js": {
            "name": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "modules": {},
            "classes": {
                "window.Bizs.FormLogic": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.KillISPCache/0.1/KillISPCache.js": {
            "name": "../modules/Bizs.KillISPCache/0.1/KillISPCache.js",
            "modules": {},
            "classes": {
                "window.Bizs.KillISPCache": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.MoneyTips/0.1/MoneyTips.js": {
            "name": "../modules/Bizs.MoneyTips/0.1/MoneyTips.js",
            "modules": {},
            "classes": {
                "window.Bizs.MoneyTips": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.MultiDate/0.1/MultiDate.js": {
            "name": "../modules/Bizs.MultiDate/0.1/MultiDate.js",
            "modules": {},
            "classes": {
                "window.Bizs.MultiDate": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/Bizs.MultiSelect/0.1/MultiSelect.js": {
            "name": "../modules/Bizs.MultiSelect/0.1/MultiSelect.js",
            "modules": {},
            "classes": {
                "window.Bizs.MultiSelect": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../modules/JC.AjaxUpload/0.2/AjaxUpload.js": {
            "name": "../modules/JC.AjaxUpload/0.2/AjaxUpload.js",
            "modules": {},
            "classes": {
                "JC.AjaxUpload": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.AjaxUpload/dev/AjaxUpload.js": {
            "name": "../modules/JC.AjaxUpload/dev/AjaxUpload.js",
            "modules": {},
            "classes": {
                "DEV.JC.AjaxUpload": 1
            },
            "fors": {},
            "namespaces": {
                "DEV.JC": 1
            }
        },
        "../modules/JC.AutoChecked/0.1/AutoChecked.js": {
            "name": "../modules/JC.AutoChecked/0.1/AutoChecked.js",
            "modules": {},
            "classes": {
                "JC.AutoChecked": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.AutoComplete/0.1/AutoComplete.js": {
            "name": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "modules": {},
            "classes": {
                "JC.AutoComplete": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.AutoSelect/0.2/AutoSelect.js": {
            "name": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "modules": {},
            "classes": {
                "JC.AutoSelect": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.BaseMVC/0.1/BaseMVC.js": {
            "name": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "modules": {},
            "classes": {
                "JC.BaseMVC": 1,
                "JC.BaseMVC.Model": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.Calendar/0.3/Calendar.date.js": {
            "name": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "modules": {},
            "classes": {
                "JC.Calendar": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.Calendar/0.3/Calendar.js": {
            "name": "../modules/JC.Calendar/0.3/Calendar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../modules/JC.Calendar/0.3/Calendar.month.js": {
            "name": "../modules/JC.Calendar/0.3/Calendar.month.js",
            "modules": {},
            "classes": {},
            "fors": {
                "JC.Calendar": 1
            },
            "namespaces": {}
        },
        "../modules/JC.Calendar/0.3/Calendar.monthday.js": {
            "name": "../modules/JC.Calendar/0.3/Calendar.monthday.js",
            "modules": {},
            "classes": {},
            "fors": {
                "JC.Calendar": 1
            },
            "namespaces": {}
        },
        "../modules/JC.Calendar/0.3/Calendar.season.js": {
            "name": "../modules/JC.Calendar/0.3/Calendar.season.js",
            "modules": {},
            "classes": {},
            "fors": {
                "JC.Calendar": 1
            },
            "namespaces": {}
        },
        "../modules/JC.Calendar/0.3/Calendar.week.js": {
            "name": "../modules/JC.Calendar/0.3/Calendar.week.js",
            "modules": {},
            "classes": {},
            "fors": {
                "JC.Calendar": 1
            },
            "namespaces": {}
        },
        "../modules/JC.Calendar/0.3/Calendar.year.js": {
            "name": "../modules/JC.Calendar/0.3/Calendar.year.js",
            "modules": {},
            "classes": {},
            "fors": {
                "JC.Calendar": 1
            },
            "namespaces": {}
        },
        "../modules/JC.DCalendar/0.1/DCalendar.date.js": {
            "name": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "modules": {},
            "classes": {
                "JC.DCalendar": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.DCalendar/0.1/DCalendar.js": {
            "name": "../modules/JC.DCalendar/0.1/DCalendar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../modules/JC.Drag/0.1/Drag.js": {
            "name": "../modules/JC.Drag/0.1/Drag.js",
            "modules": {},
            "classes": {
                "JC.Drag": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.Fixed/0.1/Fixed.js": {
            "name": "../modules/JC.Fixed/0.1/Fixed.js",
            "modules": {},
            "classes": {
                "JC.Fixed": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.Form/0.2/Form.js": {
            "name": "../modules/JC.Form/0.2/Form.js",
            "modules": {},
            "classes": {
                "JC.Form": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.FormFillUrl/0.1/FormFillUrl.js": {
            "name": "../modules/JC.FormFillUrl/0.1/FormFillUrl.js",
            "modules": {},
            "classes": {
                "JC.FormFillUrl": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.ImageCutter/0.1/ImageCutter.js": {
            "name": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "modules": {},
            "classes": {
                "JC.ImageCutter": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.ImageCutter/dev/ImageCutter.js": {
            "name": "../modules/JC.ImageCutter/dev/ImageCutter.js",
            "modules": {},
            "classes": {
                "DEV.JC.ImageCutter": 1
            },
            "fors": {},
            "namespaces": {
                "DEV.JC": 1
            }
        },
        "../modules/JC.Lazyload/0.1/Lazyload.js": {
            "name": "../modules/JC.Lazyload/0.1/Lazyload.js",
            "modules": {},
            "classes": {
                "JC.Lazyload": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js": {
            "name": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "modules": {},
            "classes": {
                "JC.LunarCalendar": 1,
                "JC.LunarCalendar.View": 1,
                "JC.LunarCalendar.Model": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1,
                "JC.LunarCalendar": 1
            }
        },
        "../modules/JC.LunarCalendar/0.1/LunarCalendar.getFestival.js": {
            "name": "../modules/JC.LunarCalendar/0.1/LunarCalendar.getFestival.js",
            "modules": {},
            "classes": {},
            "fors": {
                "JC.LunarCalendar": 1
            },
            "namespaces": {}
        },
        "../modules/JC.LunarCalendar/0.1/LunarCalendar.gregorianToLunar.js": {
            "name": "../modules/JC.LunarCalendar/0.1/LunarCalendar.gregorianToLunar.js",
            "modules": {},
            "classes": {},
            "fors": {
                "JC.LunarCalendar": 1
            },
            "namespaces": {}
        },
        "../modules/JC.LunarCalendar/0.1/LunarCalendar.js": {
            "name": "../modules/JC.LunarCalendar/0.1/LunarCalendar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../modules/JC.NumericStepper/0.1/NumericStepper.js": {
            "name": "../modules/JC.NumericStepper/0.1/NumericStepper.js",
            "modules": {},
            "classes": {
                "JC.NumericStepper": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.Panel/0.2/Dialog.js": {
            "name": "../modules/JC.Panel/0.2/Dialog.js",
            "modules": {},
            "classes": {
                "JC.Dialog": 1,
                "JC.Dialog.mask": 1
            },
            "fors": {
                "JC.Dialog": 1
            },
            "namespaces": {
                "JC": 1,
                "JC.Dialog": 1
            }
        },
        "../modules/JC.Panel/0.2/Dialog.popup.js": {
            "name": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "modules": {},
            "classes": {
                "JC.Dialog.msgbox": 1,
                "JC.Dialog.alert": 1,
                "JC.Dialog.confirm": 1
            },
            "fors": {
                "JC.Dialog": 1
            },
            "namespaces": {
                "JC.Dialog": 1
            }
        },
        "../modules/JC.Panel/0.2/Panel.default.js": {
            "name": "../modules/JC.Panel/0.2/Panel.default.js",
            "modules": {},
            "classes": {
                "JC.Panel": 1,
                "JC.Panel.Model": 1,
                "JC.hideAllPanel": 1,
                "JC.hideAllPopup": 1
            },
            "fors": {
                "View": 1
            },
            "namespaces": {
                "JC": 1,
                "JC.Panel": 1
            }
        },
        "../modules/JC.Panel/0.2/Panel.js": {
            "name": "../modules/JC.Panel/0.2/Panel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../modules/JC.Panel/0.2/Panel.popup.js": {
            "name": "../modules/JC.Panel/0.2/Panel.popup.js",
            "modules": {},
            "classes": {
                "JC.msgbox": 1,
                "JC.alert": 1,
                "JC.confirm": 1
            },
            "fors": {
                "JC.alert": 1
            },
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.Placeholder/0.1/Placeholder.js": {
            "name": "../modules/JC.Placeholder/0.1/Placeholder.js",
            "modules": {},
            "classes": {
                "JC.Placeholder": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.PopTips/0.1/PopTips.js": {
            "name": "../modules/JC.PopTips/0.1/PopTips.js",
            "modules": {},
            "classes": {
                "JC.PopTips": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.Slider/0.1/Slider.js": {
            "name": "../modules/JC.Slider/0.1/Slider.js",
            "modules": {},
            "classes": {
                "JC.Slider": 1,
                "JC.Slider.Model": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1,
                "JC.Slider": 1
            }
        },
        "../modules/JC.Suggest/0.1/Suggest.js": {
            "name": "../modules/JC.Suggest/0.1/Suggest.js",
            "modules": {},
            "classes": {
                "JC.Suggest": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.Tab/0.1/Tab.js": {
            "name": "../modules/JC.Tab/0.1/Tab.js",
            "modules": {},
            "classes": {
                "JC.Tab": 1,
                "JC.Tab.Model": 1,
                "JC.Tab.View": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1,
                "JC.Tab": 1
            }
        },
        "../modules/JC.TableFreeze/0.2/TableFreeze.js": {
            "name": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "modules": {},
            "classes": {
                "JC.TableFreeze": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.TableSort/0.1/TableSort.js": {
            "name": "../modules/JC.TableSort/0.1/TableSort.js",
            "modules": {},
            "classes": {
                "JC.TableSort": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.Tips/0.1/Tips.js": {
            "name": "../modules/JC.Tips/0.1/Tips.js",
            "modules": {},
            "classes": {
                "JC.Tips": 1,
                "JC.Tips.Model": 1,
                "JC.Tips.View": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1,
                "JC.Tips": 1
            }
        },
        "../modules/JC.Tree/0.1/Tree.js": {
            "name": "../modules/JC.Tree/0.1/Tree.js",
            "modules": {},
            "classes": {
                "JC.Tree": 1,
                "JC.Tree.Model": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1,
                "JC.Tree": 1
            }
        },
        "../modules/JC.Valid/0.2/Valid.js": {
            "name": "../modules/JC.Valid/0.2/Valid.js",
            "modules": {},
            "classes": {
                "JC.Valid": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../modules/JC.common/0.2/common.js": {
            "name": "../modules/JC.common/0.2/common.js",
            "modules": {},
            "classes": {
                "JC.f": 1,
                "JC.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../modules/SWFUpload/2.5.0/SWFUpload.js": {
            "name": "../modules/SWFUpload/2.5.0/SWFUpload.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../plugins/Aes/0.1/Aes.js": {
            "name": "../plugins/Aes/0.1/Aes.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js": {
            "name": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../plugins/requirejs.domReady/2.0.1/domReady.js": {
            "name": "../plugins/requirejs.domReady/2.0.1/domReady.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../config.js": {
            "name": "../config.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../jquery.js": {
            "name": "../jquery.js",
            "modules": {},
            "classes": {
                "window.jQuery": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "../lib.js": {
            "name": "../lib.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../require.js": {
            "name": "../require.js",
            "modules": {},
            "classes": {
                "window.requirejs": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        }
    },
    "modules": {},
    "classes": {
        "window.Bizs.ActionLogic": {
            "name": "window.Bizs.ActionLogic",
            "shortname": "window.Bizs.ActionLogic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 2,
            "description": "<h2>node 点击操作逻辑</h2>\n应用场景\n<br/>点击后弹框( 脚本模板 )\n<br/>点击后弹框( AJAX )\n<br/>点击后弹框( Dom 模板 )\n<br/>点击后执行 AJAX 操作\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n     , <a href='JC.Panel.html'>JC.Panel</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/window.Bizs.ActionLogic.html' target='_blank'>API docs</a>\n| <a href='../../modules/Bizs.ActionLogic/0.1/_demo' target='_blank'>demo link</a></p>\n\na|button 需要 添加 class=\"js_bizsActionLogic\"\n\n<h2>可用的 HTML 属性</h2>\n<dl>\n     <dt>balType = string, 操作类型 </dt>\n     <dd>\n         <dl>\n             <dt>类型:</dt>\n             <dd>panel: 弹框</dd>\n             <dd>link: 链接跳转</dd>\n             <dd>ajaxaction: ajax操作, 删除, 启用, 禁用</dd>\n         </dl>\n     </dd>\n\n     <dt>balUnHtmlEntity = bool, default = false</dt>\n     <dd>是否将 Panel 转义的 html 反转回来</dd>\n</dl>\n<h2>balType = panel 可用的 HTML 属性</h2>\n<dl>\n     <dt>balPanelTpl = script selector</dt>\n     <dd>脚本模板选择器</dd>\n\n     <dt>balAjaxHtml = url</dt>\n     <dd>返回 HTML 的 AJAX 模板</dd>\n\n     <dt>balAjaxData = url</dt>\n     <dd>返回 json 的 AJAX 模板, { errorno: int, data: html } </dd>\n\n     <dt>balCallback = function</dt>\n     <dd>\n         显示模板后的回调\n<pre>function balPanelInitCb( _panelIns ){\n   var _trigger = $(this);\n   //return true; //如果返回真的话, 表单提交后会关闭弹框\n}</pre>\n     </dd>\n</dl>\n<h2>balType = link 可用的 HTML 属性</h2>\n<dl>\n     <dt>balUrl = url</dt>\n     <dd>要跳转的目标 URL</dd>\n\n     <dt>balConfirmMsg = string</dt>\n     <dd>跳转前的二次确认提示信息</dd>\n\n     <dt>balConfirmPopupType = string, default = confirm</dt>\n     <dd>二次确认的弹框类型: confirm, dialog.confirm</dd>\n</dl>\n<h2>balType = ajaxaction 可用的 HTML 属性</h2>\n<dl>\n     <dt>balUrl = url</dt>\n     <dd>AJAX 操作的接口</dd>\n\n     <dt>balDoneUrl = url</dt>\n     <dd>AJAX 操作完成后跳转的URL</dd>\n\n     <dt>balConfirmMsg = string</dt>\n     <dd>操作前的二次确认提示信息</dd>\n\n     <dt>balErrorPopupType = string, default = dialog.alert</dt>\n     <dd>错误提示的弹框类型: alert, msgbox, dialog.alert, dialog.msgbox</dd>\n\n     <dt>balSuccessPopupType = string, default = msgbox</dt>\n     <dd>错误提示的弹框类型: alert, msgbox, dialog.alert, dialog.msgbox</dd>\n\n     <dt>balCallback = function</dt>\n     <dd>\n         操作完成后的回调\n<pre>function ajaxDelCallback( _d, _ins ){\n   var _trigger = $(this);\n   if( _d && !_d.errorno ){\n       JC.msgbox( _d.errmsg || '操作成功', _trigger, 0, function(){\n           JC.f.reloadPage( '?usercallback=ajaxaction' );\n       });\n   }else{\n       JC.Dialog.alert( _d && _d.errmsg ? _d.errmsg : '操作失败, 请重试!' , 1 );\n   }\n}\n</pre>\n     </dd>\n\n     <dt>balRequestData = json</dt>\n     <dd>ajax 请求发送的数据</dd>\n\n     <dt>balAjaxType = string, default = get</dt>\n     <dd>ajax 请求的类型</dd>\n\n     <dt>balDoneRemoveSelector = selector</dt>\n     <dd>ajax 操作完成后要删除的 node</dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-17",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team"
        },
        "window.Bizs.AutoSelectComplete": {
            "name": "window.Bizs.AutoSelectComplete",
            "shortname": "window.Bizs.AutoSelectComplete",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.AutoSelectComplete/0.1/AutoSelectComplete.js",
            "line": 4,
            "description": "<h2>结合 JC.AutoSelect 与 JC.AutoComplete 综合使用的一个业务逻辑</h2>\n<br />应用场景: CRM 多级广告位最后一级因为内容较多, 用户使用传统的下拉框选择比较不便\n<br />这个业务组件结合 JC.AutoSelect 和 JC.AutoComplete 提供一种简便的可输入解决方案\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n     , <a href='JC.AutoComplete.html'>JC.AutoComplete</a>\n     , <a href='JC.AutoSelect.html'>JC.AutoSelect</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/Bizs.AutoSelectComplete.html' target='_blank'>API docs</a>\n| <a href='../../modules/Bizs.AutoSelectComplete/0.1/_demo' target='_blank'>demo link</a></p>\n<h2>可用的 HTML attribute</h2>\n<dl>\n     <dt>bascAjaxUrl = url</dt>\n     <dd>\n         获取 JC.AutoComplete 数据的 AJAX 接口\n         <dl>\n             <dt>数据格式</dt>\n             <dd>\n                 [ { \"id\": \"id value\", \"label\": \"label value\" }, ... ]\n             </dd>\n         </dl>\n     </dd>\n\n     <dt>bascDefaultSelect = selector</dt>\n     <dd>声明 JC.AutoSelect 的围住 select</dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-11-25",
            "author": "qiushaowei<suches@btbtd.org> | 75 Team",
            "example": [
                ""
            ]
        },
        "window.Bizs.ChangeLogic": {
            "name": "window.Bizs.ChangeLogic",
            "shortname": "window.Bizs.ChangeLogic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.ChangeLogic/0.1/ChangeLogic.js",
            "line": 3,
            "description": "<h2>input[type=radio|type=checkbox], select change 事件的响应逻辑</h2>\n<br/>应用场景</br>\n<br/>表单操作时, 选择某个 radio 时, 对应的 内容有效,\n<br/>但选择其他 radio 时, 其他的内容无效\n<br/>checkbox / select 也可使用( 带change事件的标签 )\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/window.Bizs.ChangeLogic.html' target='_blank'>API docs</a>\n| <a href='../../modules/Bizs.ChangeLogic/0.1/_demo' target='_blank'>demo link</a></p>\n\ndiv 需要 添加 class=\"js_bizChangeLogic\"\n\n<h2>box 的 HTML 属性</h2>\n<dl>\n     <dt>bclTrigger</dt>\n     <dd>触发禁用/起用的control</dd>\n\n     <dt>bclDisableTarget</dt>\n     <dd>需要禁用/起用的control</dd>\n\n     <dt>bclHideTarget</dt>\n     <dd>需要根据禁用起用隐藏/可见的标签</dd>\n\n     <dt>bclDoneCallback = function</dt>\n     <dd>\n     启用/禁用后会触发的回调, <b>window 变量域</b>\n<pre>function bclDoneCallback( _triggerItem, _boxItem ){\n   var _ins = this;\n   JC.log( 'bclDoneCallback', new Date().getTime() );\n}</pre>\n     </dd>\n\n     <dt>bclEnableCallback = function</dt>\n     <dd>\n     启用后的回调, <b>window 变量域</b>\n<pre>function bclEnableCallback( _triggerItem, _boxItem ){\n   var _ins = this;\n   JC.log( 'bclEnableCallback', new Date().getTime() );\n}</pre>\n     </dd>\n\n     <dt>bclDisableCallback = function</dt>\n     <dd>\n     禁用后的回调, <b>window 变量域</b>\n<pre>function bclDisableCallback( _triggerItem, _boxItem ){\n   var _ins = this;\n   JC.log( 'bclDisableCallback', new Date().getTime() );\n}</pre>\n     </dd>\n</dl>\n\n<h2>trigger 的 HTML 属性</h2>\n<dl>\n     <dt>bclDisable = bool, default = false</dt>\n     <dd>\n         指定 bclDisableTarget 是否置为无效\n         <br />还可以根据这个属性 指定 bclHideTarget 是否显示\n     </dd>\n\n     <dt>bclDisplay = bool</dt>\n     <dd>指定 bclHideTarget 是否显示</dd>\n\n     <dt>bclHideTargetSub = selector</dt>\n     <dd>根据 trigger 的 checked 状态 显示或者隐藏 bclHideTargetSub node</dd>\n</dl>\n\n<h2>hide target 的 HTML 属性</h2>\n<dl>\n     <dt>bclHideToggle = bool</dt>\n     <dd>显示或显示的时候, 是否与他项相反</dd>\n</dl>",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-04",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "example": [
                "\n       <div class=\"js_bizChangeLogic\"\n           bclTrigger=\"/input[type=radio]\"\n           bclDisableTarget=\"/input.js_disableItem\"\n           >\n           <label>\n               <input type=\"radio\" name=\"discount\" checked  \n               bclDisable=\"true\"\n               />自本协议签订之日起10日内生效\n           </label> <br>\n           <label>\n               <input type=\"radio\" name=\"discount\" \n               bclDisable=\"false\"\n               />生效时间点\n           </label>\n           <input type=\"text\" class=\"ipt js_disableItem\" datatype=\"date\" value=\"\"\n           /><input type=\"button\" class=\"UXCCalendar_btn\">\n       </div>"
            ]
        },
        "window.Bizs.CommonModify": {
            "name": "window.Bizs.CommonModify",
            "shortname": "window.Bizs.CommonModify",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.CommonModify/0.1/CommonModify.js",
            "line": 2,
            "description": "<h2>Dom 通用 添加删除 逻辑</h2>\n<br/>应用场景\n<br/>需要动态添加删除内容的地方可以使用这个类\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/window.Bizs.CommonModify.html' target='_blank'>API docs</a>\n| <a href='../../modules/Bizs.CommonModify/0.1/_demo' target='_blank'>demo link</a></p>\n\na|button 需要 添加 class=\"js_autoCommonModify\"\n\n<h2>可用的 HTML 属性</h2>\n<dl>\n     <dt>[cmtpl | cmtemplate] = script selector</dt>\n     <dd>指定保存模板的 script 标签</dd>\n\n     <dt>cmitem = selector</dt>\n     <dd>添加时, 目标位置的 父节点/兄弟节点</dd>\n\n     <dt>cmaction = string, [add, del], default = add</dt>\n     <dd>操作类型</dd>\n\n     <dt>cmappendtype = string, default = after</dt>\n     <dd>指定 node 添加 dom 的方法, 可选类型: before, after, appendTo</dd>\n\n     <dt>cmdonecallback = function</dt>\n     <dd>\n     添加或删除完后会触发的回调, <b>window 变量域</b>\n<pre>function cmdonecallback( _ins, _boxParent ){\n   var _trigger = $(this);\n   JC.log( 'cmdonecallback', new Date().getTime() );\n}</pre>\n     </dd>\n\n     <dt>cmtplfiltercallback = function</dt>\n     <dd>\n     模板内容过滤回调, <b>window 变量域</b>\n<pre>window.COUNT = 1;\nfunction cmtplfiltercallback( _tpl, _cmitem, _boxParent ){\n   var _trigger = $(this);\n   JC.log( 'cmtplfiltercallback', new Date().getTime() );\n   _tpl = JC.f.printf( _tpl, COUNT++ );\n\n   return _tpl;\n}</pre>\n     </dd>\n\n     <dt>cmbeforeaddcallabck = function</dt>\n     <dd>\n     添加之前的回调, 如果返回 false, 将不执行添加操作, <b>window 变量域</b>\n<pre>function cmbeforeaddcallabck( _cmitem, _boxParent ){\n   var _trigger = $(this);\n   JC.log( 'cmbeforeaddcallabck', new Date().getTime() );\n   //return false;\n}</pre>\n     </dd>\n\n     <dt>cmaddcallback = function</dt>\n     <dd>\n     添加完成的回调, <b>window 变量域</b>\n<pre>function cmaddcallback( _ins, _newItem, _cmitem, _boxParent ){\n   var _trigger = $(this);\n   JC.log( 'cmaddcallback', new Date().getTime() );\n}</pre>\n     </dd>\n\n     <dt>cmbeforedelcallback = function</dt>\n     <dd>\n     删除之前的回调, 如果返回 false, 将不执行删除操作, <b>window 变量域</b>\n<pre>function cmbeforedelcallback( _cmitem, _boxParent ){\n   var _trigger = $(this);\n   JC.log( 'cmbeforedelcallback', new Date().getTime() );\n   //return false;\n}</pre>\n     </dd>\n\n     <dt>cmdelcallback = function</dt>\n     <dd>\n     删除完成的回调, <b>window 变量域</b>\n<pre>function cmdelcallback( _ins, _boxParent ){\n   JC.log( 'cmdelcallback', new Date().getTime() );\n}</pre>\n     </dd>\n\n     <dt>cmMaxItems = int</dt>\n     <dd>\n         指定最多可添加数量\n         <br /><b>要使 cmMaxItems 生效, 必须声明 cmAddedItemsSelector</b>\n     </dd>\n\n     <dt>cmAddedItemsSelector = selector</dt>\n     <dd>\n         指定查找所有上传项的选择器语法\n     </dd>\n\n     <dt>cmOutRangeMsg = string, default = \"最多只能上传 {0}个文件!\"</dt>\n     <dd>\n         添加数量超出 cmMaxItems 时的提示信息\n     </dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-04",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "example": [
                "\n      <table>\n            <tr>\n               <td>\n                   <label class=\"gray\">甲方主体：</label>\n               </td>\n               <td>\n                   <input type=\"text\" name=\"\" class=\"ipt ipt-w320\" />&nbsp;\n                       <a href=\"javascript:\" \n                       class=\"green js_autoCommonModify\" \n                       cmtemplate=\"#addMainFirstPartyTpl\"\n                       cmitem=\"(tr\"\n                       cmaction=\"add\"\n                   >+ 添加</a>\n                   <em class=\"error\"></em>\n               </td>\n           </tr>\n       </table>\n\n       <script type=\"text/template\" id=\"addMainFirstPartyTpl\" >\n        <tr>\n           <td>\n               <label class=\"gray\">甲方主体：</label>\n           </td>\n           <td>\n               <input type=\"text\" name=\"\" class=\"ipt ipt-w320\" />\n               <a href=\"javascript:\" \n                   class=\"green js_autoCommonModify\" \n                   cmtemplate=\"#addMainFirstPartyTpl\"\n                   cmitem=\"(tr\"\n                   cmaction=\"add\"\n               >+ 添加</a>\n               <a href=\"javascript:\" class=\"red js_autoCommonModify\"\n                   cmtemplate=\"#addMainFirstPartyTpl\"\n                   cmitem=\"(tr\"\n                   cmaction=\"del\"\n               >+ 删除</a>\n               <em class=\"error\"></em>\n           </td>\n       </tr>\n       </script>"
            ]
        },
        "window.Bizs.DMultiDate": {
            "name": "window.Bizs.DMultiDate",
            "shortname": "window.Bizs.DMultiDate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.DMultiDate/0.1/DMultiDate.js",
            "line": 3,
            "description": "DMultiDate 复合日历业务逻辑\n<br/> Dom 加载后会自动加载页面上所有.js_autoDMultiDate的标签\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n     , <a href='JC.Calendar.html'>JC.Calendar</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/window.Bizs.DMultiDate.html' target='_blank'>API docs</a>\n| <a href='../../modules/Bizs.DMultiDate/0.1/_demo' target='_blank'>demo link</a></p>\n\n<h2>可用的html属性</h2>\n<dl>\n   <dt>mddate = css selector</dt>\n   <dd>声明日期input[type=text][datatype=daterange]的标签<br/>\n       如果缺省则自动查找子元素.js_multidate</dd>\n\n   <dt>mdstartdate = css selector</dt>\n   <dd>声明开始日期的隐藏域标签, 默认查找子元素.js_startdate</dd>\n\n   <dt>mdenddate = css selector</dt>\n   <dd>声明结束日期的隐藏域标签, 默认查找子元素.js_enddate</dd>\n\n   <dt>mddayrange = num</dt>\n   <dd>声明时间粒度为日时，最长可选取多少天，如果不需要则不声明此属性</dd>\n\n   <dt>mdweekrange = num</dt>\n   <dd>声明时间粒度为周时，最长可选取多少周，如果不需要则不声明此属性</dd>\n\n   <dt>mdmonthrange = num</dt>\n   <dd>声明时间粒度为月时，最长可选取多少月，如果不需要则不声明此属性</dd>\n\n   <dt>mdseasonrange = num</dt>\n   <dd>声明时间粒度为季时，最长可选取多少季，如果不需要则不声明此属性</dd>\n\n   <dt>mdyearrange = num</dt>\n   <dd>声明时间粒度为年时，最长可选取多少年，如果不需要则不声明此属性</dd>\n\n</dl>",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "version": "dev 0.1 2014-03-03",
            "author": "zuojing   <zuojing1013@gmail.com> | 75 Team"
        },
        "window.Bizs.DisableLogic": {
            "name": "window.Bizs.DisableLogic",
            "shortname": "window.Bizs.DisableLogic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.DisableLogic/0.1/DisableLogic.js",
            "line": 2,
            "description": "<h2 style=\"color:red\">这个应用将不再维护, 请使用 <a href='window.Bizs.ChangeLogic.html' style=\"color:red\">Bizs.ChangeLogic</a> </h2>\n<h2>Form Control禁用启用逻辑</h2>\n<br/>应用场景</br>\n<br/>表单操作时, 选择某个 radio 时, 对应的 内容有效,\n<br/>但选择其他 radio 时, 其他的内容无效\n<br/>checkbox / select 也可使用( 带change事件的标签 )\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/window.Bizs.DisableLogic.html' target='_blank'>API docs</a>\n| <a href='../../modules/Bizs.DisableLogic/0.1/_demo' target='_blank'>demo link</a></p>\n\ndiv 需要 添加 class=\"js_bizsDisableLogic\"\n\n<h2>box 的 HTML 属性</h2>\n<dl>\n     <dt>dltrigger</dt>\n     <dd>触发禁用/起用的control</dd>\n\n     <dt>dltarget</dt>\n     <dd>需要禁用/起用的control</dd>\n\n     <dt>dlhidetarget</dt>\n     <dd>需要根据禁用起用隐藏/可见的标签</dd>\n\n     <dt>dldonecallback = function</dt>\n     <dd>\n     启用/禁用后会触发的回调, <b>window 变量域</b>\n<pre>function dldonecallback( _triggerItem, _boxItem ){\n   var _ins = this;\n   JC.log( 'dldonecallback', new Date().getTime() );\n}</pre>\n     </dd>\n\n     <dt>dlenablecallback = function</dt>\n     <dd>\n     启用后的回调, <b>window 变量域</b>\n<pre>function dlenablecallback( _triggerItem, _boxItem ){\n   var _ins = this;\n   JC.log( 'dlenablecallback', new Date().getTime() );\n}</pre>\n     </dd>\n\n     <dt>dldisablecallback = function</dt>\n     <dd>\n     禁用后的回调, <b>window 变量域</b>\n<pre>function dldisablecallback( _triggerItem, _boxItem ){\n   var _ins = this;\n   JC.log( 'dldisablecallback', new Date().getTime() );\n}</pre>\n     </dd>\n</dl>\n\n<h2>trigger 的 HTML 属性</h2>\n<dl>\n     <dt>dldisable = bool, default = false</dt>\n     <dd>\n         指定 dltarget 是否置为无效\n         <br />还可以根据这个属性 指定 dlhidetarget 是否显示\n     </dd>\n\n     <dt>dldisplay = bool</dt>\n     <dd>指定 dlhidetarget 是否显示</dd>\n\n     <dt>dlhidetargetsub = selector</dt>\n     <dd>根据 trigger 的 checked 状态 显示或者隐藏 dlhidetargetsub node</dd>\n</dl>\n\n<h2>hide target 的 HTML 属性</h2>\n<dl>\n     <dt>dlhidetoggle = bool</dt>\n     <dd>显示或显示的时候, 是否与他项相反</dd>\n</dl>",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-04",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "example": [
                "\n       <div class=\"js_bizsDisableLogic\"\n           dltrigger=\"/input[type=radio]\"\n           dltarget=\"/input.js_disableItem\"\n           >\n           <label>\n               <input type=\"radio\" name=\"discount\" checked  \n               dldisable=\"true\"\n               />自本协议签订之日起10日内生效\n           </label> <br>\n           <label>\n               <input type=\"radio\" name=\"discount\" \n               dldisable=\"false\"\n               />生效时间点\n           </label>\n           <input type=\"text\" class=\"ipt js_disableItem\" datatype=\"date\" value=\"\"\n           /><input type=\"button\" class=\"UXCCalendar_btn\">\n       </div>"
            ]
        },
        "window.Bizs.DropdownTree": {
            "name": "window.Bizs.DropdownTree",
            "shortname": "window.Bizs.DropdownTree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "line": 2,
            "description": "树菜单 形式模拟下拉框\n\n<p><b>require</b>:\n  <a href=\"widnow.jQuery.html\">jQuery</a>\n  , <a href=\"JC.common.html\">JC.common</a>\n  , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n  | <a href='http://jc2.openjavascript.org/docs_api/classes/Bizs.DropdownTree.html' target='_blank'>API docs</a>\n  | <a href='../../modules/Bizs.DropdownTree/0.1/_demo' target='_blank'>demo link</a></p>\n \n<h2>页面只要引用本脚本, 默认会自动处理 div class=\"js_bizDropdownTree\" </h2>\n\n<h2>可用的 HTML attribute</h2>\n\n<dl>\n   <dt>bdtData = json, <b>window 变量域</b></dt>\n   <dd>\n       初始化的数据变量名\n       <dl><dt>数据格式:</dt>\n         <dd>\n<pre>            {\n                 root: [ id, label ]\n                 data: {\n                     id: [ [id, label], [id, label]... ] \n                     , id: [ [id, label], [id, label]... ]...\n                 }\n             }</pre>\n         </dd>\n       </dl>\n   <dd>\n\n   <dt>bdtDefaultLabel = string</dt>\n   <dd>用于显示的 默认 label</dd>\n\n   <dt>bdtDefaultValue = string</dt>\n   <dd>默认选中 ID</dd>\n\n   <dt>bdtLabel = selector, default = \"|.bdtLabel\"</dt>\n   <dd>树的 label</dd>\n\n   <dt>bdtInput = selector, default = \"|.bdtInput\"</dt>\n   <dd>保存树 ID的 input</dd>\n\n   <dt>bdtTreeBox = selector, default = \"|.bdtTreeBox\"</dt>\n   <dd>树的 node</dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-12-13",
            "author": "qiushaowei <suches@btbtd.org> | 75 Team",
            "example": [
                "\n       <div class=\"bdtBox js_bizDropdownTree\" bdtData=\"treeData1\" bdtDefaultLabel=\"请选择\" bdtDefaultValue=\"0\">\n           <i class=\"bdtIcon\"></i>\n           <span class=\"bdtLabel\"></span>\n           <input type=\"hidden\" name=\"tree03\" value=\"\" class=\"bdtInput\" />                                            \t\n           <div class=\"bdtTreeBox\"></div>\n       </div>"
            ]
        },
        "window.Bizs.FormLogic": {
            "name": "window.Bizs.FormLogic",
            "shortname": "window.Bizs.FormLogic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 4,
            "description": "<h2>提交表单控制逻辑</h2>\n应用场景\n<br />get 查询表单\n<br />post 提交表单\n<br />ajax 提交表单\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n     , <a href='JC.Valid.html'>JC.Valid</a>\n     , <a href='JC.Panel.html'>JC.Panel</a>\n</p>\n<p><b>optional</b>: \n     <a href='JC.FormFillUrl.html'>JC.FormFillUrl</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/window.Bizs.FormLogic.html' target='_blank'>API docs</a>\n| <a href='../../modules/Bizs.FormLogic/0.2/_demo' target='_blank'>demo link</a></p>\n\n<h2>页面只要引用本文件, 默认会自动初始化 from class=\"js_bizsFormLogic\" 的表单</h2>\n<h2>Form 可用的 HTML 属性</h2>\n<dl>\n     <dt>formType = string, default = get</dt>\n     <dd>\n         form 的提交类型, 如果没有显式声明, 将视为 form 的 method 属性\n         <br/> 类型有: get, post, ajax, jsonp \n     </dd>\n\n     <dt>formSubmitDisable = bool, default = true</dt>\n     <dd>表单提交后, 是否禁用提交按钮</dd>\n\n     <dt>formResetAfterSubmit = bool, default = true</dt>\n     <dd>表单提交后, 是否重置内容</dd>\n\n     <dt>formBeforeProcess = function</dt>\n     <dd>\n         表单开始提交时且没开始验证时, 触发的回调, <b>window 变量域</b>\n<pre>function formBeforeProcess( _evt, _ins ){\n   var _form = $(this);\n   JC.log( 'formBeforeProcess', new Date().getTime() );\n   //return false;\n}</pre>\n     </dd>\n\n     <dt>formProcessError = function</dt>\n     <dd>\n         提交时, 验证未通过时, 触发的回调, <b>window 变量域</b>\n<pre>function formProcessError( _evt, _ins ){\n   var _form = $(this);\n   JC.log( 'formProcessError', new Date().getTime() );\n   //return false;\n}</pre>\n     </dd>\n\n     <dt>formAfterProcess = function</dt>\n     <dd>\n         表单开始提交时且验证通过后, 触发的回调, <b>window 变量域</b>\n<pre>function formAfterProcess( _evt, _ins ){\n   var _form = $(this);\n   JC.log( 'formAfterProcess', new Date().getTime() );\n   //return false;\n}</pre>\n     </dd>\n\n     <dt>formConfirmPopupType = string, default = dialog</dt>\n     <dd>定义提示框的类型: dialog, popup</dd>\n\n     <dt>formResetUrl = url</dt>\n     <dd>表单重置时, 返回的URL</dd>\n\n     <dt>formPopupCloseMs = int, default = 2000</dt>\n     <dd>msgbox 弹框的显示时间</dd>\n\n     <dt>formAjaxResultType = string, default = json</dt>\n     <dd>AJAX 返回的数据类型: json, html</dd>\n\n     <dt>formAjaxMethod = string, default = get</dt>\n     <dd>\n         类型有: get, post\n         <br/>ajax 的提交类型, 如果没有显式声明, 将视为 form 的 method 属性\n     </dd>\n\n     <dt>formAjaxAction = url</dt>\n     <dd>ajax 的提交URL, 如果没有显式声明, 将视为 form 的 action 属性</dd>\n\n     <dt>formAjaxDone = function, default = system defined</dt>\n     <dd>\n         AJAX 提交完成后的回调, <b>window 变量域</b>\n         <br />如果没有显式声明, FormLogic将自行处理\n<pre>function formAjaxDone( _json, _submitButton, _ins ){\n   var _form = $(this);\n   JC.log( 'custom formAjaxDone', new Date().getTime() );\n\n   if( _json.errorno ){\n       _panel = JC.Dialog.alert( _json.errmsg || '操作失败, 请重新尝试!', 1 );\n   }else{\n       _panel = JC.msgbox( _json.errmsg || '操作成功', _submitButton, 0, function(){\n           JC.f.reloadPage( \"?donetype=custom\" );\n       });\n   }\n};</pre>\n     </dd>\n\n     <dt>formAjaxDoneAction = url</dt>\n     <dd>声明 ajax 提交完成后的返回路径, 如果没有, 提交完成后将不继续跳转操作</dd>\n\n     <dt>formJsonpCb = function, default = FormLogic#_model._innerJsonpCb</dt>\n     <dd>自定义 JSOPN 处理回调, <b>window 变量域</b>\n<pre>function customFormJsonpCb( _data, _info ){\n   if( !( _data && _info ) ) return;\n\n   var _frm = $( 'form.' + _info ), _ins;\n   if( !_frm.length ) return;\n   _ins = JC.BaseMVC.getInstance( _frm, Bizs.FormLogic );\n   if( !_ins ) return;\n\n   _ins.trigger( Bizs.FormLogic.Model.AJAX_DONE, [ _data ] );\n}</pre>\n\n<pre>URL: <b>handler_jsonp.php?callbackInfo=FormLogic_1&callback=callback</b>\nOUTPUT:\n<b>&lt;script&gt;\nwindow.parent \n   && window.parent != this\n   && window.parent&#91; 'callback' &#93;\n   && window.parent&#91; 'callback' &#93;( {\"errorno\":0,\"errmsg\":\"\",\"data\":{\"callbackInfo\":\"FormLogic_1\",\"callback\":\"callback\"}}, 'FormLogic_1' )\n   ;\n&lt;/script&gt;</b></pre>\n     </dd>\n</dl>\n\n<h2>Form Control 可用的 html 属性</h2>\n<dl>\n     <dt>ignoreResetClear = bool, default = false</dt>\n     <dd>重置时, 是否忽略清空控件的值, 默认清空</dd>\n</dl>\n\n<h2>submit button 可用的 html 属性</h2>\n<dl>\n     <dd>\n         基本上 form 可用的 html 属性, submit 就可用, 区别在于 submit 优化级更高\n     </dd>\n\n     <dt>formSubmitConfirm = string</dt>\n     <dd>提交表单时进行二次确认的提示信息</dt>\n\n     <dt>formConfirmCheckSelector = selector</dt>\n     <dd>提交表单时, 进行二次确认的条件判断</dt>\n\n     <dt>formConfirmCheckCallback = function</dt>\n     <dd>\n         提交表单时, 进行二次确认的条件判断, <b>window 变量域</b>\n<pre>function formConfirmCheckCallback( _trigger, _evt, _ins ){\n   var _form = $(this);\n   JC.log( 'formConfirmCheckCallback', new Date().getTime() );\n   return _form.find('td.js_confirmCheck input[value=0]:checked').length;\n}</pre>\n     </dd>\n\n     <dt>formSubmitIgnoreCheck = bool, default = false</dt>\n     <dd>\n         表单提交时, 是否忽略 JC.Valid 的验证\n         <br /><b>注意:</b> 仅忽略内容为空的项, 如果已经填写内容, 那么内容必须与验证规则匹配\n         <br /><b>注: 有时 提交操作 仅为保存为草稿的时候, 是不需要验证所有内容的, 不过还是会对值非空的项进行验证</b>\n     </dd>\n</dl>\n\n<h2>reset button 可用的 html 属性</h2>\n<dl>\n     <dd>\n         如果 form 和 reset 定义了相同属性, reset 优先级更高\n     </dd>\n     <dt>formConfirmPopupType = string, default = dialog</dt>\n     <dd>定义提示框的类型: dialog, popup</dd>\n\n     <dt>formResetUrl = url</dt>\n     <dd>表单重置时, 返回的URL</dd>\n\n     <dt>formResetConfirm = string</dt>\n     <dd>重置表单时进行二次确认的提示信息</dt>\n\n     <dt>formPopupCloseMs = int, default = 2000</dt>\n     <dd>msgbox 弹框的显示时间</dd>\n</dl>\n\n<h2>普通 [a | button] 可用的 html 属性</h2>\n<dl>\n     <dt>buttonReturnUrl</dt>\n     <dd>点击button时, 返回的URL</dd>\n\n     <dt>returnConfirm = string</dt>\n     <dd>二次确认提示信息</dd>\n\n     <dt>popupType = string, default = confirm</dt>\n     <dd>弹框类型: confirm, dialog.confirm</dd>\n\n     <dt>popupstatus = int, default = 2</dt>\n     <dd>提示状态: 0: 成功, 1: 失败, 2: 警告</dd>\n\n     <dt>buttonClickBindSelector = selector</dt>\n     <dd>\n         点击按钮时, 把按钮的值赋值给 绑定的 控件\n         <br /><b>注意:</b> 这个属性仅支持 [input|button] 标签\n     </dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-08",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "example": [
                "\n           <script>\n               JC.debug = true;\n               JC.use( 'Bizs.FormLogic, Calendar, plugins.json2' );\n\n               function formBeforeProcess( _evt, _ins ){\n                   var _form = $(this);\n                   JC.log( 'formBeforeProcess', new Date().getTime() );\n               }\n\n               function formAfterProcess( _evt, _ins ){\n                   var _form = $(this);\n                   JC.log( 'formAfterProcess', new Date().getTime() );\n                   //return false;\n               }\n\n               function formAjaxDone( _json, _submitButton, _ins ){\n                   var _form = $(this);\n                   JC.log( 'custom formAjaxDone', new Date().getTime() );\n\n                   if( _json.errorno ){\n                       _panel = JC.Dialog.alert( _json.errmsg || '操作失败, 请重新尝试!', 1 );\n                   }else{\n                       _panel = JC.msgbox( _json.errmsg || '操作成功', _submitButton, 0, function(){\n                           JC.f.reloadPage( \"?donetype=custom\" );\n                       });\n                   }\n               };\n           </script>\n\n           <dl class=\"defdl\">\n               <dt>Bizs.FormLogic, get form example 3, nothing at done</dt>\n               <dd>\n                   <dl>\n                       <form action=\"./data/handler.php\" method=\"POST\"\n                           class=\"js_bizsFormLogic\"\n                           formType=\"ajax\"\n                           formAjaxMethod=\"POST\"\n                           formBeforeProcess=\"formBeforeProcess\"\n                           formAfterProcess=\"formAfterProcess\"\n                           formAjaxDone=\"formAjaxDone\"                            \n                           formAjaxDoneAction=\"?donetype=system\"\n                           >\n                           <dl>\n                               <dd>\n                                   文件框: <input type=\"text\" name=\"text\" reqmsg=\"文本框\" value=\"test3\" />\n                               </dd>\n                               <dd>\n                                   日期: <input type=\"text\" name=\"date\" datatype=\"date\" reqmsg=\"日期\" value=\"2015-02-20\" />\n                                   <em class=\"error\"></em>\n                               </dd>\n                               <dd>\n                                   下拉框:\n                                       <select name=\"dropdown\" reqmsg=\"下拉框\" >\n                                           <option value=\"\">请选择</option>\n                                           <option value=\"1\">条件1</option>\n                                           <option value=\"2\">条件2</option>\n                                           <option value=\"3\" selected>条件3</option>\n                                       </select>\n                               </dd>\n                               <dd>\n                                   <input type=\"hidden\" name=\"getform\" value=\"1\" />\n                                   <button type=\"submit\" formSubmitConfirm=\"确定要提交吗?\" >submit - dialog</button>\n                                   <button type=\"submit\" formConfirmPopupType=\"dialog\" \n                                                           formSubmitConfirm=\"确定要提交吗?\" >submit - popup</button>\n\n                                   <button type=\"reset\" formResetConfirm=\"确定要重置吗?\"  >reset</button>\n                                   <button type=\"reset\" formResetConfirm=\"确定要重置吗?\" formResetUrl=\"?\"  >reset - url</button>\n                                   <a href=\"?\">back</a>\n                               </dd>\n                           </dl>\n                       </form>\n                   </dl>\n               </dd>\n           </dl>     "
            ]
        },
        "window.Bizs.KillISPCache": {
            "name": "window.Bizs.KillISPCache",
            "shortname": "window.Bizs.KillISPCache",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.KillISPCache/0.1/KillISPCache.js",
            "line": 2,
            "description": "应用场景\n<br /><b>ISP 缓存问题 引起的用户串号</b>\n<br />ajax 或者动态添加的内容, 请显式调用  JC.KillISPCache.getInstance().process( newNodeContainer )\n<br /><b>这是个单例类</b>\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/window.Bizs.KillISPCache.html' target='_blank'>API docs</a>\n| <a href='../../modules/Bizs.KillISPCache/0.1/_demo' target='_blank'>demo link</a></p>\n\n<h2>页面只要引用本文件, 默认会自动初始化 KillISPCache 逻辑</h2>\n<dl>\n     <dt>影响到的地方: </dt>\n     <dd>每个 a node 会添加 isp 参数</dd>\n     <dd>每个 form node 会添加 isp 参数</dd>\n     <dd>每个 ajax get 请求会添加 isp 参数</dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-07",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "example": [
                "\n     <script>\n     //动态添加的内容需要显式调用 process 方法去处理相关逻辑\n     $.get( _url, function( _html ){\n         var _node = $(_html);\n         _node.appendTo( document.body );\n         JC.KillISPCache.getInstance().process( _node );\n     });\n     </script>"
            ]
        },
        "window.Bizs.MoneyTips": {
            "name": "window.Bizs.MoneyTips",
            "shortname": "window.Bizs.MoneyTips",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.MoneyTips/0.1/MoneyTips.js",
            "line": 4,
            "description": "<h2>金额格式化 业务逻辑</h2>\n<br/>应用场景\n<br/>用户在文本框输入金额时, 在指定的 node 显示以逗号分隔的金额\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/window.Bizs.MoneyTips.html' target='_blank'>API docs</a>\n| <a href='../../modules/Bizs.MoneyTips/0.1/_demo' target='_blank'>demo link</a></p>\n\ninput[type=text] 需要 添加 class=\"js_bizMoneyTips\"\n<br />只要带有 class = js_bizMoneyTips 的文本框, 默认会自动初始化 MoneyTips 实例\n\n<p>\n     页面载入时, Bizs.MoneyTips 会对 span.js_bmtLabel, label.js_bmtLabel 进行自动格式化\n</p>\n\n<h2>可用的 HTML 属性</h2>\n<dl>\n     <dt>bmtDisplayLabel = selector, default = span</dt>\n     <dd>\n         指定显示 格式化金额的 node, 如果没有显式指定 node, 那么将会动态生成一个用于显示的 span\n     </dd>\n\n     <dt>bmtPattern = string, default = {0}</dt>\n     <dd>\n         用于显示格式化金额的显示内容, {0} = 金额占位符\n         <br />example: &lt;input type=\"text\" class=\"js_bizMoneyTips\" bmtPattern=\"格式化金额: {0}\" />\n     </dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "version": "dev 0.1 2013-11-21",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "example": [
                "\n       <div>\n           金额: <input type=\"text\" value=\"6543.21\" \n           datatype=\"n-12.2\" class=\"js_bizMoneyTips\" bmtDisplayLabel=\"/span.js_bmtSpan\" />\n           <em class=\"error\"></em>\n           <span class=\"js_bmtSpan\"></span>\n       </div>"
            ]
        },
        "window.Bizs.MultiDate": {
            "name": "window.Bizs.MultiDate",
            "shortname": "window.Bizs.MultiDate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.MultiDate/0.1/MultiDate.js",
            "line": 3,
            "description": "MultiDate 复合日历业务逻辑\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n     , <a href='JC.Calendar.html'>JC.Calendar</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/window.Bizs.MultiDate.html' target='_blank'>API docs</a>\n| <a href='../../modules/Bizs.MultiDate/0.1/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "version": "dev 0.1 2013-09-03",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team"
        },
        "window.Bizs.MultiSelect": {
            "name": "window.Bizs.MultiSelect",
            "shortname": "window.Bizs.MultiSelect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../modules/Bizs.MultiSelect/0.1/MultiSelect.js",
            "line": 3,
            "description": "模拟多选下拉框\n框的click将列表拉出来。\nclose和document的click将面板关闭，返回数据，并把数据铺到指定的面板里\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n  | <a href='http://jc2.openjavascript.org/docs_api/classes/Bizs.MultiSelect.html' target='_blank'>API docs</a>\n  | <a href='../../modules/Bizs.MultiSelect/0.1/_demo' target='_blank'>demo link</a></p>\n \n<h2>页面只要引用本脚本, 默认会自动处理 div class=\"js_bizMultiSelect\" </h2>\n\n<h2>可用的 HTML attribute</h2>\n\n<dl>\n   <dt>defaultLabel = string</dt>\n   <dd>\n     声明下拉框默认显示的文字信息\n   <dd>\n   <dt>binddatabox = string(selector)</dt>\n   <dd>声明选中数据，关闭下拉面板后，数据的回填区域<br/>\n    如果此属性为空，则不会在其他区域展示选中的数据\n   </dd>\n   <dt>ajaxurl = string</dt>\n   <dd>声明ajax加载数据的url\n         <dl>\n             <dt>数据格式</dt>\n             <dd>\n                 {errorno: 0,\n                 data: [ { \"id\": \"id value\", \"label\": \"label value\", \"isChecked\": \"is checked\" }, ... ],\n                 errormsg: \"\"}\n             </dd>\n         </dl></dd>\n   <dt>dataFilter = callback</dt>\n   <dd>\n          <dl>\n             <dt>如果 数据接口获取的数据不是默认格式, \n                 可以使用这个属性定义一个数据过滤函数, 把数据转换为合适的格式\n             </dt>\n             <dd>\n<pre>function cacDataFilter( _json ){\nif( _json.data && _json.data.length ){\n   _json = _json.data;\n}\n\n$.each( _json, function( _ix, _item ){\n   _item.length &&\n       ( _json[ _ix ] = { 'id': _item[0], 'label': _item[1], 'isChecked': _item[2] } )\n       ;\n});\nreturn _json;\n}</pre>\n             </dd>\n         </dl>\n   </dd>\n   <dt>dataname=string</dt>\n   <dd>声明checkbox的name属性， 适用于ajax接口的数据</dd>\n\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2014-02-20",
            "author": "zuojing <suches@btbtd.org> | 75 Team",
            "example": [
                "\n    <div class=\"test\">\n       <div class=\"SELECTBOX js_bizMultiSelect\" databindbox=\"(.test .js_box\">\n          <i class=\"SELECTIcon\"></i>\n          <span class=\"SELECTLabel\">共选中<b class=\"red\">2</b>条数据</span>                                         \n          <div class=\"SELECTListBox\" style=\"z-index: 50008; display: none;\">\n               <ul>\n                   <li class=\"SELECTIgnore\">\n                      <label>\n                          <input type=\"checkbox\" value=\"\" name=\"\" checktype=\"all\" checkfor=\"///input[type=checkbox]\">\n                          全选\n                      </label>\n                   </li>\n                   <li>\n                      <label>\n                          <input type=\"checkbox\" value=\"1\" name=\"\" data-text=\"北京天地在线广告有限公司\">\n                          北京天地在线广告有限公司\n                      </label>\n                   </li>\n                   <li>\n                      <label>\n                          <input type=\"checkbox\" value=\"2\" name=\"\" data-text=\"河南天地在线广告有限公司\">\n                          河南天地在线广告有限公司\n                      </label>\n                   </li>\n                   <li>\n                      <label>\n                          <input type=\"checkbox\" value=\"3\" name=\"\" data-text=\"河北天地在线广告有限公司\">\n                          河北天地在线广告有限公司\n                      </label>\n                   </li>\n              </ul>\n              <div class=\"SELECTClose\"><a href=\"javascript:;\" class=\"SELECTCloseBtn\">关闭</a></div>\n          </div>\n       </div>\n       <div class=\"js_box\"><ul><li>北京天地在线广告有限公司</li> <li>河南天地在线广告有限公司</li></ul></div>\n     </div>"
            ]
        },
        "JC.AjaxUpload": {
            "name": "JC.AjaxUpload",
            "shortname": "JC.AjaxUpload",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.AjaxUpload/0.2/AjaxUpload.js",
            "line": 2,
            "description": "Ajax 文件上传\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n     , <a href='JC.Panel.html'>JC.Panel</a>\n</p>\n<p>\n     <a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n     | <a href='http://jc2.openjavascript.org/docs_api/classes/JC.AjaxUpload.html' target='_blank'>API docs</a>\n     | <a href='../../modules/JC.AjaxUpload/0.2/_demo' target='_blank'>demo link</a>\n</p>\n<h2>可用的 html attribute</h2>\n<dl>\n     <dt>cauStyle = string, default = g1</dt>\n     <dd>\n         按钮显示的样式, <a href='../../modules/JC.AjaxUpload/dev/res/default/style.html' target='_blank'>可选样式</a>:\n         <dl>\n             <dt>绿色按钮</dt>\n             <dd>g1, g2, g3</dd>\n\n             <dt>白色/银色按钮</dt>\n             <dd>w1, w2, w3</dd>\n         </dl>\n     </dd>\n\n     <dt>cauButtonText = string, default = 上传文件</dt>\n     <dd>定义上传按钮的显示文本</dd>\n\n     <dt>cauUrl = url, require</dt>\n     <dd>上传文件的接口地址\n         <br />如果 url 带有参数 callback, 返回数据将以 jsonp 方式处理\n     </dd>\n\n     <dt>cauFileExt = file ext, optional</dt>\n     <dd>允许上传的文件扩展名, 例: \".jpg, .jpeg, .png, .gif\"</dd>\n\n     <dt>cauFileName = string, default = file</dt>\n     <dd>上传文件的 name 属性</dd>\n\n     <dt>cauValueKey = string, default = url</dt>\n     <dd>返回数据用于赋值给 hidden/textbox 的字段</dd>\n\n     <dt>cauLabelKey = string, default = name</dt>\n     <dd>返回数据用于显示的字段</dd>\n\n     <dt>cauSaveLabelSelector = selector</dt>\n     <dd>指定保存 cauLabelKey 值的 selector</dd>\n\n     <dt>cauStatusLabel = selector, optional</dt>\n     <dd>开始上传时, 用于显示状态的 selector</dd>\n\n     <dt>cauDisplayLabel = selector, optional</dt>\n     <dd>上传完毕后, 用于显示文件名的 selector</dd>\n\n     <dt>cauUploadDoneCallback = function, optional</dt>\n     <dd>\n         文件上传完毕时, 触发的回调\n<pre>function cauUploadDoneCallback( _json, _selector ){\n   var _ins = this;\n   //alert( _json ); //object object\n}</pre>\n     </dd>\n\n     <dt>cauUploadErrorCallback = function, optional</dt>\n     <dd>\n         文件上传完毕时, 发生错误触发的回调\n<pre>function cauUploadErrorCallback( _json, _selector ){\n   var _ins = this;\n   //alert( _json ); //object object\n}</pre>\n     </dd>\n\n     <dt>cauDisplayLabelCallback = function, optional, return = string</dt>\n     <dd>\n         自定义上传完毕后显示的内容 模板\n<pre>function cauDisplayLabelCallback( _json, _label, _value ){\n   var _selector = this\n       , _label = JC.f.printf( '&lt;a href=\"{0}\" class=\"green js_auLink\" target=\"_blank\">{1}&lt;/a>{2}'\n                       , _value, _label\n                       ,  '&nbsp;&lt;a href=\"javascript:\" class=\"btn btn-cls2 js_cleanCauData\">&lt;/a>&nbsp;&nbsp;'\n                   )\n       ;\n   return _label;\n}</pre>\n     </dd>\n\n     <dt>cauDebug = bool, default = false</dt>\n     <dd>是否显示 flash 调试信息</dd>\n\n     <dt>cauFlashUrl = string</dt>\n     <dd>显式声明 flash 路径</dd>\n\n     <dt>cauButtonWidth = int, default = 自动计算</dt>\n     <dd>显式声明按钮的宽度</dd>\n\n     <dt>cauButtonHeight= int, default = 自动计算</dt>\n     <dd>显式声明按钮的高度</dd>\n\n     <dt>cauRoot = string</dt>\n     <dd>显式声明组件根路径</dd>\n\n     <dt>cauUploadLimit = int, default = 0(不限制)</dt>\n     <dd>上传文件的总数量</dd>\n\n     <dt>cauQueueLimit = int, default = 0(不限制)</dt>\n     <dd>队列中文件的总数量(<b>未实现</b>)</dd>\n\n     <dt>cauFileSize = [ KB | MB | GB ], default = 1024 MB</dt>\n     <dd>上传文件大小限制</dd>\n\n     <dt>cauCacheSwf = bool, default = true</dt>\n     <dd>是否缓存 flash swf</dd>\n\n     <dt>cauHttpSuccess = string, default = 200, 201, 204</dt>\n     <dd>http 通信成功的状态码</dd>\n\n     <dt>cauButtonStyle = string, default = .uFont{ color:#000000; text-align: center; }</dt>\n     <dd>定义 flash 按钮的样式</dd>\n\n     <dt>cauParamsCallback = function</dt>\n     <dd>设置 flash 参数的回调\n<pre>function cauParamsCallback( _params ){\n   var _model = this;\n   return _params;\n}</pre>\n     </dd>\n     \n     <dt>cauBatchUpload = bool, default = false</dt>\n     <dd>是否为批量上传(<b>未实现</b>)</dd>\n\n     <dt>cauShowProgress = bool, default = false</dt>\n     <dd>是否显示进度条\n         <br >如果为真, 且没有声明 cauProgressBox, 那么会自动生成 cauProgressBox\n     </dd>\n\n     <dt>cauProgressBox = selector</dt>\n     <dd>显式声明 进度条标签</dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-09-26",
            "example": [
                "\n           <div>\n               <input type=\"hidden\" class=\"js_compAjaxUpload\" value=\"\"\n                   cauStyle=\"w1\"\n                   cauButtonText=\"上传资质文件\"\n                   cauUrl=\"/ignore/JQueryComps_dev/comps/AjaxUpload/_demo/data/handler.php\"\n                   cauFileExt=\".jpg, .jpeg, .png, .gif\"\n                   cauFileName=\"file\"\n                   cauLabelKey=\"name\"\n                   cauValueKey=\"url\"\n                   cauStatusLabel=\"/label.js_statusLabel\"\n                   cauDisplayLabel=\"/label.js_fileLabel\"\n                   />\n               <label class=\"js_fileLabel\" style=\"display:none\"></label>\n               <label class=\"js_statusLabel\" style=\"display:none\">文件上传中, 请稍候...</label>\n           </div>\n\n           POST 数据:\n               ------WebKitFormBoundaryb1Xd1FMBhVgBoEKD\n               Content-Disposition: form-data; name=\"file\"; filename=\"disk.jpg\"\n               Content-Type: image/jpeg\n\n           返回数据:\n               {\n                   \"errorno\": 0, \n                   \"data\":\n                   {\n                       \"url\": \"/ignore/JQueryComps_dev/comps/AjaxUpload/_demo/data/images/test.jpg\", \n                       \"name\": \"test.jpg\"\n                   }, \n                   \"errmsg\": \"\"\n               }"
            ]
        },
        "DEV.JC.AjaxUpload": {
            "name": "DEV.JC.AjaxUpload",
            "shortname": "DEV.JC.AjaxUpload",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "DEV.JC",
            "file": "../modules/JC.AjaxUpload/dev/AjaxUpload.js",
            "line": 4,
            "description": "Ajax 文件上传\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n     , <a href='JC.Panel.html'>JC.Panel</a>\n</p>\n<p>\n     <a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n     | <a href='http://jc2.openjavascript.org/docs_api/classes/JC.AjaxUpload.html' target='_blank'>API docs</a>\n     | <a href='../../modules/JC.AjaxUpload/dev/_demo' target='_blank'>demo link</a>\n</p>\n<h2>可用的 html attribute</h2>\n<dl>\n     <dt>cauStyle = string, default = g1</dt>\n     <dd>\n         按钮显示的样式, <a href='../../modules/JC.AjaxUpload/dev/res/default/style.html' target='_blank'>可选样式</a>:\n         <dl>\n             <dt>绿色按钮</dt>\n             <dd>g1, g2, g3</dd>\n\n             <dt>白色/银色按钮</dt>\n             <dd>w1, w2, w3</dd>\n         </dl>\n     </dd>\n\n     <dt>cauButtonText = string, default = 上传文件</dt>\n     <dd>定义上传按钮的显示文本</dd>\n\n     <dt>cauHideButton = bool, default = false( no label ), true( has label )</dt>\n     <dd>\n         上传完成后是否隐藏上传按钮\n     </dd>\n\n     <dt>cauUrl = url, require</dt>\n     <dd>上传文件的接口地址\n         <br />如果 url 带有参数 callback, 返回数据将以 jsonp 方式处理\n     </dd>\n\n     <dt>cauJSONPName = function name</dt>\n     <dd>显式声明上传后返回数据的 jsonp 回调名\n         <h3>jsonp 返回数据示例:</h3>\nurl: ?callback=callback\n<br /> data: \n&lt;script>\n   window.parent && window.parent.callback && window.parent.callback( {\"errorno\":0,\"errmsg\":\"\",\"data\":{\"name\":\"test.jpg\",\"url\":\".\\/data\\/images\\/test.jpg\"}} );\n&lt;/script>\n     </dd>\n\n     <dt>cauFileExt = file ext, optional</dt>\n     <dd>允许上传的文件扩展名, 例: \".jpg, .jpeg, .png, .gif\"</dd>\n\n     <dt>cauFileName = string, default = file</dt>\n     <dd>上传文件的 name 属性</dd>\n\n     <dt>cauValueKey = string, default = url</dt>\n     <dd>返回数据用于赋值给 hidden/textbox 的字段</dd>\n\n     <dt>cauLabelKey = string, default = name</dt>\n     <dd>返回数据用于显示的字段</dd>\n\n     <dt>cauSaveLabelSelector = selector</dt>\n     <dd>指定保存 cauLabelKey 值的 selector</dd>\n\n     <dt>cauStatusLabel = selector, optional</dt>\n     <dd>开始上传时, 用于显示状态的 selector</dd>\n\n     <dt>cauDisplayLabel = selector, optional</dt>\n     <dd>上传完毕后, 用于显示文件名的 selector</dd>\n\n     <dt>cauUploadDoneCallback = function, optional</dt>\n     <dd>\n         文件上传完毕时, 触发的回调\n<pre>function cauUploadDoneCallback( _json, _selector, _frame ){\n   var _ins = this;\n   //alert( _json ); //object object\n}</pre>\n     </dd>\n\n     <dt>cauUploadErrorCallback = function, optional</dt>\n     <dd>\n         文件上传完毕时, 发生错误触发的回调\n<pre>function cauUploadErrorCallback( _json, _selector, _frame ){\n   var _ins = this;\n   //alert( _json ); //object object\n}</pre>\n     </dd>\n\n     <dt>cauDisplayLabelCallback = function, optional, return = string</dt>\n     <dd>\n         自定义上传完毕后显示的内容 模板\n<pre>function cauDisplayLabelCallback( _json, _label, _value ){\n   var _selector = this\n       , _label = JC.f.printf( '&lt;a href=\"{0}\" class=\"green js_auLink\" target=\"_blank\">{1}&lt;/a>{2}'\n                       , _value, _label\n                       ,  '&nbsp;&lt;a href=\"javascript:\" class=\"btn btn-cls2 js_cleanCauData\">&lt;/a>&nbsp;&nbsp;'\n                   )\n       ;\n   return _label;\n}</pre>\n     </dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-09-26",
            "example": [
                "\n           <div>\n               <input type=\"hidden\" class=\"js_compAjaxUpload\" value=\"\"\n                   cauStyle=\"w1\"\n                   cauButtonText=\"上传资质文件\"\n                   cauUrl=\"/ignore/JQueryComps_dev/comps/AjaxUpload/_demo/data/handler.php\"\n                   cauFileExt=\".jpg, .jpeg, .png, .gif\"\n                   cauFileName=\"file\"\n                   cauLabelKey=\"name\"\n                   cauValueKey=\"url\"\n                   cauStatusLabel=\"/label.js_statusLabel\"\n                   cauDisplayLabel=\"/label.js_fileLabel\"\n                   />\n               <label class=\"js_fileLabel\" style=\"display:none\"></label>\n               <label class=\"js_statusLabel\" style=\"display:none\">文件上传中, 请稍候...</label>\n           </div>\n\n           POST 数据:\n               ------WebKitFormBoundaryb1Xd1FMBhVgBoEKD\n               Content-Disposition: form-data; name=\"file\"; filename=\"disk.jpg\"\n               Content-Type: image/jpeg\n\n           返回数据:\n               {\n                   \"errorno\": 0, \n                   \"data\":\n                   {\n                       \"url\": \"/ignore/JQueryComps_dev/comps/AjaxUpload/_demo/data/images/test.jpg\", \n                       \"name\": \"test.jpg\"\n                   }, \n                   \"errmsg\": \"\"\n               }"
            ]
        },
        "JC.AutoChecked": {
            "name": "JC.AutoChecked",
            "shortname": "JC.AutoChecked",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.AutoChecked/0.1/AutoChecked.js",
            "line": 2,
            "description": "全选/反选\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.AutoChecked.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.AutoChecked/0.1/_demo' target='_blank'>demo link</a></p>\n<h2>input[type=checkbox] 可用的 HTML 属性</h2>\n<dl>\n     <dt>checktype = string</dt>\n     <dd>\n         类型: all(全选), inverse(反选)\n     </dd>\n\n     <dt>checkfor = selector</dt>\n     <dd>需要全选/反选的 checkbox</dd>\n\n     <dt>checkall = selector</dt>\n     <dd>声明 checkall input, 仅在 checktype = inverse 时才需要</dd>\n\n     <dt>checktrigger = string of event name</dt>\n     <dd>点击全选反选后触发的事件, 可选</dd>\n</dl>",
            "is_constructor": 1,
            "version": "dev 0.1 2013-06-11",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的全选反选的父级节点 或 input[checktype][checkfor]",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           <h2>AJAX data:</h2>\n           <dl class=\"def example24\">\n               <dt>checkall example 24</dt>\n               <dd>\n                   <label>\n                       <input type=\"checkbox\" checktype=\"all\" checkfor=\"dl.example24 input[type=checkbox]\">\n                       全选\n                   </label>\n                   <label>\n                       <input type=\"checkbox\" checktype=\"inverse\" checkfor=\"dl.example24 input[type=checkbox]\" checkall=\"dl.example24 input[checktype=all]\">\n                       反选\n                   </label>\n               </dd>\n               <dd>\n                   <label>\n                       <input type='checkbox' value='' name='' checked />\n                       checkall24_1\n                   </label>\n                   <label>\n                       <input type='checkbox' value='' name='' checked />\n                       checkall24_2\n                   </label>\n                   <label>\n                       <input type='checkbox' value='' name='' checked />\n                       checkall24_3\n                   </label>\n                   <label>\n                       <input type='checkbox' value='' name='' checked />\n                       checkall24_4\n                   </label>\n                   <label>\n                       <input type='checkbox' value='' name='' checked />\n                       checkall24_5\n                   </label>\n               </dd>\n           </dl>\n\n           <script>\n           $(document).delegate( 'button.js_ajaxTest', 'click', function(){\n               var _p = $(this);\n               _p.prop('disabled', true);\n               setTimeout( function(){ _p.prop('disabled', false); }, 1000 );\n\n               $.get( './data/initCheckAll.php?rnd='+new Date().getTime(), function( _r ){\n                   var _selector = $(_r);\n                   $( $( 'body' ).children().first() ).before( _selector );\n                   JC.AutoChecked( _selector );\n               });\n           });\n           </script>"
            ]
        },
        "JC.AutoComplete": {
            "name": "JC.AutoComplete",
            "shortname": "JC.AutoComplete",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 4,
            "description": "AutoComplete 文本框内容输入提示\n<br />响应式初始化, 当光标焦点 foucs 到 文本框时, 会检查是否需要自动初始化 AutoComplete 实例\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.AutoComplete.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.AutoComplete/0.1/_demo' target='_blank'>demo link</a></p>\n\n<h2>可用的 HTML attribute</h2>\n<dl>\n     <dt>cacPopup = selector, optional</dt>\n     <dd>显式指定用于显示数据列表的弹框, 如不指定, 载入数据时会自己生成 popup node</dd>\n\n     <dt>cacPreventEnter = bool, default = false</dt>\n     <dd>文本框按回车键时, 是否阻止默认行为, 防止提交表单</dd>\n\n     <dt>cacLabelKey = string, default = data-label</dt>\n     <dd>用于显示 label 的HTML属性</dd>\n\n     <dt>cacIdKey = string, default= data-id</dt>\n     <dd>用于显示 ID 的HTML属性</dd>\n\n     <dt>cacIdSelector = selector</dt>\n     <dd>用于保存 ID 值的 node</dd>\n\n     <dt>cacIdVal = string, optional</dt>\n     <dd>用于初始化的默认ID, 如果 cacIdVal 为空将尝试读取 cacIdSelector 的值</dd>\n\n     <dt>cacStrictData = bool, default = false</dt>\n     <dd>是否验证已填内容的合法性<br />仅在 cacIdSelector 和 cacIdKey 显式声明时有效</dd>\n\n     <dt>cacAjaxDataUrl = url</dt>\n     <dd>\n         获取 数据的 AJAX 接口\n         <dl>\n             <dt>数据格式</dt>\n             <dd>\n                 [ { \"id\": \"id value\", \"label\": \"label value\" }, ... ]\n             </dd>\n         </dl>\n     </dd>\n\n     <dt>cacDataFilter = callback</dt>\n     <dd>\n         <dl>\n             <dt>如果 数据接口获取的数据不是默认格式, \n                 可以使用这个属性定义一个数据过滤函数, 把数据转换为合适的格式\n             </dt>\n             <dd>\n<pre>function cacDataFilter( _json ){\nif( _json.data && _json.data.length ){\n   _json = _json.data;\n}\n\n$.each( _json, function( _ix, _item ){\n   _item.length &&\n       ( _json[ _ix ] = { 'id': _item[0], 'label': _item[1] } )\n       ;\n});\nreturn _json;\n}</pre>\n             </dd>\n         </dl>\n     </dd>\n\n     <dt>cacBoxWidth = int</dt>\n     <dd>定义 popup 的宽度, 如果没有显式定义, 将使用 selector 的宽度</dd>\n\n     <dt>cacCasesensitive = bool, default = false</dt>\n     <dd>是否区分英文大小写</dd>\n\n     <dt>cacSubItemsSelector = selector string, default = \"&gt; li\"\n     <dd>popup 查找数据项的选择器语法</dd>\n\n     <dt>cacNoDataText = string, default = \"数据加载中, 请稍候...\"</dt>\n     <dd>加载数据时的默认提示文字</dd>\n\n     <dt>cacValidCheckTimeout = int, default = 1</dt>\n     <dd>定义 JC.Valid blur 时执行 check 的时间间隔, 主要为防止点击列表时已经 Valid.check 的问题</dd>\n\n     <dt>cacFixHtmlEntity = bool</dt>\n     <dd>是否将 HTML实体 转为 html</dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-11-01",
            "author": "zuojing<zuojing1013@gmail.com>, qiushaowei<suches@btbtd.org> | 75 Team",
            "example": [
                "\n       <div class=\"ui-sug-mod\">\n           <input name=\"ac\" type=\"text\" class=\"ui-sug-ipt js_compAutoComplete\" value=\"\" \n               autocomplete=\"off\" \n\n               cacPopup=\"/ul.js_compAutoCompleteBox\"\n\n               cacLabelKey=\"data-label\"\n               cacIdKey=\"data-id\"\n\n               cacPreventEnter=\"true\" \n               />\n           <div style=\"height:200px\"></div>\n           <ul class=\"AC_box js_compAutoCompleteBox\" style=\"display:none;\">\n               <li data-id=\"9\" data-label=\"yy语音\">yy语音</li>\n               <li data-id=\"10\" data-label=\"yy直播\">yy直播</li>\n               <li data-id=\"11\" data-label=\"yy频道设计\">yy频道设计</li>\n               <li data-id=\"12\" data-label=\"yy网页版\">yy网页版</li>\n               <li data-id=\"13\" data-label=\"youku\">youku</li>\n               <li data-id=\"14\" data-label=\"yeah\">yeah</li>\n               <li data-id=\"15\" data-label=\"yahoo\">yahoo</li>\n               <li data-id=\"09\" data-label=\"YY语音\">YY语音</li>\n               <li data-id=\"010\" data-label=\"YY直播\">YY直播</li>\n               <li data-id=\"011\" data-label=\"YY频道设计\">YY频道设计</li>\n               <li data-id=\"012\" data-label=\"YY网页版\">YY网页版</li>\n               <li data-id=\"013\" data-label=\"YOUKU\">YOUKU</Li>\n               <li data-id=\"014\" data-label=\"YEAH\">YEAH</LI>\n           </ul>\n       </div>"
            ]
        },
        "JC.AutoSelect": {
            "name": "JC.AutoSelect",
            "shortname": "JC.AutoSelect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 3,
            "description": "<h2>select 级联下拉框无限联动</h2>\n<br />只要引用本脚本, 页面加载完毕时就会自动初始化级联下拉框功能\n<br /><br />动态添加的 DOM 需要显式调用 JC.AutoSelect( domSelector ) 进行初始化\n<br /><br />要使页面上的级联下拉框功能能够自动初始化, 需要在select标签上加入一些HTML 属性\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.AutoSelect.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.AutoSelect/0.2/_demo' target='_blank'>demo link</a></p>\n<h2>select 标签可用的 HTML 属性</h2>\n<dl>\n     <dt>defaultselect, 这个属性不需要赋值</dt>\n     <dd>该属性声明这是级联下拉框的第一个下拉框, <b>这是必填项,初始化时以这个为入口</b></dd>\n\n     <dt>selectvalue = string</dt>\n     <dd>下拉框的默认选中值</dd>\n\n     <dt>selecturl = AJAX 数据请求的URL</dt>\n     <dd>下拉框的数据请求接口, 符号 {0} 代表下拉框值的占位符</dd>\n\n     <dt>selectignoreinitrequest = bool, default = false</dt>\n     <dd>\n         首次初始化时, 是否需要请求新数据\n         <br />有时 联动框太多, 载入页面时, 后端直接把初始数据输出, 避免请求过多\n     </dd>\n\n     <dt>selecttarget = selector</dt>\n     <dd>下一级下拉框的选择器语法</dd>\n\n     <dt>selectdatacb = 静态数据请求回调</dt>\n     <dd>如果数据不需要 AJAX 请求, 可使用这个属性, 自行定义数据处理方式</dd>\n\n     <dt>selectrandomurl = bool, default = false</dt>\n     <dd>AJAX 请求时, 添加随机参数, 防止数据缓存</dd>\n\n     <dt>selecttriggerinitchange = bool, default = true</dt>\n     <dd>首次初始化时, 是否触发 change 事件</dd>\n\n     <dt>selecthideempty = bool, default = false</dt>\n     <dd>是否隐藏没有数据的 selecct</dd>\n\n     <dt>selectdatafilter = 请求数据后的处理回调</dt>\n     <dd>如果接口的数据不符合 select 的要求, 可通过这个属性定义数据过滤函数</dd>\n\n     <dt>selectbeforeinited = 初始化之前的回调</dt>\n\n     <dt>selectinited = 初始化后的回调</dt>\n<dd><pre>function selectinited( _items ){\n   var _ins = this;\n}</pre>\n</dd>\n\n     <dt>selectallchanged = 所有select请求完数据之后的回调, <b>window 变量域</b></dt>\n     <dd><pre>function selectallchanged( _items ){\n   var _ins = this;\n}</pre>\n     </dd>\n\n     <dt>selectCacheData = bool, default = true</dt>\n     <dd>是否缓存ajax数据</dd>\n\n     <dt>selectItemDataFilter = function</dt>\n     <dd>每个select 显示option前,可自定义数据过滤函数\n<pre>function selectItemDataFilter2( _selector, _data, _pid){\n   //alert( '_pid:' + _pid + '\\n' + JSON.stringify( _data ) );\n   var _r, i, j;\n   if( _pid === '' ){//过滤北京id = 28\n       _r = [];\n       for( i = 0, j = _data.length; i < j; i++ ){\n           if( _data[i][0] == 28 ) continue;\n           _r.push( _data[i] );\n       }\n       _data = _r;\n   }\n   else if( _pid == 14 ){//过滤江门id=2254\n       _r = [];\n       for( i = 0, j = _data.length; i < j; i++ ){\n           if( _data[i][0] == 2254 ) continue;\n           _r.push( _data[i] );\n       }\n       _data = _r;\n   }\n   return _data;\n}</pre>\n     </dd>\n</dl>\n<h2>option 标签可用的 HTML 属性</h2>\n<dl>\n     <dt>defaultoption, 这个属性不需要赋值</dt>\n     <dd>声明默认 option 选项, 更新option时, 有该属性的项不会被清除</dd>\n</dl>\n<h2>数据格式</h2>\n<p>\n     [ [id, name], [id, name] ... ]\n     <br /> 如果获取到的数据格式不是默认格式,\n     可以通过 <a href='JC.AutoSelect.html#property_dataFilter'>AutoSelect.dataFilter</a> 属性自定义函数, 进行数据过滤\n</p>",
            "static": 1,
            "version": "dev 0.2",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-07-28(.2), 2013-06-11(.1)",
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的级联下拉框父级节点",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n       <h2>AJAX 返回内容</h2>\n       <code>\n           <dd>    \n               <select name='select102_1' defaultselect selecturl=\"data/shengshi_with_error_code.php?id=0\" selecttarget=\"select[name=select102_2]\">\n                   <option value=\"-1\" defaultoption>请选择</option>\n               </select>\n               <select name='select102_2' selecturl=\"data/shengshi_with_error_code.php?id={0}\" selecttarget=\"select[name=select102_3]\">\n                   <option value=\"-1\" defaultoption>请选择</option>\n               </select>\n               <select name='select102_3' selecturl=\"data/shengshi_with_error_code.php?id={0}\">\n                   <option value=\"-1\" defaultoption>请选择</option>\n               </select>\n           </dd>\n       </code>\n       <script>\n           $.get( './data/shengshi_html.php?rnd='+new Date().getTime(), function( _r ){\n               var _selector = $(_r);\n               $( 'dl.def > dt' ).after( _selector );\n               JC.AutoSelect( _selector );\n           });\n\n           JC.AutoSelect.dataFilter = \n               function( _data, _select ){\n                   var _r = _data;\n                   if( _data && !_data.length && _data.data ){\n                       _r = _data.data;\n                   }\n                   return _r;\n               };\n       </script>"
            ]
        },
        "JC.BaseMVC": {
            "name": "JC.BaseMVC",
            "shortname": "JC.BaseMVC",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 3,
            "description": "MVC 抽象类 ( <b>仅供扩展用, 这个类不能实例化</b>)\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.BaseMVC.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.BaseMVC/0.1/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-09-07",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team"
        },
        "JC.BaseMVC.Model": {
            "name": "JC.BaseMVC.Model",
            "shortname": "JC.BaseMVC.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 215,
            "description": "MVC Model 类( <b>仅供扩展用</b> )\n<br />这个类默认已经包含在lib.js里面, 不需要显式引用\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.BaseMVC.Model.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.BaseMVC/0.1/_demo' target='_blank'>demo link</a></p>\n<p><b>see also</b>: <a href='JC.BaseMVC.html'>JC.BaseMVC</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-09-11",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team"
        },
        "JC.Calendar": {
            "name": "JC.Calendar",
            "shortname": "JC.Calendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 3,
            "description": "日期选择组件\n<br />全局访问请使用 JC.Calendar 或 Calendar\n<br />DOM 加载完毕后\n, Calendar会自动初始化页面所有日历组件, input[type=text][datatype=date]标签\n<br />Ajax 加载内容后, 如果有日历组件需求的话, 需要手动使用Calendar.init( _selector )\n<br />_selector 可以是 新加载的容器, 也可以是新加载的所有input\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Calendar.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Calendar/0.3/_demo/' target='_blank'>demo link</a></p>\n<h2> 可用的html attribute, (input|button):(datatype|multidate)=(date|week|month|season) </h2> \n<dl>\n     <dt>defaultdate = ISO Date</dt>\n     <dd>默认显示日期, 如果 value 为空, 则尝试读取 defaultdate 属性</dd>\n\n     <dt>datatype = string</dt>\n     <dd>\n         声明日历控件的类型:\n         <br /><b>date:</b> 日期日历\n         <br /><b>week:</b> 周日历\n         <br /><b>month:</b> 月日历\n         <br /><b>season:</b> 季日历\n         <br /><b>year:</b> 年日历\n         <br /><b>monthday:</b> 多选日期日历\n     </dd>\n\n     <dt>multidate = string</dt>\n     <dd>\n         与 datatype 一样, 这个是扩展属性, 避免表单验证带来的逻辑冲突\n     </dd>\n\n     <dt>calendarshow = function</dt>\n     <dd>显示日历时的回调\n<pre>function calendarshow( _selector, _ins ){\n   var _selector = $(this);\n   UXC.log( 'calendarshow', _selector.val() );\n}\n</pre></dd>\n\n     <dt>calendarhide = function</dt>\n     <dd>隐藏日历时的回调\n<pre>function calendarhide( _selector, _ins ){\n   var _selector = $(this);\n   UXC.log( 'calendarhide', _selector.val() );\n}</pre></dd>\n\n     <dt>calendarlayoutchange = function</dt>\n     <dd>用户点击日历控件操作按钮后, 外观产生变化时触发的回调\n<pre>function calendarlayoutchange( _selector, _ins ){\n   var _selector = $(this);\n   JC.log( 'calendarlayoutchange', _selector.val() );\n}\n</pre></dd>\n\n     <dt>calendarupdate = function</dt>\n     <dd>\n         赋值后触发的回调\n<pre>function calendarupdate( _startDate, _endDate, _ins ){\n   var _selector = $(this);\n   JC.log( 'calendarupdate', _selector.val(), _startDate, _endDate );\n}\n</pre></dd>\n\n     <dt>calendarclear = function</dt>\n     <dd>清空日期触发的回调\n<pre>function calendarclear( _selector, _ins ){\n   var _selector = $(this);\n}</pre></dd>\n\n     <dt>minvalue = ISO Date</dt>\n     <dd>日期的最小时间, YYYY-MM-DD</dd>\n\n     <dt>maxvalue = ISO Date</dt>\n     <dd>日期的最大时间, YYYY-MM-DD</dd>\n\n     <dt>currentcanselect = bool, default = true</dt>\n     <dd>当前日期是否能选择</dd>\n\n     <dt>multiselect = bool (目前支持 month: default=false, monthday: default = true)</dt>\n     <dd>是否为多选日历</dd>\n\n     <dt>calendarupdatemultiselect = function</dt>\n     <dd>\n         多选日历赋值后触发的回调\n         <dl>\n             <dt>参数: _data:</dt>\n             <dd>\n                 [{\"start\": Date,\"end\": Date}[, {\"start\": Date,\"end\": Date}... ] ]\n             </dd>\n         </dl>\n<pre>function calendarupdatemultiselect( _data, _ins ){\n   var _selector = $(this);\n   window.JSON && ( _data = JSON.stringify( _data ) );\n   JC.log( 'calendarupdatemultiselect:'\n       , JC.f.printf( 'val:{0}, data:{1}', _selector.val(), _data ) );\n}</pre></dd>\n\n     <dt>dateFormat = string</dt>\n     <dd>\n         自定义日期格式化显示, 使用 JC.f.dateFormat 函数进行格式化\n         <br />如果日期去除非数字后不是 8/16 位数字的话, 需要 显式声明 dateParse 属性, 自定义日期解析函数\n     </dd>\n\n     <dt>fullDateFormat = string</dt>\n     <dd>\n         针对 日期类型: 月/季/年 定义显示格式, default: \"{0} 至 {1}\"\n         <br />{0}代表开始日期, {1}代表结束日期\n     </dd>\n\n     <dt>dateParse = function </dt>\n     <dd>\n         自定义日期格式函数, 针对日期不能解析为 8 位数字的特殊日期\n         <br />例子:\n<pre>//\n/// 针对月份日期格式化 YY-MM\n//\nfunction parseYearMonthDate( _dateStr ){\n   _dateStr = $.trim( _dateStr || '' );\n   var _r = { start: null, end: null };\n   if( !_dateStr ) return _r;\n\n   _dateStr = _dateStr.replace( /[^\\d]+/g, '' );\n   var _year = _dateStr.slice( 0, 4 ), _month = parseInt( _dateStr.slice( 4 ), 10 ) - 1;\n\n   _r.start = new Date( _year, _month, 1 );\n   return _r;\n}\n//\n/// 针对季度日期格式化 YY-MM ~ YY-MM\n//\nfunction parseSeasonDate( _dateStr ){\n   _dateStr = $.trim( _dateStr || '' );\n   var _r = { start: null, end: null };\n   if( !_dateStr ) return _r;\n\n   _dateStr = _dateStr.replace( /[^\\d]+/g, '' );\n\n   _r.start = JC.f.parseISODate( _dateStr.slice( 0, 6 ) + '01' );\n   _r.end = JC.f.parseISODate( _dateStr.slice( 6 ) + '01' );\n\n   return _r;\n}\n//\n/// 针对年份日期格式化 YY\n//\nfunction parseYearDate( _dateStr ){\n   _dateStr = $.trim( _dateStr || '' );\n   var _r = { start: null, end: null };\n   if( !_dateStr ) return _r;\n\n   _dateStr = _dateStr.replace( /[^\\d]+/g, '' );\n   var _year = _dateStr.slice( 0, 4 );\n\n   _r.start = new Date( _year, 0, 1 );\n   return _r;\n}</pre>\n     </dd>\n</dl>",
            "version": "dev 0.1, 2013-06-04",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team"
        },
        "JC.DCalendar": {
            "name": "JC.DCalendar",
            "shortname": "JC.DCalendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 2,
            "description": "双日历日期选择组件\n<p>\n     <b>require</b>: \n         <a href='window.jQuery.html'>jQuery</a>\n         , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.DCalendar.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.DCalendar/0.1/_demo' target='_blank'>demo link</a></p>\n\n<p></p>\n\n<h2>可用的 HTML attribute</h2>\n\n<dl>\n     <dt>datatype = string 必填项</dt>\n     <dd>声明日历控件的类型：\n     <br/><b>ddate:</b> 日期日历\n     <br/><b>drange:</b> 日期范围日历( 成对出现 )\n     </dd>\n\n     <dt>minvalue = ISO Date</dt>\n     <dd>日期的最小时间, YYYY-MM-DD</dd>\n\n     <dt>maxvalue = ISO Date</dt>\n     <dd>日期的最大时间, YYYY-MM-DD</dd>\n\n     <dt>currentcanselect = bool, default = true</dt>\n     <dd>当前日期是否能选择</dd>\n\n     <dt>monthmum = int</dt>\n     <dd>\n         声明显示月份日历面板的个数（一次性可显示2到12个月份），默认为2（双日历）\n     </dd>\n\n     <dt>showtype = block || float </dt>\n     <dd>\n         声明月份日历面板的显示方式，默认为float<br/>\n         float（比如两个月份并排显示） <a href=\"../../modules/JC.DCalendar/0.1/res/default/style.html#float\" target=\"_blank\">查看</a><br/>\n         block （月份日历面板竖排显示）<a href=\"../../modules/JC.DCalendar/0.1/res/default/style.html#block\" target=\"_blank\">查看</a><br/>\n     </dd>\n\n     <dt>calendarshow = function</dt>\n     <dd>显示日历显示后的回调\n<pre>function calendarShow( selector ) {\n   var ins = this;\n   JC.log( \"calendarshow\", new Date().getTime(), selector.val() );\n}</pre></dd>\n\n     <dt>calendarhide = function</dt>\n     <dd>隐藏日历后的回调\n<pre>function calendarhide( selector ) {\n   JC.log( \"calendarhide\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n     <dt>calendarclear = function</dt>\n     <dd>清空选中日期后的回调\n<pre>function calendarclear( selector ) {\n   JC.log( \"calendarclear\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>updatedate = function</dt>\n    <dd>选中日期后回调\n<pre>function updatedate( selector ) {\n   JC.log( \"updatedate\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>updatemonth = function</dt>\n    <dd>选中月份后回调\n<pre>function updatemonth( selector ) {\n   JC.log( \"updatedatemonth\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>updateyear = function</dt>\n    <dd>选中年份后回调\n<pre>function updateyear( selector ) {\n   JC.log( \"updatedateyear\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>beforeupdateyear = function</dt>\n    <dd>更新年份前的回调，即年份日历面板出来时\n<pre>function beforeupdateyear( selector ) {\n   JC.log( \"beforeupdateyear\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>beforeupdatemonth = function</dt>\n    <dd>更新月份前的回调，即月份日历面板出来时\n<pre>function beforeupdateymonth( selector ) {\n   JC.log( \"beforeupdateymonth\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>beforeupdatemont = function</dt>\n    <dd>更新月份前的回调，即月份日历面板出来时\n<pre>function beforeupdateymonth( selector ) {\n   JC.log( \"beforeupdateymonth\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>updateprevpageyear = function</dt>\n    <dd>点击上一页年份时的回调\n<pre>function updatprevtpageyear( selector ) {\n   JC.log( \"updateprevpageyear\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>updatenextpageyear = function</dt>\n    <dd>点击下一页年份时的回调\n<pre>function updatenextpageyear( selector ) {\n   JC.log( \"updatenextpageyear\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>updateprevyear = function</dt>\n    <dd>点击上一年时的回调，月份日历面板点击上一页\n<pre>function updatprevyear( selector ) {\n   JC.log( \"updateprevyear\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>updatenextyear = function</dt>\n    <dd>点击下一年时的回调，月份日历面板点击下一页\n<pre>function updatenextyear( selector ) {\n   JC.log( \"updatenextyear\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>updateprevmonth = function</dt>\n    <dd>点击上一月时的回调，日期日历面板点击上一页\n<pre>function updatprevmonth( selector ) {\n   JC.log( \"updateprevmonth\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n    <dt>updatenextmonth = function</dt>\n    <dd>点击下一月时的回调，日期日历面板点击下一页\n<pre>function updatenextmonth( selector ) {\n   JC.log( \"updatenextmonth\", $(selector).val(), new Date().getTime() );\n}</pre></dd>\n\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-12-20",
            "author": "zuojing   <zuojing1013@gmail.com> | 75 Team"
        },
        "JC.Drag": {
            "name": "JC.Drag",
            "shortname": "JC.Drag",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 2,
            "description": "响应式 Drag and Drop 功能\n<br />对 [ div | button ].js_compDrag 生效\n\n<p><b>require</b>:\n  <a href=\"widnow.jQuery.html\">jQuery</a>\n  , <a href=\"JC.common.html\">JC.common</a>\n  , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n  | <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Drag.html' target='_blank'>API docs</a>\n  | <a href='../../modules/JC.Drag/0.1/_demo' target='_blank'>demo link</a></p>\n \n<h2>通用 HTML attribute</h2>\n<dl>\n   <dt>dragTarget = selector, default = self</dt>\n   <dd>要拖动的 selector, 可以通过该属性指定拖动的父节点<dd>\n\n   <dt>dragIn = selector, default = window</dt>\n   <dd>可拖动的范围</dd>\n\n   <dt>disableDrag = bool, default = false</dt>\n   <dd>是否禁止拖动, 会执行实例初始化</dd>\n\n   <dt>ignoreDrog = bool, default = false</dt>\n   <dd>是否忽略拖动, 不会执行实例初始化</dd>\n\n   <dt>dragInitedCb = function, <b>window 变量域</b></dt>\n   <dd>实例初始化后调用的回调\n<pre>function dragInitedCb( _selector, _dragTarget ){\n   var _ins = this;\n   JC.log( 'dragInitedCb', new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>dragBeforeCb = function, <b>window 变量域</b></dt>\n   <dd>拖动之前调用的回调, 如果返回 false, 将停止拖动操作\n<pre>function dragBeforeCb( _dragTarget, _selector ){\n   var _ins = this;\n   JC.log( 'dragBeforeCb', new Date().getTime() );\n   //return false;\n}</pre>\n   </dd>\n\n   <dt>dragAfterCb = function, <b>window 变量域</b></dt>\n   <dd>拖动完成之后的回调\n<pre>function dragAfterCb( _dragTarget, _selector ){\n   var _ins = this;\n   JC.log( 'dragAfterCb', new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>dragBeginCb = function, <b>window 变量域</b></dt> \n   <dd>拖动开始时的回调\n<pre>function dragBeginCb( _selector, _dragTarget, _movingSelector ){\n   var _ins = this;\n   JC.log( 'dragBeginCb', new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>dragMovingCb = function, <b>window 变量域</b></dt>\n   <dd>拖动移动时的回\n<pre>function dragMovingCb( _selector, _dragTarget, _movingSelector, _x, _y, _evt ){\n   var _ins = this;\n   JC.log( 'dragMovingCb', new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>dragDoneCb = function, <b>window 变量域</b></dt>\n   <dd>拖动完成时的回调\n<pre>function dragDoneCb( _selector, _dragTarget ){\n   var _ins = this;\n   JC.log( 'dragDoneCb', new Date().getTime() );\n}</pre>\n   </dd>\n\n</dl> \n\n<h2>drop HTML attribute</h2>\n<dl>\n   <dt>dropFor = selector</dt>\n   <dd>指定可拖放的 selector</dd>\n\n   <dt>dropSwap = bool, default = false</dt>\n   <dd>\n         是否交换拖曳的位置\n         <br />为真, 交换 selector 的位置\n         <br />不为真, 将 append 到目标 selector\n   </dd>\n\n   <dt>disableDrop = bool, default = false</dt>\n   <dd>是否禁止 拖放功能, 这个属性应当写在  dropFor 的 selector 里</dd>\n\n   <dt>dropDoneCb = function, <b>window 变量域</b></dt>\n   <dd>拖放完成时的回调, 如果返回 false, 将停止拖放操\n<pre>function dropDoneCb( _dragTarget, _dropTarget ){\n   var _initSelector = this;\n   JC.log( 'dropDoneCb', new Date().getTime() );\n   //return false;\n}</pre>\n   </dd>\n\n   <dt>dropDoneAfterCb = function, <b>window 变量域</b></dt>\n   <dd>拖放完成后的回调\n<pre>function dropDoneAfterCb( _dragTarget, _dropTarget ){\n   var _initSelector = this;\n   JC.log( 'dropDoneAfterCb', new Date().getTime() );\n}</pre>\n   </dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-12-26",
            "author": "qiushaowei <suches@btbtd.org> | 75 Team",
            "example": [
                "\n       <h2>拖动示例</h2>\n       <div class=\"JCDrag dragStyle1 js_compDrag\" dragBeginCb=\"dragBeginCb\">\n           normal drag \n           , dragBeginCb=\"dragBeginCb\"\n       </div>\n\n       <h2>拖放示例</h2>\n       <table>\n           <tr>\n               <td>\n                   <div class=\"js_compDrag\" \n                       dropFor=\"(table div.js_compDrag\" \n                       dropSwap=\"true\" \n                       dropDoneCb=\"dropDoneCbAllow\"\n                       >\n                       dropDoneCb=\"dropDoneCbAllow\"\n                   </div>\n               </td>\n               <td>\n                   <div class=\"js_compDrag\" \n                       dropFor=\"(table div.js_compDrag\" \n                       dropSwap=\"true\" \n                       dropDoneCb=\"dropDoneCbBan\"\n                       > \n                       dropDoneCb=\"dropDoneCbBan\"\n                   </div>\n               </td>\n           </tr>\n       </table>"
            ]
        },
        "JC.Fixed": {
            "name": "JC.Fixed",
            "shortname": "JC.Fixed",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 6,
            "description": "内容固定于屏幕某个位置显示\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Fixed.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Fixed/0.1/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-08-18",
            "example": [
                ""
            ]
        },
        "JC.Form": {
            "name": "JC.Form",
            "shortname": "JC.Form",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Form/0.2/Form.js",
            "line": 2,
            "description": "表单常用功能类 JC.Form\n<h1 style=\"color: red;\">这个组件将不再维护, 相关功能请使用抽取出来的对应组件</h1>\n<p>\n     <b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n</p>\n<p>\n     <b>optional</b>: \n     <a href='JC.AutoSelect.html'>JC.AutoSelect</a>\n     , <a href='JC.AutoChecked.html'>JC.AutoChecked</a>\n     , <a href='JC.FormFillUrl.html'>JC.FormFillUrl</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Form.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Form/0.2/_demo' target='_blank'>demo link</a></p>",
            "static": 1,
            "version": "dev 0.1 2013-06-11",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team"
        },
        "JC.FormFillUrl": {
            "name": "JC.FormFillUrl",
            "shortname": "JC.FormFillUrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.FormFillUrl/0.1/FormFillUrl.js",
            "line": 3,
            "description": "FormFillUrl 表单自动填充 URL 参数\n\n<p><b>require</b>:\n  <a href=\"widnow.jQuery.html\">jQuery</a>\n  , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n  | <a href='http://jc2.openjavascript.org/docs_api/classes/JC.FormFillUrl.html' target='_blank'>API docs</a>\n  | <a href='../../modules/JC.FormFillUrl/0.1/_demo' target='_blank'>demo link</a></p>\n \n<h2>页面只要引用本脚本, 默认会处理 form class=\"js_compFormFillUrl\"</h2>\n\n<h2>Form 可用的 HTML attribute</h2>\n\n<dl>\n   <dt>decoder = function, default = decodeURIComponent</dt>\n   <dd>URL 的解码函数<dd>\n\n   <dt>encoder = function, default = encodeURIComponent</dt>\n   <dd>URL 的编码码函数<dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2014-01-19",
            "author": "qiushaowei <suches@btbtd.org> | 75 Team",
            "example": [
                "\n       <h2>JC.FormFillUrl 示例</h2>\n       <form method=\"get\" action=\"\" class=\"js_compFormFillUrl\" charset=\"utf-8\" >\n       </form>"
            ]
        },
        "JC.ImageCutter": {
            "name": "JC.ImageCutter",
            "shortname": "JC.ImageCutter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 2,
            "description": "图片裁切组件\n<br />借助 PHP GD 库进行图片裁切( 不仅限于 PHP GD )\n\n<p><b>require</b>:\n  <a href=\"widnow.jQuery.html\">jQuery</a>\n  , <a href=\"JC.common.html\">JC.common</a>\n  , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n  | <a href='http://jc2.openjavascript.org/docs_api/classes/JC.ImageCutter.html' target='_blank'>API docs</a>\n  | <a href='../../modules/JC.ImageCutter/0.1/_demo' target='_blank'>demo link</a></p>\n \n<h2>页面只要引用本脚本, 默认会处理 div class=\"js_compImageCutter\"</h2>\n\n<h2>可用的 HTML attribute</h2>\n\n<dl>\n   <dt>imageUrl = url string</dt>\n   <dd>图片URL<dd>\n\n   <dt>defaultCoordinate = string</dt>\n   <dd>\n       设置默认选择范围, 有以下三种模式\n       <br />sidelength\n       <br />x, y\n       <br />x, y, sidelength\n   </dd>\n\n   <dt>coordinateSelector =  selector</dt>\n   <dd>保存当前坐标值的 node\n         <br />坐标值分别为: [ x, y, rectWidth, rectHeight, imgWidth, imgHeight ]\n   </dd>\n\n   <dt>imageUrlSelector = selector</dt>\n   <dd>保存当前图片URL的 node</dd>\n\n   <dt>previewSelector = selector</dt>\n   <dd>用于显示预览的 node, 支持多个预览, node 宽高并须为正方形</dd>\n\n   <dt>minRectSidelength = int, default = 50</dt>\n   <dd>裁切块的最小边长</dd>\n\n   <dt>minImageSidelength = int, default = 50</dt>\n   <dd>图片的最小边长</dd>\n\n   <dt>maxImageSidelength = int</dt>\n   <dd>图片的最大边长</dd>\n\n   <dt>cicInitedCb = function</dt>\n   <dd>组件初始化后的回调, <b>window变量域</b>\n<pre>function cicInitedCb(){\n   var _ins = this, _selector = _ins.selector();\n   JC.log( 'cicInitedCb', new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>cicImageInitedCb = function</dt>\n   <dd>图片初始化完成时的回调, <b>window变量域</b>\n<pre>function cicImageInitedCb( _sizeObj, _img ){\n   var _ins = this, _selector = _ins.selector();\n   JC.log( 'cicImageInitedCb', new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>cicCoordinateUpdateCb = function</dt>\n   <dd>更新裁切坐标后的回调, <b>window变量域</b>\n   <br />_corAr = Array = [ x, y, rectWidth, rectHeight, imgWidth, imgHeight ]\n<pre>function cicCoordinateUpdateCb( _corAr, _imgUrl ){\n   var _p = this, _selector = _p.selector();\n   JC.log( 'cicCoordinateUpdateCb', _corAr, _imgUrl, new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>cicDragDoneCb = function</dt>\n   <dd>拖动完成后的回调, <b>window变量域</b>\n     <br/>与 cicCoordinateUpdateCb 的差别是: cicDragDoneCb 初始化不会触发\n<pre>function cicDragDoneCb( _sizeObj ){\n   var _ins = this, _selector = _ins.selector();\n   JC.log( 'cicDragDoneCb', new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>cicErrorCb = function</dt>\n   <dd>发生错误时的回调, <b>window变量域</b>\n     <br />所有错误类型都会触发这个回调\n<pre>function cicErrorCb( _errType, _args ){\n   var _ins = this, _selector = _ins.selector();\n   JC.log( 'cicErrorCb', _errType, new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>cicLoadErrorCb = function</dt>\n   <dd>图片加载错误时的回调, <b>window变量域</b>\n<pre>function cicLoadErrorCb( _imgUrl ){\n   var _ins = this, _selector = _ins.selector();\n   JC.log( 'cicLoadErrorCb',_imgUrl, new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>cicSizeErrorCb = function</dt>\n   <dd>图片尺寸不符合设置要求时的回调, <b>window变量域</b>\n<pre>function cicSizeErrorCb( _width, _height, _imgUrl, _isMax ){\n   var _ins = this, _selector = _ins.selector();\n   JC.log( 'cicSizeErrorCb', _width, _height, _imgUrl, _isMax, new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>cicPreviewSizeErrorCb = function</dt>\n   <dd>图片缩放后尺寸不符合设置要求时的回调, <b>window变量域</b>\n<pre>function cicPreviewSizeErrorCb( _width, _height, _imgUrl, _newSize ){\n   var _ins = this, _selector = _ins.selector();\n   JC.log( 'cicPreviewSizeErrorCb', _width, _height, _imgUrl, _newSize, new Date().getTime() );\n}</pre>\n   </dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-12-13",
            "author": "qiushaowei <suches@btbtd.org> | 75 Team",
            "example": [
                "\n<xmp><table>\n   <tr>\n       <td>\n           <div class=\"js_compImageCutter\"\n               imageUrl=\"data/uploads/h_1680x1050.jpg\"\n               previewSelector=\"(tr div.js_previewItem\"\n               coordinateSelector=\"(td input.js_coordinate\"\n               imageUrlSelector=\"(td input.js_imageUrl\"\n               cicCoordinateUpdateCb=\"cicCoordinateUpdateCb\"\n               >\n           </div>\n           <input type=\"text\" class=\"ipt js_coordinate\" value=\"\" />\n           <input type=\"text\" class=\"ipt js_imageUrl\" value=\"\" />\n       </td>\n       <td>\n           <div class=\"cic_previewItem js_previewItem\" style=\"width: 50px; height: 50px;\"></div>\n           <div class=\"cic_previewItem js_previewItem\" style=\"width: 75px; height: 75px;\"></div>\n           <div class=\"cic_previewItem js_previewItem\" style=\"width: 150px; height: 150px;\"></div>\n       </td>\n   </tr>\n</table></xmp>"
            ]
        },
        "DEV.JC.ImageCutter": {
            "name": "DEV.JC.ImageCutter",
            "shortname": "DEV.JC.ImageCutter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "DEV.JC",
            "file": "../modules/JC.ImageCutter/dev/ImageCutter.js",
            "line": 7,
            "description": "组件用途简述\n\n<p><b>require</b>:\n  <a href=\"widnow.jQuery.html\">jQuery</a>\n  , <a href=\"JC.common.html\">JC.common</a>\n  , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n  | <a href='http://jc2.openjavascript.org/docs_api/classes/JC.ImageCutter.html' target='_blank'>API docs</a>\n  | <a href='../../modules/JC.ImageCutter/dev/_demo' target='_blank'>demo link</a></p>\n \n<h2>页面只要引用本脚本, 默认会处理 div class=\"js_compImageCutter\"</h2>\n\n<h2>可用的 HTML attribute</h2>\n\n<dl>\n   <dt></dt>\n   <dd><dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-12-13",
            "author": "qiushaowei <suches@btbtd.org> | 75 Team",
            "example": [
                "\n       <h2>JC.ImageCutter 示例</h2>"
            ]
        },
        "JC.Lazyload": {
            "name": "JC.Lazyload",
            "shortname": "JC.Lazyload",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Lazyload/0.1/Lazyload.js",
            "line": 6,
            "description": "Lazyload 延时加载\n<p>\n     <b>require</b>: \n         <a href='window.jQuery.html'>jQuery</a>\n         , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.LazyLoad.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.LazyLoad/0.1/_demo' target='_blank'>demo link</a></p>\n\n<p></p>\n\n<h2>可用的 HTML attribute</h2>\n<dl>\n     <dt>lazydirection = string 取值 horizontal、vertical</dt>\n     <dd>声明滚动的方向默认为：vertical\n     <br/><b>horizontal:</b> 水平滚动\n     <br/><b>vertical:</b> 垂直滚动\n     </dd>\n\n     <dt>lazyThreshold = num</dt>\n     <dd>声明当前视窗往下多少个px外的img/textarea延迟加载，默认值为0<br>\n       适当设置此值，可以让用户在拖动时感觉数据已经加载好。\n     </dd>\n\n     <dt>lazyPlaceholder = string</dt>\n     <dd>声明图片加载前src的地址，默认为一个1x1像素的空白点</dd>\n\n     <dt>lazycontainer = css selector</dt>\n     <dd>声明可视容器，默认为window</dd>\n\n     <dt>lazydatatype = string 取值ajax</dt>\n     <dd>声明加载的数据类型,</dd>\n\n     <dt>lazydataSource = css selector</dt>\n     <dd>声明要延时加载的内容textarea|img <br/>\n         如果缺省该参数，表明要延时加载的是ajax数据</dd>\n\n     <dt>lazyajaxurl = string</dt>\n     <dd>声明ajax加载的数据接口\n         <dl>\n             <dt>数据格式</dt>\n             <dd>\n                 {errorno: 0,\n                 data: html,\n                 errormsg: \"\"}\n             </dd>\n         </dl>\n     </dd>\n  \n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2014-02-13",
            "author": "zuojing   <zuojing1013@gmail.com> | 75 Team"
        },
        "JC.LunarCalendar": {
            "name": "JC.LunarCalendar",
            "shortname": "JC.LunarCalendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.LunarCalendar",
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 6,
            "description": "农历日历组件\n<br />全局访问请使用 JC.LunarCalendar 或 LunarCalendar\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.LunarCalendar.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.LunarCalendar/0.1/_demo/' target='_blank'>demo link</a></p>\n<p>\nDOM 加载完毕后\n<br />会自动初始化页面可识别的node, 目前可识别: div.js_LunarCalendar, td.js_LunarCalendar, li.js_LunarCalendar\n<br />Ajax 加载内容后, 如果有日历组件需求的话, 需要手动初始化 JC.LunarCalendar.init( _selector );\n</p>\n\n<h2>可用的 HTML attribute</h2>\n<dl>\n     <dt>clcDate = date string</dt>\n     <dd>设置日历的默认日期</dd>\n\n     <dt>minvalue = date string</dt>\n     <dd>设置日历的有效最小选择范围, 格式YYYY-mm-dd</dd>\n\n     <dt>maxvalue = date string</dt>\n     <dd>设置日历的有效最大选择范围, 格式YYYY-mm-dd</dd>\n\n     <dt>hidecontrol = bool, default = false</dt>\n     <dd>是否隐藏日历将操作控件</dd>\n\n     <dt>nopreviousfestivals = bool, default = false</dt>\n     <dd>不显示上个月的节日</dd>\n\n     <dt>nonextfestivals = bool, default = false</dt>\n     <dd>不显示下个月的节日</dd>\n\n     <dt>clcSelectedItemCb = function, <b>window变量域</b></dt>\n     <dd>选择日期时触发的回调\n<pre>function clcSelectedItemCb1( _date, _td, _a ){\n   var _ins = this;\n   JC.log( _date );\n}</pre>\n     </dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "指定要显示日历的选择器, 如果不显示指定该值, 默认为 document.body",
                    "type": "Selector"
                },
                {
                    "name": "_date",
                    "description": "日历的当前日期, 如果不显示指定该值, 默认为当天",
                    "type": "Date"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-06-13"
        },
        "JC.LunarCalendar.View": {
            "name": "JC.LunarCalendar.View",
            "shortname": "JC.LunarCalendar.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.LunarCalendar",
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 587,
            "description": "LunarCalendar 视图类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "JC.LunarCalendar.Model"
                }
            ]
        },
        "JC.LunarCalendar.Model": {
            "name": "JC.LunarCalendar.Model",
            "shortname": "JC.LunarCalendar.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.LunarCalendar",
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 779,
            "description": "LunarCalendar 数据模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_container",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_date",
                    "description": "",
                    "type": "Date"
                }
            ]
        },
        "JC.NumericStepper": {
            "name": "JC.NumericStepper",
            "shortname": "JC.NumericStepper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.NumericStepper/0.1/NumericStepper.js",
            "line": 2,
            "description": "数值加减\n<br />响应式初始化\n\n<p><b>require</b>:\n  <a href=\"widnow.jQuery.html\">jQuery</a>\n  , <a href=\"JC.common.html\">JC.common</a>\n  , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n  | <a href='http://jc2.openjavascript.org/docs_api/classes/JC.NumericStepper.html' target='_blank'>API docs</a>\n  | <a href='../../modules/JC.NumericStepper/0.1/_demo' target='_blank'>demo link</a></p>\n \n<h2>页面只要引用本脚本, 默认会处理 (div|span) class=\"js_compNumericStepper\"</h2>\n\n<h2>可用的 HTML attribute</h2>\n<dl>\n   <dt>cnsMinusButton = selector</dt>\n   <dd>减少数值的 selector<dd>\n\n   <dt>cnsPlusButton = selector</dt>\n   <dd>增加数值的 selector<dd>\n\n   <dt>cnsTarget = selector</dt>\n   <dd>目标文本框的 selector</dd>\n\n   <dt>cnsChangeCb = function</dt>\n   <dd>内容改变后的回调\n<pre>function cnsChangeCb( _newVal, _oldVal, _ins ){\n   var _ipt = $(this);\n   JC.log( 'cnsChangeCb: ', _newVal, _oldVal );\n}</pre>\n   </dd>\n\n   <dt>cnsBeforeChangeCb = function</dt>\n   <dd>内容改变前的回调, 如果显式返回 false 将终止内容变更\n<pre>function cnsBeforeChangeCb( _newVal, _oldVal, _ins ){\n   var _ipt = $(this);\n   JC.log( 'cnsBeforeChangeCb: ', _newVal, _oldVal );\n   if( _newVal > 5 ) return false;\n}</pre>\n   </dd>\n</dl> \n<h2>textbox 可用的 HTML attribute</h2>\n<dl>\n   <dt>minvalue = number</dt>\n   <dd>最小值</dd>\n\n   <dt>maxvalue = number</dt>\n   <dd>最大值</dd>\n\n   <dt>step = number, default = 1</dt>\n   <dd>每次变更的步长</dd>\n\n   <dt>fixed = int, default = 0</dt>\n   <dd>显示多少位小数点</dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2014-01-18",
            "author": "qiushaowei <suches@btbtd.org> | 75 Team",
            "example": [
                "\n       <h2>JC.NumericStepper 示例</h2>\n       <span class=\"js_compNumericStepper\"\n           cnsMinusButton=\"|button:first\"\n           cnsPlusButton=\"|button:last\"\n           cnsTarget=\"|input[type=text]\"\n           cnsChangeCb=\"cnsChangeCb\"\n           >\n           <button type=\"button\" class=\"cnsIcon cnsMinus\"></button>\n           <input type=\"text\" value=\"0\" class=\"ipt\" minvalue=\"0\" maxvalue=\"10\" />\n           <button type=\"button\" class=\"cnsIcon cnsPlus\"></button>\n       </span>"
            ]
        },
        "JC.Dialog": {
            "name": "JC.Dialog",
            "shortname": "JC.Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Dialog",
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 3,
            "description": "带蒙板的会话弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Dialog.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Panel/0.2/_demo' target='_blank'>demo link</a></p>\n<p><b>see also</b>: <a href='JC.Panel.html'>JC.Panel</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "自定义弹框模板, 如果 _selector不能解析为 HTML, 将视为@param _headers",
                    "type": "Selector|string"
                },
                {
                    "name": "_headers",
                    "description": "定义模板的 header 文字, 如果 _selector 不能解析为HTML, 视视为@param _bodys",
                    "type": "String"
                },
                {
                    "name": "_bodys",
                    "description": "定义模板的 body 文字, 如果 _selector 不能解析为HTML, 视视为@param _footers",
                    "type": "String"
                },
                {
                    "name": "_footers",
                    "description": "定义模板的 footer 文字",
                    "type": "String"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.Dialog.mask": {
            "name": "JC.Dialog.mask",
            "shortname": "JC.Dialog.mask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Dialog",
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 65,
            "description": "显示或隐藏 蒙板\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_isHide",
                    "description": "空/假 显示蒙板, 为真 隐藏蒙板",
                    "type": "Bool"
                }
            ]
        },
        "JC.Dialog.msgbox": {
            "name": "JC.Dialog.msgbox",
            "shortname": "JC.Dialog.msgbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Dialog",
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 2,
            "description": "会话框 msgbox 提示 (不带按钮)\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Dialog.msgbox.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Panel/0.2/_demo' target='_blank'>demo link</a></p>\n<p><b>see also</b>: <a href='JC.Dialog.html'>JC.Dialog</a></p>",
            "extends": "JC.Dialog",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "弹框自动关闭后的的回调, <b>如果 _cb 为 int 值, 将视为 _closeMs</b>\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>",
                    "type": "Function"
                },
                {
                    "name": "_closeMs",
                    "description": "自动关闭的间隔, 单位毫秒, 默认 2000",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.Dialog.alert": {
            "name": "JC.Dialog.alert",
            "shortname": "JC.Dialog.alert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Dialog",
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 45,
            "description": "会话框 alert 提示\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Dialog.alert.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Panel/0.2/_demo' target='_blank'>demo link</a></p>\n<p><b>see also</b>: <a href='JC.Dialog.html'>JC.Dialog</a></p>",
            "extends": "JC.Dialog",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.Dialog.confirm": {
            "name": "JC.Dialog.confirm",
            "shortname": "JC.Dialog.confirm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Dialog",
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 85,
            "description": "会话框 confirm 提示\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Dialog.confirm.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Panel/0.2/_demo' target='_blank'>demo link</a></p>\n<p><b>see also</b>: <a href='JC.Dialog.html'>JC.Dialog</a></p>",
            "extends": "JC.Dialog",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>",
                    "type": "Function"
                },
                {
                    "name": "_cancelCb",
                    "description": "点击弹框取消按钮的回调\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.Panel": {
            "name": "JC.Panel",
            "shortname": "JC.Panel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 4,
            "description": "弹出层基础类 JC.Panel\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Panel.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Panel/0.2/_demo' target='_blank'>demo link</a></p>\n\n<h2>Panel Layout 可用的 html attribute</h2>\n<dl>\n     <dt>panelclickclose = bool</dt>\n     <dd>点击 Panel 外时, 是否关闭 panel</dd>\n\n     <dt>panelautoclose = bool</dt>\n     <dd>Panel 是否自动关闭, 默认关闭时间间隔 = 2000 ms</dd>\n\n     <dt>panelautoclosems = int, default = 2000 ms</dt>\n     <dd>自动关闭 Panel 的时间间隔</dd>\n</dl>\n<h2>a, button 可用的 html attribute( 自动生成弹框)</h2>\n<dl>\n     <dt>paneltype = string, require</dt>\n     <dd>\n         弹框类型: alert, confirm, msgbox, panel \n         <br />dialog.alert, dialog.confirm, dialog.msgbox, dialog\n     </dd>\n\n     <dt>panelmsg = string</dt>\n     <dd>要显示的内容</dd>\n\n     <dt>panelmsgBox = script selector</dt>\n     <dd>要显示的脚本模板, 如果需要显示大量 HTML, 应该使用这个属性</dd>\n\n     <dt>panelstatus = int, default = 0</dt>\n     <dd>\n         弹框状态: 0: 成功, 1: 失败, 2: 警告 \n         <br /><b>类型不为 panel, dialog 时生效</b>\n     </dd>\n\n     <dt>panelcallback = function</dt>\n     <dd>\n         点击确定按钮的回调, <b>window 变量域</b>\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>\n     </dd>\n\n     <dt>panelcancelcallback = function</dt>\n     <dd>\n         点击取消按钮的回调, <b>window 变量域</b>\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>\n     </dd>\n\n     <dt>panelclosecallback = function</dt>\n     <dd>\n         弹框关闭时的回调, <b>window 变量域</b>\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>\n     </dd>\n\n     <dt>panelbutton = int, default = 0</dt>\n     <dd>\n         要显示的按钮, 0: 无, 1: 确定, 2: 确定, 取消\n         <br /><b>类型为 panel, dialog 时生效</b>\n     </dd>\n\n     <dt>panelheader = string</dt>\n     <dd>\n         panel header 的显示内容\n         <br /><b>类型为 panel, dialog 时生效</b>\n     </dd>\n\n     <dt>panelheaderBox = script selector</dt>\n     <dd>\n         panel header 的显示内容\n         <br />要显示的脚本模板, 如果需要显示大量 HTML, 应该使用这个属性\n         <br /><b>类型为 panel, dialog 时生效</b>\n     </dd>\n\n     <dt>panelfooterbox = script selector</dt>\n     <dd>\n         panel footer 的显示内容\n         <br />要显示的脚本模板, 如果需要显示大量 HTML, 应该使用这个属性\n         <br /><b>类型为 panel, dialog 时生效</b>\n     </dd>\n\n     <dt>panelhideclose = bool, default = false</dt>\n     <dd>\n         是否隐藏关闭按钮\n         <br /><b>类型为 panel, dialog 时生效</b>\n     </dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "自定义弹框模板, 如果 _selector不能解析为 HTML, 将视为@param _headers",
                    "type": "Selector|string"
                },
                {
                    "name": "_headers",
                    "description": "定义模板的 header 文字, 如果 _selector 不能解析为HTML, 视视为@param _bodys",
                    "type": "String"
                },
                {
                    "name": "_bodys",
                    "description": "定义模板的 body 文字, 如果 _selector 不能解析为HTML, 视视为@param _footers",
                    "type": "String"
                },
                {
                    "name": "_footers",
                    "description": "定义模板的 footer 文字",
                    "type": "String"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-06-04",
            "example": [
                "\n           <script src=\"../../../lib.js\"></script>\n           <script src=\"../../../config.js\"></script>\n           <script>\n               var btnstr = [\n                   '<div style=\"text-align:center\" class=\"UButton\">'\n                   , '<button type=\"button\" eventtype=\"confirm\">确定</button>'\n                   , '<button type=\"button\" eventtype=\"cancel\">取消</button>\\n'\n                   , '</div>'\n               ].join('');\n\t\t\n               requirejs( [ 'JC.Panel' ], function(){\n                   tmpPanel = new JC.Panel( '默认panel', '<h2>test content</h2>' + btnstr, 'test footer');\n                   tmpPanel.on('close', function(_evt, _panel){\n                       JC.log('user close evnet');\n                   });\n                   tmpPanel.show( 0 );\n               });\n           </script>"
            ]
        },
        "JC.Panel.Model": {
            "name": "JC.Panel.Model",
            "shortname": "JC.Panel.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Panel",
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 680,
            "description": "存储 Panel 的基础数据类\n<br /><b>这个类为 Panel 的私有类</b>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "自定义弹框模板, 如果 _selector不能解析为 HTML, 将视为@param _headers",
                    "type": "Selector|string"
                },
                {
                    "name": "_headers",
                    "description": "定义模板的 header 文字, 如果 _selector 不能解析为HTML, 视视为@param _bodys",
                    "type": "String"
                },
                {
                    "name": "_bodys",
                    "description": "定义模板的 body 文字, 如果 _selector 不能解析为HTML, 视视为@param _footers",
                    "type": "String"
                },
                {
                    "name": "_footers",
                    "description": "定义模板的 footer 文字",
                    "type": "String"
                }
            ]
        },
        "JC.Panel.View": {
            "name": "JC.Panel.View",
            "shortname": "View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC"
        },
        "JC.hideAllPanel": {
            "name": "JC.hideAllPanel",
            "shortname": "JC.hideAllPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 1069,
            "description": "隐藏或者清除所有 Panel\n<h2>使用这个方法应当谨慎, 容易为DOM造成垃圾Panel</h2>\n<br /><b>注意</b>: 这是个方法, 写成class是为了方便生成文档",
            "is_constructor": 1,
            "static": 1,
            "params": [
                {
                    "name": "_isClose",
                    "description": "从DOM清除/隐藏所有Panel(包刮 JC.alert, JC.confirm, JC.Panel, JC.Dialog)\n                                    <br />, true = 从DOM 清除, false = 隐藏, 默认 = false( 隐藏 )",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n    JC.hideAllPanel();         //隐藏所有Panel\n    JC.hideAllPanel( true );   //从DOM 清除所有Panel"
            ]
        },
        "JC.hideAllPopup": {
            "name": "JC.hideAllPopup",
            "shortname": "JC.hideAllPopup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 1092,
            "description": "隐藏 或 从DOM清除所有 JC.alert/JC.confirm\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_isClose",
                    "description": "为真从DOM清除JC.alert/JC.confirm, 为假隐藏, 默认为false",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n     JC.hideAllPopup();         //隐藏所有JC.alert, JC.confirm\n     JC.hideAllPopup( true );   //从 DOM 清除所有 JC.alert, JC.confirm"
            ]
        },
        "JC.msgbox": {
            "name": "JC.msgbox",
            "shortname": "JC.msgbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 2,
            "description": "msgbox 提示 popup\n<br /> 这个是不带蒙板 不带按钮的 popup 弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.msgbox.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Panel/0.2/_demo' target='_blank'>demo link</a></p>\n<p><b>see also</b>: <a href='JC.Panel.html'>JC.Panel</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "触发弹框的事件源 selector, 不为空显示 缓动效果, 为空居中显示",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "弹框自动关闭后的的回调, <b>如果 _cb 为 int 值, 将视为 _closeMs</b>\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>",
                    "type": "Function"
                },
                {
                    "name": "_closeMs",
                    "description": "自动关闭的间隔, 单位毫秒, 默认 2000",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.alert": {
            "name": "JC.alert",
            "shortname": "JC.alert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 49,
            "description": "alert 提示 popup\n<br /> 这个是不带 蒙板的 popup 弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.alert.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Panel/0.2/_demo' target='_blank'>demo link</a></p>\n<p><b>see also</b>: <a href='JC.Panel.html'>JC.Panel</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "触发弹框的事件源 selector, 不为空显示 缓动效果, 为空居中显示",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.confirm": {
            "name": "JC.confirm",
            "shortname": "JC.confirm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 87,
            "description": "confirm 提示 popup\n<br /> 这个是不带 蒙板的 popup 弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.confirm.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Panel/0.2/_demo' target='_blank'>demo link</a></p>\n<p><b>see also</b>: <a href='JC.Panel.html'>JC.Panel</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "触发弹框的事件源 selector, 不为空显示 缓动效果, 为空居中显示",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>",
                    "type": "Function"
                },
                {
                    "name": "_cancelCb",
                    "description": "点击弹框取消按钮的回调\n<pre>function( _evtName, _panelIns ){\n   var _btn = $(this);\n}</pre>",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.Placeholder": {
            "name": "JC.Placeholder",
            "shortname": "JC.Placeholder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Placeholder/0.1/Placeholder.js",
            "line": 2,
            "description": "Placeholder 占位符提示功能\n<p>\n     <b>require</b>: \n         <a href='window.jQuery.html'>jQuery</a>\n         , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Placeholder.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Placeholder/0.1/_demo' target='_blank'>demo link</a></p>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-10-19"
        },
        "JC.PopTips": {
            "name": "JC.PopTips",
            "shortname": "JC.PopTips",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.PopTips/0.1/PopTips.js",
            "line": 2,
            "description": "PopTips 带箭头的气泡提示框功能\n<p>\n     <b>require</b>: \n         <a href='window.jQuery.html'>jQuery</a>\n         , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.PopTips.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.PopTips/0.1/_demo' target='_blank'>demo link</a></p>\n\n<h2>页面只要引用本文件, 默认会自动初始化span|em|a|b为class=\"js_compPoptips\"的提示气泡</h2>\n<p></p>\n\n\n<h2>可用的 HTML attribute</h2>\n\n<dl>\n   <dt>content = string </dt>\n   <dd>\n      <p>声明气泡提示的内容，如果需要提示html内容那么用<b>htmlContent</b>属性<br>\n      如果没有设置则去查找title属性，如果title也没有设置，<br/>\n        则将触发元素的text作为提示内容。</p>\n   </dd>\n\n   <dt>htmlContent</dt>\n   <dd>\n      <p>声明气泡提示的内容支持脚本模板<br>\n       如果有设置该属性那么会优先选用htmlContent提供的内容\n      </p>\n   </dd>\n\n   <dt>theme = yellow | blue | white | green, <a href=\"../../modules/JC.PopTips/0.1/res/default/style.html\" target=\"_blank\">查看</a> </dt>\n   <dd>\n      气泡主题，提供黄色、蓝色、白色、绿色四种样式，默认为 yellow.\n      <p><b>yellow：</b>黄色<br/>\n      <b>blue：</b>蓝色<br/>\n      <b>white：</b>白色<br/>\n      <b>green：</b>绿色</p>\n   </dd>\n\n   <dt>triggerType = hover | click</dt>\n   <dd>\n       触发方式: 支持hover和click\n       <p>默认为hover</p>\n   </dd>\n\n   <dt>arrowPosition = left | right | top | bottom</dt>\n   <dd>\n       声明箭头的方向，默认值为left\n       <p><b>left:</b>箭头向左（提示框在触发元素的右边）如果右边空间不够，提示框自动显示在左边，如果左边空间不够，提示框显示在上方，如果上方空间，提示框显示到下方<br/>\n       <b>right:</b>箭头向右（提示框在触发元素的左边）如果左边空间不够，提示框自动显示在右边，如果右边空间不够，提示框显示在上方，如果上方空间，提示框显示到下方<br/>\n       <b>top:</b>箭头向上（提示框在触发元素的下边）如果下边不够，提示框自动显示到上边<br/>\n       <b>bottom:</b>箭头向下（提示框在触发元素的上边）如果上边不够，提示框自动显示到下边</p>    \n   </dd>\n\n   <dt>arrowPositionOffset = left | right | top , <a href=\"../../modules/JC.PopTips/0.1/res/default/style.html#pos\" target=\"_blank\">查看</a></dt>\n   <dd>\n       声明箭头在提示框的位置，默认居中\n       <p>如果arrowPosition = left | right, arrowPositionOffset可以设置为top</p>\n       <p>如果arrowPosition = top | bottom, arrowPositionOffset可以设置为left | right</p>\n   </dd>\n\n   <dt>offsetXY = num,num</dt>\n   <dd>\n       声明提示框相对于当前位置的偏移位置(x 坐标，y 坐标)，默认值为0\n       <p>x < 0，往左偏移，x > 0 往右偏移 <br/>\n        y < 0, 往上偏移，y > 0 往下偏移 <br/>\n        两个数值以<b>逗号</b>分隔，如果只写一个值表示 y 坐标为0。</p>\n   </dd>\n\n   <dt>popTipsWidth = num</dt>\n   <dd>\n       声明提示框的宽度，默认自适应\n   </dd>\n\n   <dt>popTipsHeight = num</dt>\n   <dd>\n       声明提示框的高度，默认自适应\n   </dd>\n\n   <dt>beforeShowCallback = function</dt>\n   <dd>\n       气泡显示前, 触发的回调, <b>window 变量域</b>\n<pre>function beforeShowCallback( _selector ){\n   var _ins = this;\n   JC.log( 'beforeShowCallback', new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>afterHideCallback = function</dt>\n   <dd>\n       气泡隐藏后, 触发的回调, <b>window 变量域</b>\n<pre>function afterHideCallback( _selector ){\n   var _ins = this;\n   JC.log( 'afterHideCallback', new Date().getTime() );\n}</pre>\n   </dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-12-13",
            "author": "zuojing   <zuojing1013@gmail.com> | 75 Team",
            "example": [
                "\n\t<span class=\"js_compPopTips\" style=\"margin-top:50px; margin-left:200px; display:inline-block;\"  \n\t\tcontent=\"1.这个tip显示在右边<br>2.古希腊学者亚里士多<br>3.古希腊学者亚里士多<br>4.古希腊学者亚里士多\"  \n\t\ttheme=\"yellow\" \n\t\tarrowposition=\"left\"\n\t\ttriggerType=\"click\"\n\t\t>\n\t\t<span>古希腊学者亚里士多德曾编<br>\n\t\t\t写过全面讲述当时学问的讲义，<br>\n\t\t\t被西方奉为“百科全书之父”，<br>\n\t\t\t中国汉朝初年的《尔雅》，<br>\n\t\t\t是中国百科全书性质著作的渊源。</span>\n\t</span>"
            ]
        },
        "JC.Slider": {
            "name": "JC.Slider",
            "shortname": "JC.Slider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Slider",
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 3,
            "description": "Slider 划动菜单类\n<br />页面加载完毕后, Slider 会查找那些有 class = js_autoSlider 的标签进行自动初始化\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Slider.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Slider/0.1/_demo' target='_blank'>demo link</a></p>\n<h2> 可用的 html attribute </h2>\n<dl>\n     <dt>slidersubitems</dt>\n     <dd>指定具体子元素是那些, selector ( 子元素默认是 layout的子标签 )</dd>\n\n     <dt>sliderleft</dt>\n     <dd>左移的触发selector</dd>\n\n     <dt>sliderright</dt>\n     <dd>右移的触发selector</dd>\n\n     <dt>sliderwidth</dt>\n     <dd>主容器宽度</dd>\n\n     <dt>slideritemwidth</dt>\n     <dd>子元素的宽度</dd>\n\n     <dt>sliderhowmanyitem</dt>\n     <dd>每次滚动多少个子元素, 默认1</dd>\n\n     <dt>sliderdefaultpage</dt>\n     <dd>默认显示第几页</dd>\n\n     <dt>sliderstepms</dt>\n     <dd>滚动效果运动的间隔时间(毫秒), 默认 5</dd>\n\n     <dt>sliderdurationms</dt>\n     <dd>滚动效果的总时间</dd>\n\n     <dt>sliderdirection</dt>\n     <dd>滚动的方向, 默认 horizontal, { horizontal, vertical }</dd>\n\n     <dt>sliderloop</dt>\n     <dd>是否循环滚动</dd>\n\n     <dt>sliderinitedcb</dt>\n     <dd>初始完毕后的回调函数, 便于进行更详细的声明</dd>\n\n     <dt>sliderautomove</dt>\n     <dd>是否自动滚动</dd>\n\n     <dt>sliderautomovems</dt>\n     <dd>自动滚动的间隔</dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-07-20",
            "example": [
                "\n           <style>\n               .hslide_list dd{ display: none; }\n\n               .hslide_list dd, .hslide_list dd img{\n                   width: 160px;\n                   height: 230px;\n               }\n\n               .slider_one_item dd, .slider_one_item dd img{\n                   width: 820px;\n                   height: 230px;\n               }\n           </style>\n           <link href='../../Slider/res/hslider/style.css' rel='stylesheet' />\n           <script src=\"../../../lib.js\"></script>\n           <script src=\"../../../config.js\"></script>\n           <script>\n               JC.debug = true;\n               requirejs( [ 'JC.Slider' ] );\n\n               function sliderinitedcb(){\n                   var _sliderIns = this;\n\n                   JC.log( 'sliderinitedcb', new Date().getTime() );\n\n                   _sliderIns.on('outmin', function(){\n                       JC.log( 'slider outmin' );\n                   }).on('outmax', function(){\n                       JC.log( 'slider outmax' );\n                   }).on('movedone', function( _evt, _oldpointer, _newpointer){\n                       JC.log( 'slider movedone', _evt, _oldpointer, _newpointer );\n                   }).on('beforemove', function( _evt, _oldpointer, _newpointer ){\n                       JC.log( 'slider beforemove', _evt, _oldpointer, _newpointer );\n                   });\n               }\n           </script>\n           <table class=\"hslide_wra\">\n               <tr>\n                   <td class=\"hslide_left\">\n                       <a href=\"javascript:\" hidefocus=\"true\" style=\"outline:none;\" class=\"js_slideleft\">左边滚动</a>\n                   </td>\n                   <td class=\"hslide_mid\">\n                       <dl \n                           style=\"width:820px; height: 230px; margin:0 5px;\"\n                           class=\"hslide_list clearfix js_slideList js_autoSlider\" \n                           slidersubitems=\"> dd\" sliderleft=\"a.js_slideleft\" sliderright=\"a.js_slideright\" \n                           sliderwidth=\"820\" slideritemwidth=\"160\"\n                           sliderdirection=\"horizontal\" sliderhowmanyitem=\"5\"\n                           sliderloop=\"false\" sliderdurationms=\"300\"\n                           sliderinitedcb=\"sliderinitedcb\"\n                           >\n                           <dd style=\"display: block; left: 0; \" class=\"tipsItem\">content...</dd>\n                           <dd style=\"display: block; left: 0; \" class=\"tipsItem\">content...</dd>\n                           <dd style=\"display: block; left: 0; \" class=\"tipsItem\">content...</dd>\n                       </dl>\n                   </td>\n                   <td class=\"hslide_right\">\n                       <a href=\"javascript:\" hidefocus=\"true\" style=\"outline:none;\" class=\"js_slideright\">右边滚动</a>\n                   </td>\n               </tr>\n           </table>\n"
            ]
        },
        "JC.Slider.Model": {
            "name": "JC.Slider.Model",
            "shortname": "JC.Slider.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Slider",
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 427,
            "description": "Slider 的通用模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_layout",
                    "description": "",
                    "type": "Selector"
                }
            ]
        },
        "JC.Suggest": {
            "name": "JC.Suggest",
            "shortname": "JC.Suggest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 3,
            "description": "Suggest 关键词补全提示类\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Suggest.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Suggest/0.1/_demo' target='_blank'>demo link</a></p>\n<h2>可用的 HTML attribute</h2>\n<dl>\n     <dt>sugwidth: int</dt>\n     <dd>显示列表的宽度</dd>\n\n     <dt>suglayout: selector</dt>\n     <dd>显示列表的容器</dd>\n\n     <dt>sugdatacallback: string</dt>\n     <dd>\n         请求 JSONP 数据的回调名\n         <br /><b>注意:</b> 是字符串, 不是函数, 并且确保 window 下没有同名函数\n     </dd>\n\n     <dt>suginitedcallback: string</dt>\n     <dd>\n         初始化完毕后的回调名称\n     </dd>\n\n     <dt>sugurl: string</dt>\n     <dd>\n         数据请求 URL API\n         <br />例: http://sug.so.360.cn/suggest/word?callback={1}&encodein=utf-8&encodeout=utf-8&word={0} \n         <br />{0}=关键词, {1}=回调名称\n     </dd>\n\n     <dt>sugqueryinterval: int, default = 200</dt>\n     <dd>\n         设置用户输入内容时, 响应的间隔, 避免不必要的请求\n     </dd>\n\n     <dt>sugneedscripttag: bool, default=true</dt>\n     <dd>\n         是否需要 自动添加 script 标签\n         <br />Sugggest 设计为支持三种数据格式: JSONP, AJAX, static data\n         <br />目前只支持 JSONP 数据\n     </dd>\n\n     <dt>sugselectedcallback: function</dt>\n     <dd>用户鼠标点击选择关键词后的回调</dd>\n\n     <dt>sugdatafilter: function</dt>\n     <dd>数据过滤回调</dd>\n\n     <dt>sugsubtagname: string, default = dd</dt>\n     <dd>显式定义 suggest 列表的子标签名</dd>\n\n     <dt>suglayouttpl: string</dt>\n     <dd>显式定义 suggest 列表显示模板</dd>\n\n     <dt>sugautoposition: bool, default = false</dt>\n     <dd>式声明是否要自动识别显示位置</dd>\n\n     <dt>sugoffsetleft: int, default = 0</dt>\n     <dd>声明显示时, x轴的偏移像素</dd>\n\n     <dt>sugoffsettop: int, default = 0</dt>\n     <dd>声明显示时, y轴的偏移像素</dd>\n\n     <dt>sugoffsetwidth: int, default = 0</dt>\n     <dd>首次初始化时, layout的偏移宽度</dd>\n\n     <dt>sugplaceholder: selector</dt>\n     <dd>声明自动定位时, 显示位置的占位符标签</dd>\n\n     <dt>sugprevententer: bool, default = false</dt>\n     <dd>回车时, 是否阻止默认事件, 为真将阻止表单提交事件</dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-08-11",
            "example": [
                ""
            ]
        },
        "JC.Tab": {
            "name": "JC.Tab",
            "shortname": "JC.Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tab",
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 3,
            "description": "Tab 选项卡\n<br />响应式初始化, 当鼠标移动到 Tab 时, Tab 会尝试自动初始化 class = \"<b>.js_autoTab</b>\" 的 HTML 标签\n<br />需要手动初始化, 请使用: var _ins = new JC.Tab( _tabSelector );\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Tab.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Tab/0.1/_demo/' target='_blank'>demo link</a></p>\n<h2>Tab 容器的HTML属性</h2>\n<dl>\n     <dt>tablabels</dt>\n     <dd>声明 tab 标签的选择器语法</dd>\n\n     <dt>tabcontainers</dt>\n     <dd>声明 tab 容器的选择器语法</dd>\n\n     <dt>tabactiveclass</dt>\n     <dd>声明 tab当前标签的显示样式名, 默认为 cur</dd>\n\n     <dt>tablabelparent</dt>\n     <dd>声明 tab的当前显示样式是在父节点, 默认为 tab label 节点</dd>\n\n     <dt>tabactivecallback</dt>\n     <dd>当 tab label 被触发时的回调</dd>\n\n     <dt>tabchangecallback</dt>\n     <dd>当 tab label 变更时的回调</dd>\n</dl>\n<h2>Label(标签) 容器的HTML属性(AJAX)</h2>\n<dl>\n     <dt>tabajaxurl</dt>\n     <dd>ajax 请求的 URL 地址</dd>\n\n     <dt>tabajaxmethod</dt>\n     <dd>ajax 请求的方法( get|post ), 默认 get</dd>\n\n     <dt>tabajaxdata</dt>\n     <dd>ajax 请求的 数据, json</dd>\n\n     <dt>tabajaxcallback</dt>\n     <dd>ajax 请求的回调</dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的 Tab 选择器",
                    "type": "Selector|string"
                },
                {
                    "name": "_triggerTarget",
                    "description": "初始完毕后要触发的 label",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 75 Team",
            "date": "2013-07-04",
            "example": [
                "\n           <link href='../../../modules/JC.Tab/res/default/style.css' rel='stylesheet' />\n           <script src=\"../../../lib.js\"></script>\n           <script src=\"../../../config.js\"></script>\n           <script>\n               JC.debug = 1;\n\n               requirejs( [ 'JC.Tab' ], function(){\n                   JC.f.httpRequire();\n\n                   JC.Tab.ajaxCallback =\n                       function( _data, _label, _container ){\n                           _data && ( _data = $.parseJSON( _data ) );\n                           if( _data && _data.errorno === 0 ){\n                               _container.html( JC.f.printf( '<h2>JC.Tab.ajaxCallback</h2>{0}', _data.data ) );\n                           }else{\n                               Tab.isAjaxInited( _label, 0 );\n                               _container.html( '<h2>内容加载失败!</h2>' );\n                           }\n                       };\n               });\n\n               function tabactive( _evt, _container, _tabIns ){\n                   var _label = $(this);\n                   JC.log( 'tab ', _evt.type, _label.html(), new Date().getTime() );\n                   if( JC.Tab.isAjax( _label ) && ! JC.Tab.isAjaxInited( _label ) ){\n                       _container.html( '<h2>内容加载中...</h2>' );\n                   }\n               }\n\n               function tabchange( _container, _tabIns ){\n                   var _label = $(this);\n                   JC.log( 'tab change: ', _label.html(), new Date().getTime() );\n               }\n\n               function ajaxcallback( _data, _label, _container ){\n                   _data && ( _data = $.parseJSON( _data ) );\n                   if( _data && _data.errorno === 0 ){\n                       _container.html( JC.f.printf( '<h2>label attr ajaxcallback</h2>{0}', _data.data ) );\n                   }else{\n                       Tab.isAjaxInited( _label, 0 );\n                       _container.html( '<h2>内容加载失败!</h2>' );\n                   }\n               };\n           </script>\n\n           <dl class=\"def\">\n               <dt>JC.Tab 示例 - 静态内容</dt>\n               <dd>\n               <div class=\"le-tabview js_autoTab\" tablabels=\"ul.js_tabLabel > li > a\" tabcontainers=\"div.js_tabContent > div\" \n                                                   tabactiveclass=\"active\" tablabelparent=\"li\" \n                                                   tabactivecallback=\"tabactive\" tabchangecallback=\"tabchange\"\n                                                   >\n                       <ul class=\"le-tabs js_tabLabel\">\n                           <li class=\"active\"><a href=\"javascript:\">电视剧</a></li>\n                           <li><a href=\"javascript:\">电影</a></li>\n                           <li><a href=\"javascript:\">综艺</a></li>\n                           <li><a href=\"javascript:\">热点</a></li>\n                       </ul>\n                       <div class=\"views js_tabContent\">\n                           <div class=\"view-item active\">1. 集地议送能拿距还杨雷火，永鲜提只风超洋轻绿动视落清各只江执口。</div>\n                           <div class=\"view-item\">2. 相送黄血富打万念却烟会华它表本雷烟形烟消卷效难标否标滑固小实。</div>\n                           <div class=\"view-item\">3. 理往局背剧养认被站推简沉形括於穿短，精白自没路绿往优八益是入。</div>\n                           <div class=\"view-item\">4. 鲁杆格滑那双来班五材实死听顶脱本续克修先课丝另乡型茶父报孔图。</div>\n                       </div>\n                   </div>\n               </dd>\n           </dl>\n\n           <dl class=\"def\">\n               <dt>JC.Tab 示例 - 动态内容 - AJAX</dt>\n               <dd>\n               <div class=\"le-tabview js_autoTab\" tablabels=\"ul.js_tabLabel2 > li > a\" tabcontainers=\"div.js_tabContent2 > div\" \n                                                   tabactiveclass=\"active\" tablabelparent=\"li\" \n                                                   tabactivecallback=\"tabactive\" tabchangecallback=\"tabchange\"\n                                                   >\n                       <ul class=\"le-tabs js_tabLabel2\">\n                           <li class=\"active\"><a href=\"javascript:\">电视剧</a></li>\n                           <li><a href=\"javascript:\" tabajaxurl=\"data/test.php\" tabajaxmethod=\"post\" \n                                                     tabajaxdata=\"{a:1,b:2}\" tabajaxcallback=\"ajaxcallback\" >电影</a></li>\n                           <li><a href=\"javascript:\" tabajaxurl=\"data/test.php\" tabajaxcallback=\"ajaxcallback\" >综艺</a></li>\n                           <li><a href=\"javascript:\" tabajaxurl=\"data/test.php\" >热点</a></li>\n                       </ul>\n                       <div class=\"views js_tabContent2\">\n                           <div class=\"view-item active\">1. 集地议送能拿距还杨雷火，永鲜提只风超洋轻绿动视落清各只江执口。</div>\n                           <div class=\"view-item\"></div>\n                           <div class=\"view-item\"></div>\n                           <div class=\"view-item\"></div>\n                       </div>\n                   </div>\n               </dd>\n           </dl>"
            ]
        },
        "JC.Tab.Model": {
            "name": "JC.Tab.Model",
            "shortname": "JC.Tab.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tab",
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 306,
            "description": "Tab 数据模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的 Tab 选择器",
                    "type": "Selector|string"
                },
                {
                    "name": "_triggerTarget",
                    "description": "初始完毕后要触发的 label",
                    "type": "Selector|string"
                }
            ]
        },
        "JC.Tab.View": {
            "name": "JC.Tab.View",
            "shortname": "JC.Tab.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tab",
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 557,
            "description": "Tab 视图模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "JC.Tab.Model"
                }
            ]
        },
        "JC.TableFreeze": {
            "name": "JC.TableFreeze",
            "shortname": "JC.TableFreeze",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 7,
            "description": "TableFreeze 表格固定指定列功能\n\n<p><b>require</b>:\n  <a href=\"widnow.jQuery.html\">jQuery</a>\n  , <a href=\"JC.common.html\">JC.common</a>\n  , <a href='JC.BaseMVC.html'>JC.BaseMVC</a>\n</p>\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n  | <a href='http://jc2.openjavascript.org/docs_api/classes/JC.TableFreeze.html' target='_blank'>API docs</a>\n  | <a href='../../modules/JC.TableFreeze/0.2/_demo' target='_blank'>demo link</a></p>\n \n<h2>页面只要引用本文件, 默认会自动初始化div为class=\"js_compTableFreeze\"下的表格</h2>\n<p>目前不支持带有tfooter的表格。如果表格带有tfooter，tfooter部分的内容会被清空</p>\n<p></p>\n\n\n<h2>可用的 HTML attribute</h2>\n\n<dl>\n   <dt>freezeType = string</dt>\n   <dd>\n      声明表格列冻结的类型：\n      <p><b>prev：</b>左边的列固定，其他滚动</p>\n      <p><b>next：</b>右边的列固定，其他滚动</p>\n      <p><b>both：</b>两边的列固定，其他滚动</p>\n   </dd>\n\n   <dt>freezeCol = string</dt>\n   <dd>\n       声明表格要冻结的列数:\n       <p>为<b>0：</b>全部滚动，不冻结</p>\n       <p>为<b>列表数目：</b>全部冻结， 不滚动</p>\n       <p>为<b>num,num：</b>freezeType为<b>both</b>时，第一个数字表示前面冻结的列数<br/>\n         第二个数字表示后面冻结的列数。<br/>\n          当两个数字加起来等于列数时，表示全部冻结，不会出现有滚动的列。\n       </p>\n   </dd>\n\n   <dt>scrollWidth = num</dt>\n   <dd>\n       声明表格滚动部分的宽度，默认120%\n   </dd>\n\n   <dt>needHoverClass = true|false</dt>\n   <dd>\n       声明表格行是否需要鼠标hover高亮效果:\n       <p>默认值为true</p>\n   </dd>\n\n   <dt>alternateClass = string</dt>\n   <dd>\n       声明表格索引值为奇数行的背景色的className: （表格行隔行换色）\n       <p>如果为空则不指定隔行背景色</p>\n   </dd>\n\n   <dt>beforeCreateTableCallback = function</dt>\n   <dd>\n       表格创建前, 触发的回调, <b>window 变量域</b>\n<pre>function beforeCreateTableCallback( _selector ){\n   var _ins = this;\n   JC.log( 'beforeCreateTableCallback', new Date().getTime() );\n}</pre>\n   </dd>\n\n   <dt>afterCreateTableCallback = function</dt>\n   <dd>\n       表格创建后, 触发的回调, <b>window 变量域</b>\n<pre>function afterCreateTableCallback( _selector ){\n   var _ins = this;\n   JC.log( 'afterCreateTableCallback', new Date().getTime() );\n}</pre>\n   </dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-11-25",
            "author": "zuojing   <zuojing1013@gmail.com> | 75 Team",
            "example": [
                "\n       <script>\n           JC.debug = true;\n           JC.use('TableFreeze');\n       </script>\n       <dl class=\"defdl\">\n           <dt>TableFreeze example</dt>\n           <dd>\n               <dl>\n                   <dd>\n                       <div class=\"js_compTableFreeze\" freezeType=\"prev\" freezeCols=\"2\" />\n                           <dl>\n                               <dd>\n                                   <table >\n                                       <thead>\n                                           <tr>\n                                               <th > \n                                                   item0\n                                               </th>\n                                               <th >\n                                                   item1\n                                               </th>\n                                               <th >\n                                                   item2\n                                               </th>\n                                               <th >\n                                                   item3\n                                               </th>\n                                               <th >\n                                                   item4\n                                               </th>\n                                           </tr>\n                                       </thead>\n                                       <tbody>\n                                           <tr>\n                                               <td rowspan=\"3\">\n                                                   col01\n                                               </td>\n                                               <td class=\"breaklw\" >\n                                                   我的我的我的我的我的我的我的我的我的\n                                               </td>\n                                               <td rowspan=\"2\" colspan=\"2\">\n                                                   col02\n                                               </td>\n                                               \n                                               <td>\n                                                   col04\n                                               </td>\n\n                                           </tr>\n                                           <tr>\n                                               <td >\n                                                   col11\n                                               </td>\n                                               \n                                               <td >\n                                                   col14\n                                               </td>\n                                           </tr>\n                                             <tr>\n                                              \n                                               <td>\n                                                   col21\n                                               </td>\n                                                <td colspan=\"3\">\n                                                   col22\n                                               </td>\n                                           </tr>\n                                           <tr>\n                                               <td>\n                                                   col30\n                                               </td>\n                                               <td rowspan=\"2\">\n                                                   col31\n                                               </td>\n                                                <td>\n                                                   col32\n                                               </td>\n                                                <td>\n                                                   col33\n                                               </td>\n                                               <td rowspan=\"2\">\n                                                   col34\n                                               </td>\n                                           </tr>\n                                           <tr>\n                                               <td>\n                                                   col40\n                                               </td>\n                                               \n                                                <td>\n                                                   col42\n                                               </td>\n                                                <td>\n                                                   col43\n                                               </td>\n                                           </tr>\n                                           \n                                       </tbody>\n                                   </table>\n                               </dd>\n                           </dl>\n                       </div>\n                   <dd>\n               </dl>\n           </dd>\n       </dl>"
            ]
        },
        "JC.TableSort": {
            "name": "JC.TableSort",
            "shortname": "JC.TableSort",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.TableSort/0.1/TableSort.js",
            "line": 2,
            "description": "TableSort 表格列排序功能",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-11-25",
            "author": "zuojing   <zuojing1013@gmail.com> | 75 Team"
        },
        "JC.Tips": {
            "name": "JC.Tips",
            "shortname": "JC.Tips",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tips",
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 3,
            "description": "Tips 提示信息类\n<br />显示标签的 title/tipsData 属性 为 Tips 样式\n<p>导入该类后, 页面加载完毕后, 会自己初始化所有带 title/tipsData 属性的标签为 Tips效果的标签\n<br />如果要禁用自动初始化, 请把静态属性  Tips.autoInit 置为 false</p>\n<p><b>注意:</b> Tips 默认构造函数只处理单一标签\n<br />, 如果需要处理多个标签, 请使用静态方法 Tips.init( _selector )</p>\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Tips.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Tips/0.1/_demo' target='_blank'>demo link</a></p>\n<h2>可用的 html attribute</h2>\n<dl>\n     <dt>tipsinitedcallback: function</dt>\n     <dd>初始完毕时的回调</dd>\n\n     <dt>tipsshowcallback: function</dt>\n     <dd>显示后的回调</dd>\n\n     <dt>tipshidecallback: function</dt>\n     <dd>隐藏后的回调</dd>\n\n     <dt>tipstemplatebox: selector</dt>\n     <dd>指定tips的显示模板</dd>\n\n     <dt>tipsupdateonce: bool</dt>\n     <dd>tips 内容只更新一次, 这个属性应当与 tipstemplatebox同时使用</dd>\n\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要显示 Tips 效果的标签, 这是单一标签, 需要显示多个请显示 Tips.init 方法",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-06-23",
            "example": [
                "\n           <script src=\"../../../lib.js\"></script>\n           <script src=\"../../../config.js\"></script>\n           <script>\n               requirejs( [ 'JC.Tips' ], function(){\n                   //默认是自动初始化, 也就是只要导入 JC.Tips 就会自己初始化 带 title/tipsData 属性的标签\n                   //下面示例是手动初始化\n                   JC.Tips.autoInit = false;\n                   JC.Tips.init( $( 'a[title]' ) ); \n               });\n           </script>"
            ]
        },
        "JC.Tips.Model": {
            "name": "JC.Tips.Model",
            "shortname": "JC.Tips.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tips",
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 297,
            "description": "Tips 数据模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ]
        },
        "JC.Tips.View": {
            "name": "JC.Tips.View",
            "shortname": "JC.Tips.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tips",
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 446,
            "description": "Tips 视图类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "JC.Tips.Model"
                }
            ]
        },
        "JC.Tree": {
            "name": "JC.Tree",
            "shortname": "JC.Tree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tree",
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 3,
            "description": "树菜单类 JC.Tree\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Tree.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Tree/0.1/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "树要显示的选择器",
                    "type": "Selector"
                },
                {
                    "name": "_data",
                    "description": "树菜单的数据",
                    "type": "Object"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-06-29",
            "example": [
                "\n           <link href='../../../modules/JC.Tree/res/default/style.css' rel='stylesheet' />\n           <script src=\"../../../lib.js\"></script>\n           <script src=\"../../../config.js\"></script>\n           <script>\n               requirejs( [ 'JC.Tree' ], function(){\n                    var treeData = {\n                           data: {\"24\":[[\"25\",\"\\u4e8c\\u7ec4\\u4e00\\u961f\"],[\"26\",\"\\u4e8c\\u7ec4\\u4e8c\\u961f\"],[\"27\",\"\\u4e8c\\u7ec4\\u4e09\\u961f\"]],\"23\":[[\"28\",\"\\u9500\\u552e\\u4e8c\\u7ec4\"],[\"24\",\"\\u552e\\u524d\\u5ba1\\u6838\\u7ec4\"]]},\n                           root: [\"23\",'客户发展部']\n                       };\n                       var _tree = new JC.Tree( $('#tree_box2'), treeData );\n                           _tree.on('RenderLabel', function( _data ){\n                               var _node = $(this);\n                               _node.html( JC.f.printf( '<a href=\"javascript:\" dataid=\"{0}\">{1}</a>', _data[0], _data[1] ) );\n                           });\n                           _tree.on('click', function( _evt ){\n                               var _p = $(this);\n                               JC.log( 'tree click:', _p.html(), _p.attr('dataid'), _p.attr('dataname') );\n                           });\n                           _tree.init();\n                           //_queryNode && _tree.open( _queryNode );\n\n               });\n           </script>\n           <div id=\"tree_box2\" class=\"tree_container\"></div>"
            ]
        },
        "JC.Tree.Model": {
            "name": "JC.Tree.Model",
            "shortname": "JC.Tree.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tree",
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 249,
            "description": "树的数据模型类",
            "is_constructor": 1
        },
        "JC.Valid": {
            "name": "JC.Valid",
            "shortname": "JC.Valid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 6,
            "description": "<b>表单验证</b> (单例模式)\n<br />全局访问请使用 JC.Valid 或 Valid\n<p><b>require</b>: \n     <a href='window.jQuery.html'>jQuery</a>\n     , <a href='JC.common.html'>JC.common</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.Valid.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.Valid/0.2/_demo/' target='_blank'>demo link</a></p>\n<h2>Form 的可用 html attribute</h2>\n<dl>\n     <dt>errorabort = bool, default = true</dt>\n     <dd>\n         查检Form Control时, 如果发生错误是否继续检查下一个\n         <br />true: 继续检查, false, 停止检查下一个\n     </dd>\n\n     <dt>validmsg = bool | string</dt>\n     <dd>\n         内容填写正确时显示的 提示信息, class=validmsg\n         <br />如果 = 0, false, 将不显示提示信息\n         <br />如果 = 1, true, 将不显示提示文本\n     </dd>\n\n     <dt>validemdisplaytype = string, default = inline</dt>\n     <dd>\n         设置 表单所有控件的 em  CSS display 显示类型\n     </dd>\n\n     <dt>ignoreAutoCheckEvent = bool, default = false</dt>\n     <dd>是否禁用 自动 check 事件( focus, blur, change )</dd>\n</dl>\n<h2>Form Control的可用 html attribute</h2>\n<dl>\n     <dt>reqmsg = 错误提示</dt>\n     <dd>值不能为空, class=error errormsg</dd>\n\n     <dt>errmsg = 错误提示</dt>\n     <dd>格式错误, 但不验证为空的值, class=error errormsg</dd>\n\n     <dt>focusmsg = 控件获得焦点的提示信息</dt>\n     <dd>\n         这个只作提示用, class=focusmsg\n     </dd>\n\n     <dt>validmsg = bool | string</dt>\n     <dd>\n         内容填写正确时显示的 提示信息, class=validmsg\n         <br />如果 = 0, false, 将不显示提示信息\n         <br />如果 = 1, true, 将不显示提示文本\n     </dd>\n\n     <dt>emel = selector</dt>\n     <dd>显示错误信息的selector</dd>\n\n     <dt>validel = selector</dt>\n     <dd>显示正确信息的selector</dd>\n\n     <dt>focusel = selector</dt>\n     <dd>显示提示信息的selector</dd>\n\n     <dt>validemdisplaytype = string, default = inline</dt>\n     <dd>\n         设置 em 的 CSS display 显示类型\n     </dd>\n\n     <dt>ignoreprocess = bool, default = false</dt>\n     <dd>验证表单控件时, 是否忽略</dd>\n\n     <dt>minlength = int(最小长度)</dt>\n     <dd>验证内容的最小长度, 但不验证为空的值</dd>\n\n     <dt>maxlength = int(最大长度)</dt>\n     <dd>验证内容的最大长度, 但不验证为空的值</dd>\n\n     <dt>minvalue = number|ISO date(最小值)</dt>\n     <dd>验证内容的最小值, 但不验证为空的值</dd>\n\n     <dt>maxvalue = number|ISO date(最大值)</dt>\n     <dd>验证内容的最大值, 但不验证为空的值</dd>\n\n     <dt>validitemcallback = function</dt>\n     <dd>\n         对一个 control 作检查后的回调, 无论正确与否都会触发, <b>window 变量域</b>\n<pre>function validItemCallback( &#95;selector, &#95;isValid ){\n}</pre>\n     </dd>\n\n     <dt>datatype: 常用数据类型</dt>\n     <dd><b>n:</b> 检查是否为正确的数字</dd>\n     <dd><b>n-i.f:</b> 检查数字格式是否附件要求, i[整数位数], f[浮点数位数], n-7.2 = 0.00 ~ 9999999.99</dd>\n     <dd>\n         <b>nrange:</b> 检查两个control的数值范围\n         <dl>\n             <dd>html attr <b>fromNEl:</b> 指定开始的 control</dd>\n             <dd>html attr <b>toNEl:</b> 指定结束的 control</dd>\n             <dd>如果不指定 fromNEl, toNEl, 默认是从父节点下面找到 nrange, 按顺序定为 fromNEl, toNEl</dd>\n         </dl>\n     </dd>\n     <dd><b>d:</b> 检查是否为正确的日期, YYYYMMDD, YYYY/MM/DD, YYYY-MM-DD, YYYY.MM.DD</dd>\n     <dd>\n         <b>daterange:</b> 检查两个control的日期范围\n         <dl>\n             <dd>html attr <b>fromDateEl:</b> 指定开始的 control</dd>\n             <dd>html attr <b>toDateEl:</b> 指定结束的 control</dd>\n             <dd>如果不指定 fromDateEl, toDateEl, 默认是从父节点下面找到 daterange, 按顺序定为 fromDateEl, toDateEl</dd>\n         </dl>\n     </dd>\n     <dd><b>time:</b> 是否为正确的时间, hh:mm:ss</dd>\n     <dd><b>minute:</b> 是否为正确的时间, hh:mm</dd>\n     <dd>\n         <b>bankcard:</b> 是否为正确的银行卡\n         <br />格式为: 12 ~ 22 位数字\n     </dd>\n     <dd>\n         <b>cnname:</b> 中文姓名\n         <br>格式: 汉字和大小写字母\n         <br>规则: 长度 2-32个字节, 非 ASCII 算2个字节\n     </dd>\n     <dd>\n         <b>enname:</b> 英文姓名\n         <br>格式: 大小写字母 + 空格\n         <br>规则: 长度 2-32个字节, 非 ASCII 算2个字节\n     </dd>\n     <dd>\n         <b>allname:</b> cnname | enname\n         <br />中文姓名和英文姓名的复合验证\n     </dd>\n     <dd>\n         <b>username:</b> 注册用户名\n         <br>格式: a-zA-Z0-9_-\n         <br>规则: 首字母必须为 [a-zA-Z0-9], 长度 2 - 30\n     </dd>\n     <dd><b>idnumber:</b> 身份证号码, 15~18 位</dd>\n     <dd><b>mobilecode:</b> 手机号码, 11位, (13|14|15|16|18|19)[\\d]{9}</dd>\n     <dd><b>mobile:</b> mobilecode 的别名</dd>\n     <dd><b>mobilezonecode:</b> 带 国家代码的手机号码, [+国家代码] [零]11位数字</dd>\n     <dd><b>phonecode:</b> 电话号码, 7~8 位数字, [1-9][0-9]{6,7}</dd>\n     <dd><b>phone:</b> 带区号的电话号码, [区号][空格|空白|-]7~8位电话号码</dd>\n     <dd><b>phoneall:</b> 带国家代码, 区号, 分机号的电话号码, [+国家代码][区号][空格|空白|-]7~8位电话号码#1~6位</dd>\n     <dd><b>phonezone:</b> 电话区号, 3~4位数字. phonezone-n,m 可指定位数长度</dd>\n     <dd><b>phoneext:</b> 电话分机号, 1~6位数字</dd>\n     <dd><b>countrycode:</b> 地区代码, [+]1~6位数字</dd>\n     <dd><b>mobilephone:</b> mobilecode | phone</dd>\n     <dd><b>mobilephoneall:</b> mobilezonecode | phoneall</dd>\n     <dd><b>reg:</b> 自定义正则校验, /正则规则/[igm]</dd>\n     <dd>\n         <b>vcode:</b> 验证码, 0-9a-zA-Z, 长度 默认为4\n         <br />可通过 vcode-[\\d], 指定验证码长度\n     </dd>\n     <dd>\n         <b>text:</b> 显示声明检查的内容为文本类型\n         <br />默认就是 text, 没有特殊原因其实不用显示声明\n     </dd>\n     <dd>\n         <b>bytetext:</b> 声明按字节检查文本长度\n         <br /> ASCII 算一个字符, 非 ASCII 算两个字符\n     </dd>\n     <dd><b>url:</b> URL 格式, ftp, http, https</dd>\n     <dd><b>domain:</b> 匹配域名, 宽松模式, 允许匹配 http(s), 且结尾允许匹配反斜扛(/)</dd>\n     <dd><b>stricdomain:</b> 匹配域名, 严格模式, 不允许匹配 http(s), 且结尾不允许匹配反斜扛(/)</dd>\n     <dd><b>email:</b> 电子邮件</dd>\n     <dd><b>zipcode:</b> 邮政编码, 0~6位数字</dd>\n     <dd><b>taxcode:</b> 纳税人识别号, 长度: 15, 18, 20 </dd>\n\n     <dd>\n         <dl>\n             <dt>checkbox: 默认需要至少选中N 个 checkbox</dt>\n             <dd>\n                 默认必须选中一个 checkbox\n                 <br > 如果需要选中N个, 用这种格式 checkbox-n, checkbox-3 = 必须选中三个\n                 <br > datatarget: 声明所有 checkbox 的选择器\n             </dd>\n         </dl>\n     </dd>\n\n     <dd>\n         <dl>\n             <dt>file: 判断文件扩展名</dt>\n             <dd>属性名(文件扩展名列表): fileext</dd>\n             <dd>格式: .ext[, .ext]</dd>\n             <dd>\n<xmp>   <input type=\"file\" \n   reqmsg=\"文件\" \n   errmsg=\"允许上传的文件类型: .gif, .jpg, .jpeg, .png\"\n   datatype=\"file\" \n   fileext=\".gif, .jpg, .jpeg, .png\" \n   />\n   <label>.gif, .jpg, .jpeg, .png</label>\n   <em class=\"error\"></em>\n   <em class=\"validmsg\"></em>\n</xmp>\n                   </dd>\n         </dl>\n     </dd>\n\n     <dt>subdatatype: 特殊数据类型, 以逗号分隔多个属性</dt>\n     <dd>\n         <dl>\n             <dt>alternative: N 个 Control 必须至少有一个非空的值</dt>\n             <dd><b>datatarget:</b> 显式指定同一组 control, 默认在父级下查找[subdatatype=alternative]</dd>\n             <dd><b>alternativedatatarget:</b> 与 datatarget相同, 区别是优先级高于 datatarget</dd>\n             <dd><b>alternativemsg:</b> N 选一的错误提示</dd>\n\n             <dd>\n                 <b>alternativeReqTarget:</b> 为 alternative node 指定一个不能为空的 node\n                 <br /><b>请使用 subdatatype = reqtarget</b>, 这个附加属性将弃除\n             </dd>\n             <dd><b>alternativeReqmsg:</b> alternativeReqTarget 目标 node 的html属性, 错误时显示的提示信息</dd>\n         </dl>\n     </dd>\n     <dd>\n         <dl>\n             <dt>reqtarget: 如果 selector 的值非空, 那么 datatarget 的值也不能为空</dt>\n             <dd><b>datatarget:</b> 显式指定 目标 target</dd>\n             <dd><b>reqTargetDatatarget:</b> 与 datatarget相同, 区别是优先级高于 datatarget</dd>\n             <dd><b>reqtargetmsg:</b> target node 用于显示错误提示的 html 属性</dd>\n         </dl>\n     </dd>\n     <dd>\n         <dl>\n             <dt>reconfirm: N 个 Control 的值必须保持一致</dt>\n             <dd><b>datatarget:</b> 显式指定同一组 control, 默认在父级下查找[subdatatype=reconfirm]</dd>\n             <dd><b>reconfirmdatatarget:</b> 与 datatarget相同, 区别是优先级高于 datatarget</dd>\n             <dd><b>reconfirmmsg:</b> 值不一致时的错误提示</dd>\n         </dl>\n     </dd>\n     <dd>\n         <dl>\n             <dt>unique: N 个 Control 的值必须保持唯一性, 不能有重复</dt>\n             <dd><b>datatarget:</b> 显式指定同一组 control, 默认在父级下查找[subdatatype=unique]</dd>\n             <dd><b>uniquedatatarget:</b> 与 datatarget相同, 区别是优先级高于 datatarget</dd>\n             <dd><b>uniquemsg:</b> 值有重复的提示信息</dd>\n             <dd><b>uniqueIgnoreCase:</b> 是否忽略大小写</dd>\n             <dd><b>uniqueIgnoreEmpty:</b> 是否忽略空的值, 如果组中有空值也会被忽略</dd>\n             <dd><b>processDisabled:</b> 是否处理 disabled 但 visible 的node</dd>\n             <dd>unique-n 可以指定 N 个为一组的匹配, unique-2 = 2个一组, unique-3: 三个一组</dd>\n         </dl>\n     </dd>\n     <dd>\n         <dl>\n             <dt>datavalid: 判断 control 的值是否合法( 通过HTTP请求验证 )</dt>\n             <dd><b>datavalidMsg:</b> 值不合法时的提示信息</dd>\n             <dd>\n                 <b>datavalidUrl:</b> 验证内容正确与否的 url api\n                 <p>{\"errorno\":0,\"errmsg\":\"\"}</p>\n                 errorno: 0( 正确 ), 非0( 错误 )\n                 <p>datavalidurl=\"./data/handler.php?key={0}\"</p>\n                 {0} 代表 value\n             </dd>\n             <dd>\n                 <b>datavalidCheckCallback:</b> 验证内容正确与否的回调(优先级比 datavalidUrl 高)\n<pre>window.datavalidCheckCallback =\nfunction (){\n   var _r = { 'errorno': 1, errmsg:'验证码错误' }, _sp = $( this ), _v = _sp.val().trim().toLowerCase();\n\n   if( _v && _v === window.CHECK_CODE ){\n       _r.errorno = 0;\n   }\n\n   return _r;\n};<pre>\n             </dd>\n             <dd><b>datavalidNoCache:</b> 是否禁止缓存, default = false</dd>\n             <dd><b>datavalidAjaxType:</b> ajax 请求类型, default = get</dd>\n             <dd><b>datavalidRequestData:</b> ajax 请求数据, json data</dd>\n             <dd>\n                 <b>datavalidCallback:</b> 请求 datavalidUrl 后调用的回调\n<pre>function datavalidCallback( _json ){\n   var _selector = $(this);\n});</pre>\n             </dd>\n                 <b>datavalidKeyupCallback:</b> 每次 keyup 的回调\n<pre>function datavalidKeyupCallback( _evt ){\n   var _selector = $(this);\n});</pre>\n             </dd>\n             <dd>\n                 <b>datavalidUrlFilter:</b> 请求数据前对 url 进行操作的回调\n<pre>function datavalidUrlFilter( _url ){\n   var _selector = $(this);\n   _url = JC.f.addUrlParams( _url, { 'xtest': 'customData' } );\n   return _url;\n});</pre>\n             </dd>\n         </dl>\n     </dd>\n     <dd>\n         <dl>\n             <dt>hidden: 验证隐藏域的值</dt>\n             <dd>\n                 有些特殊情况需要验证隐藏域的值, 请使用 subdatatype=\"hidden\"\n             </dd>\n         </dl>\n     </dd>\n</dl>",
            "static": 1,
            "version": "0.1,  2013-05-22",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team"
        },
        "JC.f": {
            "name": "JC.f",
            "shortname": "JC.f",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.common/0.2/common.js",
            "line": 19,
            "description": "JC.f 是 JC.common 的别名\n<br />具体使用请见 <a href='JC.common.html'>JC.common</a></p>",
            "static": 1
        },
        "JC.common": {
            "name": "JC.common",
            "shortname": "JC.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../modules/JC.common/0.2/common.js",
            "line": 25,
            "description": "JC 组件通用静态方法和属性 ( JC.common, <b>别名: JC.f</b> )\n<br />所有 JC 组件都会依赖这个静态类\n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc2.openjavascript.org/docs_api/classes/JC.common.html' target='_blank'>API docs</a>\n| <a href='../../modules/JC.common/0.2/_demo/' target='_blank'>demo link</a></p>",
            "static": 1,
            "version": "dev 0.1 2013-07-04",
            "author": "qiushaowei   <suches@btbtd.org> | 360 75 Team"
        },
        "window.jQuery": {
            "name": "window.jQuery",
            "shortname": "window.jQuery",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window",
            "file": "../jquery.js",
            "line": 1,
            "description": "jQuery JavaScript Library v1.9.1\n<pre>http://jquery.com/\n\nIncludes Sizzle.js\nhttp://sizzlejs.com/\n\nCopyright 2005, 2012 jQuery Foundation, Inc. and other contributors\nReleased under the MIT license\nhttp://jquery.org/license\nDate: 2013-2-4</pre>",
            "global": ""
        },
        "window.requirejs": {
            "name": "window.requirejs",
            "shortname": "window.requirejs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window",
            "file": "../require.js",
            "line": 1,
            "description": "RequireJS 2.1.8 \n<pre>http://github.com/jrburke/requirejs</pre>",
            "global": ""
        }
    },
    "classitems": [
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 131,
            "description": "获取或设置 ActionLogic 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "ActionLogic instance"
            },
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 147,
            "description": "判断 selector 是否可以初始化 ActionLogic",
            "itemtype": "method",
            "name": "isActionLogic",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 162,
            "description": "禁用按钮一定时间, 默认为1秒",
            "itemtype": "method",
            "name": "disableButton",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要禁用button的选择器",
                    "type": "Selector"
                },
                {
                    "name": "_durationMs",
                    "description": "禁用多少时间, 单位毫秒, 默认1秒",
                    "type": "Int"
                }
            ],
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 179,
            "description": "批量初始化 ActionLogic\n<br />页面加载完毕时, 已使用 事件代理 初始化\n<br />如果是弹框中的 ActionLogic, 由于事件冒泡被阻止了, 需要显示调用  init 方法",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 198,
            "description": "初始化 ActionLogic, 并执行",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Instance|null"
            },
            "static": 1,
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 226,
            "description": "脚本模板 Panel",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 232,
            "description": "显示 Panel",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 247,
            "description": "ajax Panel",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 277,
            "description": "跳转到 URL",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 286,
            "description": "ajax 执行操作",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 334,
            "description": "处理错误提示",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 366,
            "description": "处理二次确认",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 386,
            "description": "处理成功提示",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ActionLogic/0.1/ActionLogic.js",
            "line": 423,
            "description": "执行操作",
            "itemtype": "method",
            "name": "process",
            "return": {
                "description": "",
                "type": "ActionLogicInstance"
            },
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.AutoSelectComplete/0.1/AutoSelectComplete.js",
            "line": 55,
            "description": "获取或设置 AutoSelectComplete 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "AutoSelectCompleteInstance"
            },
            "class": "window.Bizs.AutoSelectComplete",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.AutoSelectComplete/0.1/AutoSelectComplete.js",
            "line": 71,
            "description": "初始化可识别的 AutoSelectComplete 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of AutoSelectCompleteInstance"
            },
            "class": "window.Bizs.AutoSelectComplete",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.AutoSelectComplete/0.1/AutoSelectComplete.js",
            "line": 214,
            "description": "selectallchanged",
            "class": "window.Bizs.AutoSelectComplete",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ChangeLogic/0.1/ChangeLogic.js",
            "line": 165,
            "description": "获取 显示 ChangeLogic 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "window.Bizs.ChangeLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ChangeLogic/0.1/ChangeLogic.js",
            "line": 171,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "ChangeLogicInstance"
            },
            "class": "window.Bizs.ChangeLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ChangeLogic/0.1/ChangeLogic.js",
            "line": 179,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ChangeLogicInstance"
            },
            "class": "window.Bizs.ChangeLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ChangeLogic/0.1/ChangeLogic.js",
            "line": 187,
            "description": "获取或设置 ChangeLogic 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "ChangeLogic instance"
            },
            "class": "window.Bizs.ChangeLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.ChangeLogic/0.1/ChangeLogic.js",
            "line": 207,
            "description": "初始化 _selector | document 可识别的 ChangeLogic HTML属性",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector,",
                    "description": "default = document",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "class": "window.Bizs.ChangeLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.CommonModify/0.1/CommonModify.js",
            "line": 207,
            "description": "获取 显示 CommonModify 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.CommonModify/0.1/CommonModify.js",
            "line": 213,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "CommonModifyInstance"
            },
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.CommonModify/0.1/CommonModify.js",
            "line": 221,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "CommonModifyInstance"
            },
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.CommonModify/0.1/CommonModify.js",
            "line": 232,
            "description": "update current selector",
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.CommonModify/0.1/CommonModify.js",
            "line": 244,
            "description": "获取或设置 CommonModify 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "CommonModify instance"
            },
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.CommonModify/0.1/CommonModify.js",
            "line": 258,
            "description": "判断 selector 是否可以初始化 CommonModify",
            "itemtype": "method",
            "name": "isCommonModify",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DMultiDate/0.1/DMultiDate.js",
            "line": 98,
            "description": "更新日历的类型day/week/season/year\n日历输入框，及隐藏域的值清空\n打开第一个日历输入框的日历面板",
            "class": "window.Bizs.DMultiDate",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DMultiDate/0.1/DMultiDate.js",
            "line": 473,
            "description": "获取或设置 DMultiDate 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "DMultiDateInstance"
            },
            "class": "window.Bizs.DMultiDate",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DMultiDate/0.1/DMultiDate.js",
            "line": 489,
            "description": "判断 selector 是否可以初始化 DMultiDate",
            "itemtype": "method",
            "name": "isDMultiDate",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "window.Bizs.DMultiDate",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DisableLogic/0.1/DisableLogic.js",
            "line": 165,
            "description": "获取 显示 DisableLogic 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "window.Bizs.DisableLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DisableLogic/0.1/DisableLogic.js",
            "line": 171,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "DisableLogicInstance"
            },
            "class": "window.Bizs.DisableLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DisableLogic/0.1/DisableLogic.js",
            "line": 179,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "DisableLogicInstance"
            },
            "class": "window.Bizs.DisableLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DisableLogic/0.1/DisableLogic.js",
            "line": 187,
            "description": "获取或设置 DisableLogic 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "DisableLogic instance"
            },
            "class": "window.Bizs.DisableLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DisableLogic/0.1/DisableLogic.js",
            "line": 207,
            "description": "初始化 _selector | document 可识别的 DisableLogic HTML属性",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector,",
                    "description": "default = document",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "class": "window.Bizs.DisableLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "line": 84,
            "description": "初始化可识别的 DropdownTree 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of DropdownTreeInstance"
            },
            "class": "window.Bizs.DropdownTree",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "line": 158,
            "description": "显示 树弹框",
            "itemtype": "method",
            "name": "show",
            "class": "window.Bizs.DropdownTree",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "line": 163,
            "description": "隐藏 树弹框",
            "itemtype": "method",
            "name": "hide",
            "class": "window.Bizs.DropdownTree",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "line": 168,
            "description": "显式/隐藏 树弹框",
            "itemtype": "method",
            "name": "toggle",
            "class": "window.Bizs.DropdownTree",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "line": 173,
            "description": "更新树菜单数据",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_data",
                    "description": "",
                    "type": "Json"
                }
            ],
            "class": "window.Bizs.DropdownTree",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "line": 184,
            "description": "清除选择数据",
            "itemtype": "method",
            "name": "clear",
            "class": "window.Bizs.DropdownTree",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "line": 204,
            "description": "获取选中的 label",
            "itemtype": "method",
            "name": "label",
            "return": {
                "description": "string"
            },
            "class": "window.Bizs.DropdownTree",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "line": 210,
            "description": "获取或设置 选中的 id",
            "itemtype": "method",
            "name": "val",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String of id"
            },
            "class": "window.Bizs.DropdownTree",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.DropdownTree/0.1/DropdownTree.js",
            "line": 330,
            "description": "选择树节点时触发的事件",
            "itemtype": "event",
            "name": "DropdownTreeSelected",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_triggerSelector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           $( 'div.js_bizDropdownTree' ).each( function(){\n               var _ins = JC.BaseMVC.getInstance( $(this), Bizs.DropdownTree );\n                   _ins \n                       && _ins.on( 'DropdownTreeSelected', function( _evt, _id, _name, _triggerSelector ){\n                           JC.log( [ _evt, _id, _name ] );\n                       });\n           });"
            ],
            "class": "window.Bizs.DropdownTree",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 309,
            "description": "获取或设置 FormLogic 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "FormLogic instance"
            },
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 327,
            "description": "处理 form 或者 _selector 的所有form.js_bizsFormLogic",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "Array of FormLogicInstance",
                "type": "Array"
            },
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 348,
            "description": "msgbox 提示框的自动关闭时间",
            "itemtype": "property",
            "name": "popupCloseMs",
            "type": "int",
            "default": "2000",
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 356,
            "description": "AJAX 表单的提交类型\n<br />plugins, form\n<br />plugins 可以支持文件上传",
            "itemtype": "property",
            "name": "popupCloseMs",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 366,
            "description": "表单提交后, 是否禁用提交按钮",
            "itemtype": "property",
            "name": "submitDisable",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 374,
            "description": "表单提交后, 是否重置表单内容",
            "itemtype": "property",
            "name": "resetAfterSubmit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 382,
            "description": "表单提交时, 内容填写不完整时触发的全局回调",
            "itemtype": "property",
            "name": "processErrorCb",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 390,
            "description": "全局返回数据处理回调\n<br />所有提交结果都会调用\n<br />arg: _data[string of result]",
            "itemtype": "property",
            "name": "GLOBAL_AJAX_CHECK",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 419,
            "description": "默认 form 提交处理事件\n这个如果是 AJAX 的话, 无法上传 文件",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 509,
            "description": "全局 AJAX 提交完成后的处理事件",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 515,
            "description": "这是个神奇的BUG\nchrome 如果没有 reset button, 触发 reset 会导致页面刷新",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 561,
            "description": "表单内容验证通过后, 开始提交前的处理事件",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.FormLogic/0.2/FormLogic.js",
            "line": 780,
            "description": "这个回调的 this 指针是 window",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.KillISPCache/0.1/KillISPCache.js",
            "line": 54,
            "description": "处理 _selector 的所有 child",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ignoreSameLinkText",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "",
                "type": "KillISPCacheInstance"
            },
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.KillISPCache/0.1/KillISPCache.js",
            "line": 81,
            "description": "获取 KillISPCache 实例 ( 单例模式 )",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "KillISPCacheInstance"
            },
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.KillISPCache/0.1/KillISPCache.js",
            "line": 93,
            "description": "是否忽略 url 跟 文本 相同的节点",
            "itemtype": "property",
            "name": "ignoreSameLinkText",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.KillISPCache/0.1/KillISPCache.js",
            "line": 101,
            "description": "自定义随机数的参数名",
            "itemtype": "property",
            "name": "randName",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.KillISPCache/0.1/KillISPCache.js",
            "line": 109,
            "description": "添加忽略随机数的 ULR",
            "itemtype": "method",
            "name": "ignoreUrl",
            "params": [
                {
                    "name": "_url!~YUIDOC_LINE~!return",
                    "description": "Array",
                    "type": "String|Array"
                }
            ],
            "static": 1,
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.KillISPCache/0.1/KillISPCache.js",
            "line": 120,
            "description": "添加忽略随机数的 选择器",
            "itemtype": "method",
            "name": "ignoreSelector",
            "params": [
                {
                    "name": "_selector!~YUIDOC_LINE~!return",
                    "description": "Array",
                    "type": "Selector|Array"
                }
            ],
            "static": 1,
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.MoneyTips/0.1/MoneyTips.js",
            "line": 66,
            "description": "获取或设置 MoneyTips 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "MoneyTipsInstance"
            },
            "class": "window.Bizs.MoneyTips",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.MoneyTips/0.1/MoneyTips.js",
            "line": 82,
            "description": "初始化可识别的 MoneyTips 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of MoneyTipsInstance"
            },
            "class": "window.Bizs.MoneyTips",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.MoneyTips/0.1/MoneyTips.js",
            "line": 105,
            "description": "格式化 node 的 value/html",
            "itemtype": "method",
            "name": "format",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_outputSelector",
                    "description": "指定显示格式化内容的 node, 默认为 selector 本身\n                                             <br />, 还可以通过 html 属性 bmtFormatOutput 指定单独的 _outputSelector",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "_selector"
            },
            "class": "window.Bizs.MoneyTips",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.MoneyTips/0.1/MoneyTips.js",
            "line": 189,
            "description": "更新 tips 的值",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_val",
                    "description": "",
                    "type": "Int|string"
                }
            ],
            "class": "window.Bizs.MoneyTips",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.MultiDate/0.1/MultiDate.js",
            "line": 125,
            "description": "获取或设置 MultiDate 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "MultiDateInstance"
            },
            "class": "window.Bizs.MultiDate",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.MultiDate/0.1/MultiDate.js",
            "line": 141,
            "description": "判断 selector 是否可以初始化 MultiDate",
            "itemtype": "method",
            "name": "isMultiDate",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "window.Bizs.MultiDate",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.MultiSelect/0.1/MultiSelect.js",
            "line": 124,
            "description": "初始化可识别的 MultiSelect 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of MultiSelectInstance"
            },
            "class": "window.Bizs.MultiSelect",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/Bizs.MultiSelect/0.1/MultiSelect.js",
            "line": 148,
            "description": "定义全局数据过滤函数",
            "itemtype": "method",
            "name": "dataFilter",
            "params": [
                {
                    "name": "_json",
                    "description": "",
                    "type": "Json"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "window.Bizs.MultiSelect",
            "namespace": "window.Bizs"
        },
        {
            "file": "../modules/JC.AjaxUpload/0.2/AjaxUpload.js",
            "line": 197,
            "description": "获取或设置 AjaxUpload 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "AjaxUploadInstance"
            },
            "static": 1,
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/0.2/AjaxUpload.js",
            "line": 213,
            "description": "初始化可识别的组件",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "instance array",
                "type": "Array"
            },
            "static": 1,
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/0.2/AjaxUpload.js",
            "line": 246,
            "description": "文件扩展名错误",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/0.2/AjaxUpload.js",
            "line": 253,
            "description": "上传前触发的事件",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/0.2/AjaxUpload.js",
            "line": 259,
            "description": "上传完毕触发的事件",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/0.2/AjaxUpload.js",
            "line": 341,
            "description": "手动更新数据",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_d",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "AjaxUploadInstance"
            },
            "example": [
                "\n               JC.AjaxUpload.getInstance( _selector ).update( {\n                   \"errorno\": 0, \n                   \"data\":\n                   {\n                       \"url\": \"/ignore/JQueryComps_dev/comps/AjaxUpload/_demo/data/images/test.jpg\", \n                       \"name\": \"test.jpg\"\n                   }, \n                   \"errmsg\": \"\"\n               });"
            ],
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/0.2/AjaxUpload.js",
            "line": 748,
            "description": "恢复默认状态",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/dev/AjaxUpload.js",
            "line": 162,
            "description": "获取或设置 AjaxUpload 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "AjaxUploadInstance"
            },
            "static": 1,
            "class": "DEV.JC.AjaxUpload",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/dev/AjaxUpload.js",
            "line": 178,
            "description": "初始化可识别的组件",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "instance array",
                "type": "Array"
            },
            "static": 1,
            "class": "DEV.JC.AjaxUpload",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/dev/AjaxUpload.js",
            "line": 211,
            "description": "文件扩展名错误",
            "class": "DEV.JC.AjaxUpload",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/dev/AjaxUpload.js",
            "line": 218,
            "description": "上传前触发的事件",
            "class": "DEV.JC.AjaxUpload",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/dev/AjaxUpload.js",
            "line": 224,
            "description": "上传完毕触发的事件",
            "class": "DEV.JC.AjaxUpload",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/dev/AjaxUpload.js",
            "line": 310,
            "description": "手动更新数据",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_d",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "AjaxUploadInstance"
            },
            "example": [
                "\n               JC.AjaxUpload.getInstance( _selector ).update( {\n                   \"errorno\": 0, \n                   \"data\":\n                   {\n                       \"url\": \"/ignore/JQueryComps_dev/comps/AjaxUpload/_demo/data/images/test.jpg\", \n                       \"name\": \"test.jpg\"\n                   }, \n                   \"errmsg\": \"\"\n               });"
            ],
            "class": "DEV.JC.AjaxUpload",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.AjaxUpload/dev/AjaxUpload.js",
            "line": 703,
            "description": "恢复默认状态",
            "class": "DEV.JC.AjaxUpload",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.AutoChecked/0.1/AutoChecked.js",
            "line": 104,
            "description": "初始化 _selector 的所有 input[checktype][checkfor]",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoChecked/0.1/AutoChecked.js",
            "line": 175,
            "description": "更新 全选状态",
            "itemtype": "method",
            "name": "update",
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoChecked/0.1/AutoChecked.js",
            "line": 184,
            "description": "获取 显示 AutoChecked 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoChecked/0.1/AutoChecked.js",
            "line": 190,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "AutoCheckedInstance"
            },
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoChecked/0.1/AutoChecked.js",
            "line": 198,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "AutoCheckedInstance"
            },
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoChecked/0.1/AutoChecked.js",
            "line": 206,
            "description": "获取或设置 AutoChecked 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "AutoChecked instance"
            },
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoChecked/0.1/AutoChecked.js",
            "line": 222,
            "description": "判断 selector 是否可以初始化 AutoChecked",
            "itemtype": "method",
            "name": "isAutoChecked",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 141,
            "description": "获取或设置 AutoComplete 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "AutoCompleteInstance"
            },
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 157,
            "description": "初始化可识别的 AutoComplete 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of AutoCompleteInstance"
            },
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 180,
            "description": "更新原始数据",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_data",
                    "description": "",
                    "type": "Json"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "AutoCompleteInstance"
            },
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 195,
            "description": "使用 ajax 接口更新原始数据",
            "itemtype": "method",
            "name": "ajaxUpdate",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_url",
                    "description": "",
                    "type": "Url string"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Callback"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "AutoCompleteInstance"
            },
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 211,
            "description": "定义全局数据过滤函数",
            "itemtype": "method",
            "name": "dataFilter",
            "params": [
                {
                    "name": "_json",
                    "description": "",
                    "type": "Json"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 219,
            "description": "是否将 HTML实体 转为 html",
            "itemtype": "property",
            "name": "fixHtmlEntity",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 345,
            "description": "点击列表时, 阻止冒泡",
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 403,
            "description": "响应 li 点击时, 更新对应的内容",
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 439,
            "description": "获取 绑定的 id node",
            "itemtype": "method",
            "name": "idSelector",
            "return": {
                "description": "",
                "type": "Selector"
            },
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 445,
            "description": "获取 id 值",
            "itemtype": "method",
            "name": "idVal",
            "return": {
                "description": "",
                "type": "Id string"
            },
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 451,
            "description": "使用 ajax 接口更新原始数据",
            "itemtype": "method",
            "name": "ajaxUpdate",
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Callback"
                }
            ],
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 462,
            "description": "显示数据列表",
            "itemtype": "method",
            "name": "show",
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 474,
            "description": "隐藏数据列表",
            "itemtype": "method",
            "name": "hide",
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 483,
            "description": "获取数据列表 node",
            "itemtype": "method",
            "name": "popup",
            "return": {
                "description": "",
                "type": "Selector"
            },
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 492,
            "description": "更新原始数据",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_json",
                    "description": "",
                    "type": "Json"
                }
            ],
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 508,
            "description": "清除 selector 和 idSelector 的默认值",
            "itemtype": "method",
            "name": "clear",
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 517,
            "description": "校正数据列表的显示位置",
            "itemtype": "method",
            "name": "fixPosition",
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoComplete/0.1/AutoComplete.js",
            "line": 595,
            "description": "验证 key && id 是否正确\n仅在 cacStrictData 为真的时候进行验证",
            "class": "JC.AutoComplete",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 159,
            "description": "判断 selector 是否为符合自动初始化联动框的要求",
            "itemtype": "method",
            "name": "isSelect",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 176,
            "description": "是否自动隐藏空值的级联下拉框, 起始下拉框不会被隐藏\n<br />这个是全局设置, 如果需要对具体某个select进行处理, 对应的 HTML 属性 selecthideempty",
            "itemtype": "property",
            "name": "hideEmpty",
            "type": "bool",
            "default": "false",
            "static": 1,
            "example": [
                "\n               AutoSelect.hideEmpty = true;"
            ],
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 187,
            "description": "级联下拉框的数据过滤函数\n<br />默认数据格式: [ [id, name], [id, name] ... ]\n<br />如果获取到的数据格式非默认格式, 可通过本函数进行数据过滤\n<p>\n <b>注意, 这个是全局过滤, 如果要使用该函数进行数据过滤, 判断逻辑需要比较具体</b>\n <br />如果要对具体 select 进行数据过滤, 可以使用HTML属性 selectdatafilter 指定过滤函数\n</p>",
            "itemtype": "property",
            "name": "dataFilter",
            "type": "function",
            "default": "null",
            "static": 1,
            "example": [
                "\n                AutoSelect.dataFilter = \n                   function( _data, _select ){\n                       var _r = _data;\n                       if( _data && !_data.length && _data.data ){\n                           _r = _data.data;\n                       }\n                       return _r;\n                   };"
            ],
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 210,
            "description": "下拉框初始化功能都是未初始化 数据之前的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectbeforeInited",
            "itemtype": "property",
            "name": "beforeInited",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 219,
            "description": "下拉框第一次初始完所有数据的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectinited",
            "itemtype": "property",
            "name": "inited",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 228,
            "description": "下拉框每个项数据变更后的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectchange",
            "itemtype": "property",
            "name": "change",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 237,
            "description": "下拉框所有项数据变更后的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectallchanged",
            "itemtype": "property",
            "name": "allChanged",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 246,
            "description": "第一次初始化所有联动框时, 是否触发 change 事件\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selecttriggerinitchange",
            "itemtype": "property",
            "name": "triggerInitChange",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 255,
            "description": "ajax 请求数据时, 是否添加随机参数防止缓存\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectrandomurl",
            "itemtype": "property",
            "name": "randomurl",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 264,
            "description": "处理 ajax url 的回调处理函数\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectprocessurl",
            "itemtype": "property",
            "name": "processUrl",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 273,
            "description": "首次初始化时, 是否需要请求新数据\n<br />有时 联动框太多, 载入页面时, 后端直接把初始数据输出, 避免请求过多",
            "itemtype": "property",
            "name": "ignoreInitRequest",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 282,
            "description": "获取或设置 selector 的实例引用",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ins",
                    "description": "",
                    "type": "AutoSelectControlerInstance"
                }
            ],
            "return": {
                "description": "AutoSelectControlerInstance"
            },
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 299,
            "description": "清除 select 的 所有 option, 带有属性 defaultoption 例外",
            "itemtype": "method",
            "name": "removeItems",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "deleted items number",
                "type": "Int"
            },
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 380,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "AutoSelectInstance"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 388,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "AutoSelectInstance"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 395,
            "description": "获取第一个 select",
            "itemtype": "method",
            "name": "first",
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 401,
            "description": "获取最后一个 select",
            "itemtype": "method",
            "name": "last",
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 407,
            "description": "获取所有 select",
            "itemtype": "method",
            "name": "items",
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 413,
            "description": "是否为第一个 select",
            "itemtype": "method",
            "name": "isFirst",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 420,
            "description": "是否为最后一个 select",
            "itemtype": "method",
            "name": "isLast",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 427,
            "description": "是否已经初始化过",
            "itemtype": "method",
            "name": "isInited",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 434,
            "description": "获取 select 的数据",
            "itemtype": "method",
            "name": "data",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "JSON"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 441,
            "description": "更新默认选中列表",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_ls",
                    "description": "ids for selected, (string with \",\" or array of ids );",
                    "type": "Array|string"
                }
            ],
            "return": {
                "description": "AutoSelectInstance"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 891,
            "description": "判断下拉框的option里是否有给定的值",
            "params": [
                {
                    "name": "_select",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_val",
                    "description": "要查找的值",
                    "type": "String"
                }
            ],
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 977,
            "description": "初始化之事的事件",
            "itemtype": "event",
            "name": "SelectBeforeInited",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 981,
            "description": "初始化后的事件",
            "itemtype": "event",
            "name": "SelectInited",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 985,
            "description": "响应每个 select 的 change 事件",
            "itemtype": "event",
            "name": "SelectChange",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 989,
            "description": "最后一个 select change 后的事件",
            "itemtype": "event",
            "name": "SelectAllChanged",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 993,
            "description": "select 更新数据之前触发的事件",
            "itemtype": "event",
            "name": "SelectItemBeforeUpdate",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 997,
            "description": "select 更新数据之后触发的事件",
            "itemtype": "event",
            "name": "SelectItemUpdated",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.AutoSelect/0.2/AutoSelect.js",
            "line": 1001,
            "description": "页面加载完毕时, 延时进行自动化, 延时可以避免来自其他逻辑的干扰",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 32,
            "description": "内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 61,
            "description": "初始化之前调用的方法",
            "itemtype": "method",
            "name": "_beforeInit",
            "access": "private",
            "tagname": "",
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 69,
            "description": "内部事件初始化方法",
            "itemtype": "method",
            "name": "_initHanlderEvent",
            "access": "private",
            "tagname": "",
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 77,
            "description": "内部初始化完毕时, 调用的方法",
            "itemtype": "method",
            "name": "_inited",
            "access": "private",
            "tagname": "",
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 85,
            "description": "获取 显示 BaseMVC 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 91,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "BaseMVCInstance"
            },
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 99,
            "description": "使用 jquery trigger 触发绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "BaseMVCInstance"
            },
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 107,
            "description": "获取或设置组件实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_staticClass",
                    "description": "",
                    "type": "Class"
                },
                {
                    "name": "_classInstance",
                    "description": "",
                    "type": "ClassInstance"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "ClassInstance | null"
            },
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 132,
            "description": "是否自动初始化",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 140,
            "description": "复制 BaseMVC 的所有方法到 _outClass",
            "itemtype": "method",
            "name": "build",
            "params": [
                {
                    "name": "_outClass",
                    "description": "",
                    "type": "Class"
                }
            ],
            "static": 1,
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 158,
            "description": "复制 _inClass 的所有方法到 _outClass",
            "itemtype": "method",
            "name": "buildClass",
            "params": [
                {
                    "name": "_inClass",
                    "description": "",
                    "type": "Class"
                },
                {
                    "name": "_outClass",
                    "description": "",
                    "type": "Class"
                }
            ],
            "static": 1,
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 187,
            "description": "为 _outClass 生成一个通用 Model 类",
            "itemtype": "method",
            "name": "buildModel",
            "params": [
                {
                    "name": "_outClass",
                    "description": "",
                    "type": "Class"
                }
            ],
            "static": 1,
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 200,
            "description": "为 _outClass 生成一个通用 View 类",
            "itemtype": "method",
            "name": "buildView",
            "params": [
                {
                    "name": "_outClass",
                    "description": "",
                    "type": "Class"
                }
            ],
            "static": 1,
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 210,
            "description": "初始化 BaseMVC Model 类 和 View 类",
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 230,
            "description": "设置 selector 实例引用的 data 属性名",
            "itemtype": "property",
            "name": "_instanceName",
            "type": "string",
            "default": "BaseMVCIns",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 244,
            "description": "使用 jquery on 为 controler 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 255,
            "description": "使用 jquery trigger 触发 controler 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 267,
            "description": "初始化的 jq 选择器",
            "itemtype": "method",
            "name": "selector",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 278,
            "description": "读取 int 属性的值",
            "itemtype": "method",
            "name": "intProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 299,
            "description": "读取 float 属性的值",
            "itemtype": "method",
            "name": "floatProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "float"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 320,
            "description": "读取 string 属性的值",
            "itemtype": "method",
            "name": "stringProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 338,
            "description": "读取 html 属性值\n<br />这个跟 stringProp 的区别是不会强制转换为小写",
            "itemtype": "method",
            "name": "attrProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 361,
            "description": "读取 boolean 属性的值",
            "itemtype": "method",
            "name": "boolProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String|bool"
                },
                {
                    "name": "_defalut",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool|undefined"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 387,
            "description": "读取 callback 属性的值",
            "itemtype": "method",
            "name": "callbackProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function|undefined"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 410,
            "description": "获取与属性名匹配的 window 变量",
            "itemtype": "method",
            "name": "windowProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Window variable"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 421,
            "description": "获取 selector 属性的 jquery 选择器",
            "itemtype": "method",
            "name": "selectorProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 444,
            "description": "判断 _selector 是否具体某种特征",
            "itemtype": "method",
            "name": "is",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 473,
            "description": "使用 jquery on 为 controler 绑定事件",
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.BaseMVC/0.1/BaseMVC.js",
            "line": 481,
            "description": "使用 jquery trigger 触发 controler 绑定事件",
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 225,
            "description": "内部初始化函数",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 250,
            "description": "初始化相关操作事件",
            "itemtype": "method",
            "name": "_initHanlderEvent",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 345,
            "description": "显示 Calendar",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "CalendarInstance"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 358,
            "description": "隐藏 Calendar",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "CalendarInstance"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 369,
            "description": "获取 显示 Calendar 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 375,
            "description": "获取 Calendar 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 381,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "CalendarInstance"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 389,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "CalendarInstance"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 396,
            "description": "用户操作日期控件时响应改变",
            "itemtype": "method",
            "name": "updateLayout",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 405,
            "description": "切换到不同日期控件源时, 更新对应的控件源",
            "itemtype": "method",
            "name": "updateSelector",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 416,
            "description": "用户改变年份时, 更新到对应的年份",
            "itemtype": "method",
            "name": "updateYear",
            "params": [
                {
                    "name": "_offset",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 427,
            "description": "用户改变月份时, 更新到对应的月份",
            "itemtype": "method",
            "name": "updateMonth",
            "params": [
                {
                    "name": "_offset",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 438,
            "description": "把选中的值赋给控件源\n<br />用户点击日期/确定按钮",
            "itemtype": "method",
            "name": "updateSelected",
            "params": [
                {
                    "name": "_userSelectedItem",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 450,
            "description": "显示日历外观到对应的控件源",
            "itemtype": "method",
            "name": "updatePosition",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 459,
            "description": "清除控件源内容",
            "itemtype": "method",
            "name": "clear",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 470,
            "description": "用户点击取消按钮时隐藏日历外观",
            "itemtype": "method",
            "name": "cancel",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 480,
            "description": "返回日历外观是否可见",
            "itemtype": "method",
            "name": "visible",
            "return": {
                "description": "bool"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 494,
            "description": "获取控件源的初始日期对象",
            "itemtype": "method",
            "name": "defaultDate",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 506,
            "description": "获取或设置 Calendar 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Calendar instance"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 522,
            "description": "保存所有类型的 Calendar 日期实例 \n<br />目前有 date, week, month, season 四种类型的实例\n<br />每种类型都是单例模式",
            "prototype": "_ins",
            "type": "object",
            "default": "empty",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 533,
            "description": "获取控件源的实例类型\n<br />目前有 date, week, month, season 四种类型的实例",
            "itemtype": "method",
            "name": "type",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 560,
            "description": "判断选择器是否为日历组件的对象",
            "itemtype": "method",
            "name": "isCalendar",
            "static": 1,
            "params": [
                {
                    "name": "_selector!~YUIDOC_LINE~!return",
                    "description": "bool",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 594,
            "description": "请使用 isCalendar, 这个方法是为了向后兼容",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 598,
            "description": "弹出日期选择框",
            "itemtype": "method",
            "name": "pickDate",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "需要显示日期选择框的input[text]",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           <dl>\n               <dd>\n                   <input type=\"text\" name=\"date6\" class=\"manualPickDate\" value=\"20110201\" />\n                   manual JC.Calendar.pickDate\n               </dd>\n               <dd>\n                   <input type=\"text\" name=\"date7\" class=\"manualPickDate\" />\n                   manual JC.Calendar.pickDate\n               </dd>\n           </dl>\n           <script>\n               $(document).delegate('input.manualPickDate', 'focus', function($evt){\n               JC.Calendar.pickDate( this );\n               });\n           </script>"
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 636,
            "description": "设置是否在 DOM 加载完毕后, 自动初始化所有日期控件",
            "itemtype": "property",
            "name": "autoInit",
            "default": "true",
            "type": "{bool}",
            "static": "<script>JC.Calendar.autoInit = true;</script>",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 645,
            "description": "设置默认显示的年份数, 该数为前后各多少年 默认为前后各10年",
            "itemtype": "property",
            "name": "defaultDateSpan",
            "type": "{int}",
            "default": "20",
            "static": "<script>JC.Calendar.defaultDateSpan = 20;</script>",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 654,
            "description": "最后一个显示日历组件的文本框",
            "itemtype": "property",
            "name": "lastIpt",
            "type": "selector",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 661,
            "description": "自定义日历组件模板\n<p>默认模板为_logic.tpl</p>\n<p>如果用户显示定义JC.Calendar.tpl的话, 将采用用户的模板</p>",
            "itemtype": "property",
            "name": "tpl",
            "type": "{string}",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 671,
            "description": "初始化外观后的回调函数",
            "itemtype": "property",
            "name": "layoutInitedCallback",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 679,
            "description": "显示为可见时的回调",
            "itemtype": "property",
            "name": "layoutShowCallback",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 687,
            "description": "日历隐藏后的回调函数",
            "itemtype": "property",
            "name": "layoutHideCallback",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 695,
            "description": "DOM 点击的过滤函数\n<br />默认 dom 点击时, 判断事件源不为 input[datatype=date|daterange] 会隐藏 Calendar\n<br /> 通过该回调可自定义过滤, 返回 false 不执行隐藏操作",
            "itemtype": "property",
            "name": "domClickFilter",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 705,
            "description": "隐藏日历组件",
            "itemtype": "method",
            "name": "hide",
            "static": 1,
            "example": [
                "\n           <script>JC.Calendar.hide();</script>"
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 722,
            "description": "获取初始日期对象\n<p style=\"bold\">这个方法将要废除, 请使用 instance.defaultDate()</p>",
            "itemtype": "method",
            "name": "getDate",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "显示日历组件的input\nreturn   { date: date, minvalue: date|null, maxvalue: date|null, enddate: date|null }",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 734,
            "description": "每周的中文对应数字",
            "itemtype": "property",
            "name": "cnWeek",
            "type": "string",
            "static": 1,
            "default": "日一二三四五六",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 742,
            "description": "100以内的中文对应数字",
            "itemtype": "property",
            "name": "cnUnit",
            "type": "string",
            "static": 1,
            "default": "十一二三四五六七八九",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 750,
            "description": "转换 100 以内的数字为中文数字",
            "itemtype": "method",
            "name": "getCnNum",
            "static": 1,
            "params": [
                {
                    "name": "_num",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 764,
            "description": "设置日历组件的显示位置",
            "itemtype": "method",
            "name": "position",
            "static": 1,
            "params": [
                {
                    "name": "_ipt",
                    "description": "需要显示日历组件的文本框",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 775,
            "description": "这个方法后续版本不再使用, 请使用 Calendar.position",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 779,
            "description": "初始化日历组件的触发按钮",
            "itemtype": "method",
            "name": "_logic.initTrigger",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 912,
            "description": "克隆 Calendar 默认 Model, View 的原型属性",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "NewModel"
                },
                {
                    "name": "_view",
                    "description": "",
                    "type": "NewView"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1867,
            "description": "捕获用户更改年份 \n<p>监听 年份下拉框</p>",
            "itemtype": "event",
            "name": "year change",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1877,
            "description": "捕获用户更改年份 \n<p>监听 下一年按钮</p>",
            "itemtype": "event",
            "name": "next year",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1887,
            "description": "捕获用户更改年份 \n<p>监听 上一年按钮</p>",
            "itemtype": "event",
            "name": "previous year",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1897,
            "description": "增加或者减少一年\n<p>监听 年份map</p>",
            "itemtype": "event",
            "name": "year map click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1911,
            "description": "增加或者减少一个月\n<p>监听 月份map</p>",
            "itemtype": "event",
            "name": "month map click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1925,
            "description": "捕获用户更改月份 \n<p>监听 下一月按钮</p>",
            "itemtype": "event",
            "name": "next year",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1935,
            "description": "捕获用户更改月份\n<p>监听 上一月按钮</p>",
            "itemtype": "event",
            "name": "previous year",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1946,
            "description": "日期点击事件",
            "itemtype": "event",
            "name": "date click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1959,
            "description": "选择当前日期\n<p>监听确定按钮</p>",
            "itemtype": "event",
            "name": "confirm click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1969,
            "description": "清除文本框内容\n<p>监听 清空按钮</p>",
            "itemtype": "event",
            "name": "clear click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1979,
            "description": "取消日历组件, 相当于隐藏\n<p>监听 取消按钮</p>",
            "itemtype": "event",
            "name": "cancel click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 1989,
            "description": "日历组件按钮点击事件",
            "itemtype": "event",
            "name": "calendar button click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 2004,
            "description": "日历组件点击事件, 阻止冒泡, 防止被 document click事件隐藏",
            "itemtype": "event",
            "name": "UXCCalendar click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 2013,
            "description": "DOM 加载完毕后, 初始化日历组件相关事件",
            "itemtype": "event",
            "name": "dom ready",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 2019,
            "description": "延迟200毫秒初始化页面的所有日历控件\n之所以要延迟是可以让用户自己设置是否需要自动初始化",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 2027,
            "description": "监听窗口滚动和改变大小, 实时变更日历组件显示位置",
            "itemtype": "event",
            "name": "window scroll, window resize",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.date.js",
            "line": 2036,
            "description": "dom 点击时, 检查事件源是否为日历组件对象, 如果不是则会隐藏日历组件",
            "itemtype": "event",
            "name": "dom click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.js",
            "line": 5,
            "description": "这个判断是为了向后兼容 JC 0.1\n使用 requirejs 的项目可以移除这段判断代码",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.month.js",
            "line": 5,
            "description": "自定义月份弹框的模板HTML",
            "itemtype": "property",
            "name": "monthTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.monthday.js",
            "line": 5,
            "description": "多选日期弹框的模板HTML",
            "itemtype": "property",
            "name": "monthdayTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.monthday.js",
            "line": 14,
            "description": "多先日期弹框标题末尾的附加字样",
            "itemtype": "property",
            "name": "monthdayHeadAppendText",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.monthday.js",
            "line": 215,
            "description": "如果 atd 为空, 那么是 全选按钮触发的事件",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.season.js",
            "line": 5,
            "description": "自定义周弹框的模板HTML",
            "itemtype": "property",
            "name": "seasonTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.week.js",
            "line": 5,
            "description": "自定义周弹框的模板HTML",
            "itemtype": "property",
            "name": "weekTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.week.js",
            "line": 14,
            "description": "自定义周日历每周的起始日期 \n<br /> 0 - 6, 0=周日, 1=周一",
            "itemtype": "property",
            "name": "weekDayOffset",
            "static": 1,
            "type": "int",
            "default": "1",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Calendar/0.3/Calendar.year.js",
            "line": 5,
            "description": "自定义周弹框的模板HTML",
            "itemtype": "property",
            "name": "yearTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 159,
            "description": "获取或设置 DCalendar 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "DCalendarInstance"
            },
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 182,
            "description": "初始化可识别的 DCalendar 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_onlyStatus",
                    "description": "default = false",
                    "type": "Bool"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of DCalendarInstance"
            },
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 220,
            "description": "初始化可识别的 DCalendar 的状态",
            "itemtype": "method",
            "name": "_initStatus",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 292,
            "description": "弹出日期选择框",
            "itemtype": "method",
            "name": "pickDate",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "需要显示日期选择框的标签",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           <dl>\n               <dd>\n                   <input type=\"text\" name=\"date6\" class=\"manualPickDate\" value=\"20110201\" />\n                   manual JC.DCalendar.pickDate\n               </dd>\n               <dd>\n                   <input type=\"text\" name=\"date7\" class=\"manualPickDate\" />\n                   manual JC.DCalendar.pickDate\n               </dd>\n           </dl>\n           <script>\n               $(document).delegate('input.manualPickDate', 'focus', function($evt){\n                   JC.DCalendar.pickDate( this );\n               });\n           </script>"
            ],
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 584,
            "description": "显示的月份面板为2到12个",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1107,
            "description": "DCalendar显示时的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1118,
            "description": "DCalendar隐藏时的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1129,
            "description": "清除选中的日期后的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1140,
            "description": "选择日期赋值后的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1151,
            "description": "更改月份之前的回调，月历面板显示后",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1162,
            "description": "更改月份后的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1173,
            "description": "更改年份之前的回调，年份面板显示后",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1184,
            "description": "更改年份后的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1195,
            "description": "点击下一月的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1206,
            "description": "点击上一月的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1217,
            "description": "点击下一年的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1228,
            "description": "点击上一年的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1239,
            "description": "点击下一页年份的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.date.js",
            "line": 1250,
            "description": "点击上一页年份的回调",
            "class": "JC.DCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.DCalendar/0.1/DCalendar.js",
            "line": 4,
            "description": "�����ж���Ϊ���������� JC 0.1\nʹ�� requirejs ����Ŀ�����Ƴ������жϴ���",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 313,
            "description": "获取拖动的源节点",
            "itemtype": "method",
            "name": "dragTarget",
            "return": {
                "description": "selector"
            },
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 319,
            "description": "获取拖动时移动的节点, drag 使用 dragTarget, drop clone dragTarget",
            "itemtype": "method",
            "name": "dragMovingTarget",
            "return": {
                "description": "selector"
            },
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 325,
            "description": "获取可拖动范围的 [ 节点 | window ]",
            "itemtype": "method",
            "name": "dragIn",
            "return": {
                "description": "",
                "type": "Selector|window"
            },
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 331,
            "description": "更新 dragMovingTarget 的位置",
            "itemtype": "method",
            "name": "_updatePosition",
            "access": "protected",
            "tagname": "",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 342,
            "description": "初始化可识别的 Drag 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of DragInstance"
            },
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 365,
            "description": "设置/获取 拖动时所需的数据",
            "itemtype": "method",
            "name": "dragInfo",
            "params": [
                {
                    "name": "_ins",
                    "description": "",
                    "type": "DragInstance"
                },
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Json|null"
            },
            "static": 1,
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 384,
            "description": "设置当前的拖动 selector",
            "itemtype": "method",
            "name": "draggingItem",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Selector|null"
                }
            ],
            "return": {
                "description": "",
                "type": "Selector|null"
            },
            "static": 1,
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 401,
            "description": "清除拖动的相关数据",
            "itemtype": "method",
            "name": "cleanDragData",
            "static": 1,
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 415,
            "description": "拖动时, 默认的 mousemove 函数",
            "itemtype": "method",
            "name": "defaultMouseMove",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Evt"
                }
            ],
            "static": 1,
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 447,
            "description": "拖动时, 默认的 mouseup 函数",
            "itemtype": "method",
            "name": "defaultMouseUp",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Evt"
                }
            ],
            "static": 1,
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 463,
            "description": "拖动时, 默认的 scroll 函数",
            "itemtype": "method",
            "name": "defaultScroll",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Evt"
                }
            ],
            "static": 1,
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 853,
            "description": "判断两个矩形是否有交集",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 864,
            "description": "把坐标和宽高生成一个 rectangle 数据",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 876,
            "description": "把 rectangle 数据 转换为 坐标数据",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 886,
            "description": "计算两个坐标点之间的距离",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 896,
            "description": "实例初始化后触发的事件",
            "itemtype": "event",
            "name": "JCDragInited",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 900,
            "description": "拖动开始前触发的事件",
            "itemtype": "event",
            "name": "JCDragBefore",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 904,
            "description": "拖动开始时触发的事件",
            "itemtype": "event",
            "name": "JCDragBegin",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 908,
            "description": "拖动完成时触发的事件",
            "itemtype": "event",
            "name": "JCDragDone",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 912,
            "description": "拖动完成之后触发的事件",
            "itemtype": "event",
            "name": "JCDragAfter",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 916,
            "description": "拖动移动时触发的事件",
            "itemtype": "event",
            "name": "JCDraggingMoving",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 920,
            "description": "拖放完成时触发的事件",
            "itemtype": "event",
            "name": "JCDropDone",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 924,
            "description": "拖放完成后触发的事件",
            "itemtype": "event",
            "name": "JCDropDoneAfter",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Drag/0.1/Drag.js",
            "line": 928,
            "description": "手动触发拖动事件",
            "itemtype": "event",
            "name": "JCTriggerDrag",
            "class": "JC.Drag",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 53,
            "description": "显示 Fixed",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "FixedIns"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 59,
            "description": "隐藏 Fixed",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "FixedIns"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 65,
            "description": "获取 Fixed 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 71,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "FixedIns"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 79,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "FixedIns"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 87,
            "description": "获取或设置 Fixed 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Fixed instance"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 103,
            "description": "页面加载完毕时, 是否自动初始化\n<br /> 识别 class=js_autoFixed",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 112,
            "description": "滚动的持续时间( 时间运动 )",
            "itemtype": "property",
            "name": "durationms",
            "type": "int",
            "default": "300",
            "static": 1,
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 120,
            "description": "每次滚动的时间间隔( 时间运动 )",
            "itemtype": "property",
            "name": "stepms",
            "type": "int",
            "default": "3",
            "static": 1,
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 128,
            "description": "设置或者清除 interval\n<br />避免多个 interval 造成的干扰",
            "itemtype": "method",
            "name": "interval",
            "params": [
                {
                    "name": "_interval",
                    "description": "",
                    "type": "Interval"
                }
            ],
            "static": 1,
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Fixed/0.1/Fixed.js",
            "line": 438,
            "description": "判断是否支持 CSS position: fixed",
            "itemtype": "property",
            "name": "$.support.isFixed",
            "type": "bool",
            "require": "jquery",
            "static": 1,
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Form/0.2/Form.js",
            "line": 26,
            "description": "禁用按钮一定时间, 默认为1秒\n<br />这个方法已停止维护\n, 请使用 <a href=\"../../docs_api/classes/window.Bizs.ActionLogic.html#method_disableButton\">Bizs.ActionLogic.disableButton</a>",
            "itemtype": "method",
            "name": "disableButton",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要禁用button的选择器",
                    "type": "Selector"
                },
                {
                    "name": "_durationMs",
                    "description": "禁用多少时间, 单位毫秒, 默认1秒",
                    "type": "Int"
                }
            ],
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Form/0.2/Form.js",
            "line": 46,
            "description": "select 级联下拉框无限联动\n<br />这个方法已经摘取出来, 单独成为一个类.\n<br />详情请见: <a href=\"../../docs_api/classes/JC.AutoSelect.html\">JC.AutoSelect</a>\n<br />目前摘出去的类与之前的逻辑保持向后兼容, 但在不久的将来将会清除这个方法",
            "itemtype": "method",
            "name": "initAutoSelect",
            "static": 1,
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Form/0.2/Form.js",
            "line": 55,
            "description": "全选/反选\n<br />这个方法已经摘取出来, 单独成为一个类.\n<br />详情请见: <a href=\"../../docs_api/classes/JC.AutoChecked.html\">JC.AutoChecked</a>\n<br />目前摘出去的类与之前的逻辑保持向后兼容, 但在不久的将来将会清除这个方法",
            "itemtype": "method",
            "name": "initCheckAll",
            "static": 1,
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Form/0.2/Form.js",
            "line": 64,
            "description": "表单自动填充 URL GET 参数\n<br />这个方法已经摘取出来, 单独成为一个类.\n<br />详情请见: <a href=\"../../docs_api/classes/JC.FormFillUrl.html\">JC.FormFillUrl</a>",
            "itemtype": "method",
            "name": "initAutoFill",
            "params": [
                {
                    "name": "_selector",
                    "description": "显示指定要初始化的区域, 默认为 document",
                    "type": "Selector|url string"
                },
                {
                    "name": "_url",
                    "description": "显示指定, 取初始化值的 URL, 默认为 location.href",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.FormFillUrl/0.1/FormFillUrl.js",
            "line": 59,
            "description": "初始化可识别的 FormFillUrl 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of FormFillUrlInstance"
            },
            "class": "JC.FormFillUrl",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.FormFillUrl/0.1/FormFillUrl.js",
            "line": 90,
            "description": "自定义 URI decode 函数",
            "itemtype": "property",
            "name": "decoder",
            "type": "function",
            "default": "decodeURIComponent",
            "static": 1,
            "class": "JC.FormFillUrl",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.FormFillUrl/0.1/FormFillUrl.js",
            "line": 99,
            "description": "自定义 URI encode 函数",
            "itemtype": "property",
            "name": "encoder",
            "type": "function",
            "default": "encodeURIComponent",
            "static": 1,
            "class": "JC.FormFillUrl",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.FormFillUrl/0.1/FormFillUrl.js",
            "line": 108,
            "description": "判断下拉框的option里是否有给定的值",
            "itemtype": "method",
            "name": "selectHasVal",
            "params": [
                {
                    "name": "_select",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_val",
                    "description": "要查找的值",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "JC.FormFillUrl",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.FormFillUrl/0.1/FormFillUrl.js",
            "line": 163,
            "description": "手动填充 URL 值",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "FormFillUrlInstance"
            },
            "class": "JC.FormFillUrl",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 169,
            "description": "初始化可识别的 ImageCutter 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of ImageCutterInstance"
            },
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 192,
            "description": "裁切范围的最小边长",
            "itemtype": "property",
            "name": "minRectSidelength",
            "type": "int",
            "default": "50",
            "static": 1,
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 200,
            "description": "图片的最小边长",
            "itemtype": "property",
            "name": "minImageSidelength",
            "type": "int",
            "default": "50",
            "static": 1,
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 208,
            "description": "图片的最大边长",
            "itemtype": "property",
            "name": "maxImageSidelength",
            "type": "int",
            "static": 1,
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 215,
            "description": "上下左右方向键移动的步长",
            "itemtype": "property",
            "name": "moveStep",
            "type": "int",
            "default": "1",
            "static": 1,
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 223,
            "description": "进行坐标计算的偏移值",
            "itemtype": "property",
            "name": "_positionPoint",
            "type": "int",
            "default": "10000",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 232,
            "description": "默认的 CSS cursor",
            "itemtype": "property",
            "name": "_defaultCursor",
            "type": "string",
            "default": "auto",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 241,
            "description": "获取 拖动 的相关信息",
            "itemtype": "method",
            "name": "dragInfo",
            "params": [
                {
                    "name": "_p",
                    "description": "",
                    "type": "ImageCutterInstance"
                },
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "_size",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_srcSelector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 272,
            "description": "清除拖动信息",
            "itemtype": "method",
            "name": "cleanInfo",
            "static": 1,
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 631,
            "description": "更新图片",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_imgUrl",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 642,
            "description": "清除拖动的所有内容",
            "itemtype": "method",
            "name": "clean",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 653,
            "description": "更新拖动位置",
            "itemtype": "method",
            "name": "updatePosition",
            "params": [
                {
                    "name": "_size",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 659,
            "description": "设置拖动信息",
            "itemtype": "method",
            "name": "_size",
            "params": [
                {
                    "name": "_size",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 666,
            "description": "向左移动, 移动步长为 ImageCutter.moveStep 定义的步长",
            "itemtype": "method",
            "name": "moveLeft",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 671,
            "description": "向上移动, 移动步长为 ImageCutter.moveStep 定义的步长",
            "itemtype": "method",
            "name": "moveUp",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 676,
            "description": "向右移动, 移动步长为 ImageCutter.moveStep 定义的步长",
            "itemtype": "method",
            "name": "moveRight",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 681,
            "description": "向下移动, 移动步长为 ImageCutter.moveStep 定义的步长",
            "itemtype": "method",
            "name": "moveDown",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1701,
            "description": "初始化实例时触发的事件",
            "itemtype": "event",
            "name": "ImageCutterInited",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1705,
            "description": "初始化预览时触发的事件",
            "itemtype": "event",
            "name": "CICInitPreview",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1709,
            "description": "拖动完成时触发的事件",
            "itemtype": "event",
            "name": "CICDragDone",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1713,
            "description": "更新拖动块时触发的事件",
            "itemtype": "event",
            "name": "CICUpdateDragger",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1717,
            "description": "更新预览时触发的事件",
            "itemtype": "event",
            "name": "CICUpdatePreview",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1721,
            "description": "更新坐标值时触发的事件",
            "itemtype": "event",
            "name": "CICUpdateCoordinate",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1725,
            "description": "图片加载完毕时触发的事件",
            "itemtype": "event",
            "name": "CICImageLoad",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1729,
            "description": "图片加载失败时触发的事件",
            "itemtype": "event",
            "name": "CICImageLoadError",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1733,
            "description": "发生错误时触发的事件",
            "itemtype": "event",
            "name": "CICError",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1737,
            "description": "图片大小不符合要求时触发的事件",
            "itemtype": "event",
            "name": "CICSizeError",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1741,
            "description": "图片缩放后大小不符合要求时触发的事件",
            "itemtype": "event",
            "name": "CICPreviewError",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1745,
            "description": "按比例缩放图片\n<br />返回: { width: int, height: int }",
            "params": [
                {
                    "name": "_w",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_h",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_newWidth",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_newHeight",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "width, height",
                "type": "Object"
            },
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1769,
            "description": "计算两个坐标点之间的距离",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/0.1/ImageCutter.js",
            "line": 1779,
            "description": "从长度和角度求坐标点",
            "class": "JC.ImageCutter",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.ImageCutter/dev/ImageCutter.js",
            "line": 58,
            "description": "初始化可识别的 ImageCutter 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of ImageCutterInstance"
            },
            "class": "DEV.JC.ImageCutter",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.ImageCutter/dev/ImageCutter.js",
            "line": 1284,
            "description": "按比例缩放图片\n<br />返回: { width: int, height: int }",
            "params": [
                {
                    "name": "_w",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_h",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_newWidth",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_newHeight",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "width, height",
                "type": "Object"
            },
            "class": "DEV.JC.ImageCutter",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.ImageCutter/dev/ImageCutter.js",
            "line": 1308,
            "description": "计算两个坐标点之间的距离",
            "class": "DEV.JC.ImageCutter",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.ImageCutter/dev/ImageCutter.js",
            "line": 1318,
            "description": "从长度和角度求坐标点",
            "class": "DEV.JC.ImageCutter",
            "namespace": "DEV.JC"
        },
        {
            "file": "../modules/JC.Lazyload/0.1/Lazyload.js",
            "line": 79,
            "description": "获取或设置 Lazyload 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "LazyloadInstance"
            },
            "class": "JC.Lazyload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Lazyload/0.1/Lazyload.js",
            "line": 98,
            "description": "初始化可识别的 Lazyload 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of LazyloadInstance"
            },
            "class": "JC.Lazyload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Lazyload/0.1/Lazyload.js",
            "line": 203,
            "description": "滚动的方向，水平，垂直，默认垂直滚动",
            "class": "JC.Lazyload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Lazyload/0.1/Lazyload.js",
            "line": 214,
            "description": "加载范围阀值，以达到预加载效果，默认为0",
            "class": "JC.Lazyload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Lazyload/0.1/Lazyload.js",
            "line": 221,
            "description": "占位图，如果图片没有设置src属性，则用该图片替换",
            "class": "JC.Lazyload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Lazyload/0.1/Lazyload.js",
            "line": 232,
            "description": "可视范围容器，默认为window",
            "class": "JC.Lazyload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Lazyload/0.1/Lazyload.js",
            "line": 239,
            "description": "获取需要延时加载的html tag，图片|textarea|ajax",
            "class": "JC.Lazyload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Lazyload/0.1/Lazyload.js",
            "line": 275,
            "description": "计算可视范围\n垂直滚动 height + scrollTop\n水平滚动 width + scrollLeft",
            "class": "JC.Lazyload",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 71,
            "description": "LunarCalendar 的数据模型对象",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.LunarCalendar.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 78,
            "description": "LunarCalendar 的视图对像",
            "itemtype": "property",
            "name": "_view",
            "type": "JC.LunarCalendar.View",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 90,
            "description": "自定义日历组件模板\n<p>默认模板为JC.LunarCalendar.Model#tpl</p>\n<p>如果用户显示定义JC.LunarCalendar.tpl的话, 将采用用户的模板</p>",
            "itemtype": "property",
            "name": "tpl",
            "type": "{string}",
            "default": "empty",
            "static": 1,
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 100,
            "description": "设置是否在 dom 加载完毕后, 自动初始化所有日期控件",
            "itemtype": "property",
            "name": "autoinit",
            "default": "true",
            "type": "{bool}",
            "static": "<script>JC.LunarCalendar.autoInit = true;</script>",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 109,
            "description": "设置默认显示的年份数, 该数为前后各多少年 默认为前后各10年",
            "itemtype": "property",
            "name": "defaultYearSpan",
            "type": "{int}",
            "default": "20",
            "static": "<script>JC.LunarCalendar.defaultYearSpan = 20;</script>",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 118,
            "description": "从所有的LunarCalendar取得当前选中的日期\n<br /> 如果用户没有显式选中某个日期, 将尝试获取当前日期, 如果两者都没有返回undefined",
            "itemtype": "method",
            "name": "getSelectedItemGlobal",
            "static": 1,
            "return": {
                "description": "如果能获取到选中的日期将返回 { date: 当天日期, item: 选中的a, td: 选中的td }",
                "type": "Object|undefined"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 142,
            "description": "初始化可识别的 LunarCalendar 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of LunarCalendarInstance"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 165,
            "description": "从所有的LunarCalendar取得当前选中日期的日期对象\n<br /> 如果用户没有显式选中某个日期, 将尝试获取当前日期, 如果两者都没有返回undefined",
            "itemtype": "method",
            "name": "getSelectedDateGlobal",
            "static": 1,
            "return": {
                "description": "",
                "type": "Date|undefined"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 178,
            "description": "从时间截获取选择器对象",
            "itemtype": "method",
            "name": "getItemByTimestamp",
            "static": 1,
            "params": [
                {
                    "name": "_tm",
                    "description": "时间截, 如果时间截少于13位, 将自动补0到13位, ps: php时间截为10位",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "td selector, 如果 td class unable 不可选, 将忽略",
                "type": "Selector|undefined"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 201,
            "description": "添加或者清除工作日样式",
            "itemtype": "method",
            "name": "workday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置为工作日状态的 td",
                    "type": "Selector"
                },
                {
                    "name": "_customSet",
                    "description": "如果 _customSet 为 undefined, 将设为工作日. \n                                     如果 _customSet 非 undefined, 那么根据真假值判断清除工作日/添加工作日",
                    "type": "Any"
                }
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 217,
            "description": "判断 td 是否为工作日状态",
            "itemtype": "method",
            "name": "isWorkday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 229,
            "description": "添加或者清除假日样式",
            "itemtype": "method",
            "name": "holiday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置为假日状态的 td",
                    "type": "Selector"
                },
                {
                    "name": "_customSet",
                    "description": "如果 _customSet 为 undefined, 将设为假日. \n                                     如果 _customSet 非 undefined, 那么根据真假值判断清除假日/添加假日",
                    "type": "Any"
                }
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 245,
            "description": "判断 td 是否为假日状态",
            "itemtype": "method",
            "name": "isHoliday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 257,
            "description": "添加或者清除注释",
            "itemtype": "method",
            "name": "comment",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置注释的 td",
                    "type": "Selector"
                },
                {
                    "name": "_customSet",
                    "description": "如果 _customSet 为 undefined, 将清除注释. \n                                     如果 _customSet 为 string, 将添加注释",
                    "type": "String|bool"
                }
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 284,
            "description": "判断 td 是否为注释状态",
            "itemtype": "method",
            "name": "isComment",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 296,
            "description": "返回 td 的注释",
            "itemtype": "method",
            "name": "getComment",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 311,
            "description": "用于分隔默认title和注释的分隔符",
            "itemtype": "property",
            "name": "commentSeparator",
            "type": "string",
            "default": "==========comment==========",
            "static": 1,
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 319,
            "description": "把注释添加到 a title 里",
            "itemtype": "method",
            "name": "commentTitle",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置注释的 a 父容器 td",
                    "type": "Selector"
                },
                {
                    "name": "_title",
                    "description": "如果 _title 为真, 将把注释添加到a title里. \n                                     如果 _title 为假, 将从 a title 里删除注释",
                    "type": "String|undefined"
                }
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 345,
            "description": "从JSON数据更新日历状态( 工作日, 休息日, 注释 )\n<br /> 注意, 该方法更新页面上所有的 LunarCalendar",
            "itemtype": "method",
            "name": "updateStatus",
            "static": 1,
            "params": [
                {
                    "name": "_data",
                    "description": "{ phpTimestamp:{ dayaction: 0|1|2, comment: string}, ... }\n<pre>      \n         dayaction: \n         0: delete workday/holiday\n         1: workday\n         2: holiday\n</pre>",
                    "type": "Object"
                }
            ],
            "example": [
                "\n     LunarCalendar.updateStatus(  {\n                                           \"1369843200\": {\n                                               \"dayaction\": 2,\n                                               \"comment\": \"dfdfgdsfgsdfgsdg<b></b>'\\\"'asdf\\\"\\\"'sdf\"\n                                           },\n                                           \"1370966400\": {\n                                               \"dayaction\": 0,\n                                               \"comment\": \"asdfasdfsa\"\n                                           },\n                                           \"1371139200\": {\n                                               \"dayaction\": 1\n                                           },\n                                           \"1371225600\": {\n                                               \"dayaction\": 0,\n                                               \"comment\": \"dddd\"\n                                           }\n                                       });"
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 432,
            "description": "LunarCalendar 内部初始化",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 463,
            "description": "更新日历视图为自定义的日期",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_date",
                    "description": "更新日历视图为 _date 所在日期的月份",
                    "type": "Date"
                }
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 473,
            "description": "显示下一个月的日期",
            "itemtype": "method",
            "name": "nextMonth",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 483,
            "description": "显示上一个月的日期",
            "itemtype": "method",
            "name": "preMonth",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 493,
            "description": "显示下一年的日期",
            "itemtype": "method",
            "name": "nextYear",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 503,
            "description": "显示上一年的日期",
            "itemtype": "method",
            "name": "preYear",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 513,
            "description": "获取默认时间对象",
            "itemtype": "method",
            "name": "getDate",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 519,
            "description": "获取所有的默认时间对象",
            "itemtype": "method",
            "name": "getAllDate",
            "return": {
                "description": "{ date: 默认时间, minvalue: 有效最小时间\n                       , maxvalue: 有效最大时间, beginDate: 日历的起始时间, endDate: 日历的结束时间 }",
                "type": "Object"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 526,
            "description": "获取当前选中的日期, 如果用户没有显式选择, 将查找当前日期, 如果两者都没有的话返回undefined",
            "itemtype": "method",
            "name": "getSelectedDate",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 549,
            "description": "获取初始化日历的选择器对象",
            "itemtype": "method",
            "name": "getContainer",
            "return": {
                "description": "selector"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 555,
            "description": "获取日历的主选择器对象",
            "itemtype": "method",
            "name": "getLayout",
            "return": {
                "description": "selector"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 561,
            "description": "判断日历是否隐藏操作控件",
            "itemtype": "method",
            "name": "isHideControl",
            "return": {
                "description": "bool"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 567,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "BaseMVCInstance"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 575,
            "description": "使用 jquery trigger 触发绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "BaseMVCInstance"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 583,
            "description": "选择日期时触发的事件",
            "itemtype": "event",
            "name": "CLCSelectedItem",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 595,
            "description": "LunarCalendar model 对象",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.LunarCalendar.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 602,
            "description": "LunarCalendar 的主容器",
            "itemtype": "property",
            "name": "layout",
            "type": "selector",
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 611,
            "description": "初始化 View",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 623,
            "description": "初始化日历外观",
            "itemtype": "method",
            "name": "initLayout",
            "params": [
                {
                    "name": "_date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 638,
            "description": "初始化年份",
            "itemtype": "method",
            "name": "initYear",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "",
                    "type": "DateObject"
                }
            ],
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 647,
            "description": "初始化月份",
            "itemtype": "method",
            "name": "initMonth",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "",
                    "type": "DateObject"
                }
            ],
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 656,
            "description": "初始化月份的所有日期",
            "itemtype": "method",
            "name": "_logic.initMonthDate",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "保存所有相关日期的对象",
                    "type": "DateObjects"
                }
            ],
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 757,
            "description": "把具体的公历和农历日期写进a标签的title里",
            "itemtype": "method",
            "name": "addTitle",
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 767,
            "description": "检查是否要隐藏操作控件",
            "itemtype": "method",
            "name": "hideControl",
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 788,
            "description": "LunarCalendar 所要显示的selector",
            "itemtype": "property",
            "name": "container",
            "type": "selector",
            "default": "document.body",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 795,
            "description": "初始化时的时期",
            "itemtype": "property",
            "name": "date",
            "type": "date",
            "default": "new Date()",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 802,
            "description": "日历默认模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "JC.LunarCalendar._deftpl",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 809,
            "description": "显示日历时所需要的所有日期对象",
            "itemtype": "property",
            "name": "dateObj",
            "type": "Object",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 815,
            "description": "a 标签 title 的临时存储对象",
            "itemtype": "property",
            "name": "_titleObj",
            "type": "Object",
            "default": "{}",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 859,
            "description": "获取初始日期对象",
            "itemtype": "method",
            "name": "getDate",
            "params": [
                {
                    "name": "_selector",
                    "description": "显示日历组件的input",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 883,
            "description": "把日期赋值给文本框",
            "itemtype": "method",
            "name": "setDate",
            "params": [
                {
                    "name": "_timestamp",
                    "description": "日期对象的时间戳",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 893,
            "description": "给文本框赋值, 日期为控件的当前日期",
            "itemtype": "method",
            "name": "setSelectedDate",
            "return": {
                "description": "0/1",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 925,
            "description": "LunarCalendar 日历默认模板",
            "itemtype": "property",
            "name": "_deftpl",
            "type": "string",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 999,
            "description": "监听上一年按钮",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 1008,
            "description": "监听上一月按钮",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 1017,
            "description": "监听下一月按钮",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 1026,
            "description": "监听下一年按钮",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 1035,
            "description": "监听年份按钮, 是否要显示年份列表",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 1057,
            "description": "监听月份按钮, 是否要显示月份列表",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 1072,
            "description": "监听年份列表选择状态",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 1084,
            "description": "监听月份列表选择状态",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 1096,
            "description": "监听日期单元格点击事件",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 1127,
            "description": "监听body点击事件, 点击时隐藏日历控件的年份和月份列表",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js",
            "line": 1133,
            "description": "DOM 加载完毕后, 初始化日历组件",
            "itemtype": "event",
            "name": "dom ready",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.getFestival.js",
            "line": 3,
            "description": "返回农历和国历的所在日期的所有节日\n<br /> 假日条目数据样例: { 'name': '春节', 'fullname': '春节', 'priority': 8 }\n<br /> 返回数据格式: { 'dayName': 农历日期/节日名, 'festivals': 节日数组, 'isHoliday': 是否为假日 }",
            "itemtype": "method",
            "name": "getFestivals",
            "static": 1,
            "params": [
                {
                    "name": "_lunarDate",
                    "description": "农历日期对象, 由JC.LunarCalendar.gregorianToLunar 获取",
                    "type": "Object"
                },
                {
                    "name": "_greDate",
                    "description": "日期对象",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Object"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.getFestival.js",
            "line": 195,
            "description": "为数字添加前置0",
            "itemtype": "method",
            "name": "JC.LunarCalendar.getFestival.intPad",
            "params": [
                {
                    "name": "_n",
                    "description": "需要添加前置0的数字",
                    "type": "Int"
                },
                {
                    "name": "_len",
                    "description": "需要添加_len个0, 默认为2",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.gregorianToLunar.js",
            "line": 2,
            "description": "从公历日期获得农历日期\n<br /> 返回的数据格式\n<pre>\n       {\n           shengxiao: ''   //生肖\n           , ganzhi: ''    //干支\n           , yue: ''       //月份\n           , ri: ''        //日\n           , shi: ''       //时\n           , year: ''      //农历数字年\n           , month: ''     //农历数字月\n           , day: ''       //农历数字天\n           , hour: ''      //农历数字时\n       };\n</pre>",
            "itemtype": "method",
            "name": "gregorianToLunar",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "要获取农历日期的时间对象",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Object"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.LunarCalendar/0.1/LunarCalendar.js",
            "line": 8,
            "description": "这个判断是为了向后兼容 JC 0.1\n使用 requirejs 的项目可以移除这段判断代码",
            "class": "JC.NumericStepper",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../modules/JC.NumericStepper/0.1/NumericStepper.js",
            "line": 100,
            "description": "初始化可识别的 NumericStepper 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of NumericStepperInstance"
            },
            "class": "JC.NumericStepper",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.NumericStepper/0.1/NumericStepper.js",
            "line": 123,
            "description": "按下鼠标时 重复执行的频率",
            "itemtype": "property",
            "name": "redoMs",
            "type": "ms",
            "default": "100",
            "static": 1,
            "class": "JC.NumericStepper",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.NumericStepper/0.1/NumericStepper.js",
            "line": 131,
            "description": "按下鼠标时 延迟 多少毫秒执行重复执行",
            "itemtype": "property",
            "name": "timeoutMs",
            "type": "ms",
            "default": "100",
            "static": 1,
            "class": "JC.NumericStepper",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.NumericStepper/0.1/NumericStepper.js",
            "line": 248,
            "description": "增加一个 step",
            "itemtype": "method",
            "name": "plus",
            "class": "JC.NumericStepper",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.NumericStepper/0.1/NumericStepper.js",
            "line": 257,
            "description": "减少一个 step",
            "itemtype": "method",
            "name": "minus",
            "class": "JC.NumericStepper",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 79,
            "description": "会话弹框逻辑处理方法集",
            "itemtype": "property",
            "name": "_logic",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 86,
            "description": "延时处理的指针属性",
            "itemtype": "property",
            "name": "_logic.timeout",
            "type": "setTimeout",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 94,
            "description": "延时显示弹框\n<br />延时是为了使用户绑定的 show 事件能够被执行",
            "itemtype": "property",
            "name": "_logic.showMs",
            "type": "int     millisecond",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 103,
            "description": "设置会话弹框的唯一性",
            "itemtype": "method",
            "name": "_logic.dialogIdentifier",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                }
            ],
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 126,
            "description": "显示蒙板",
            "itemtype": "method",
            "name": "_logic.showMask",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 146,
            "description": "隐藏蒙板",
            "itemtype": "method",
            "name": "_logic.hideMask",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 158,
            "description": "窗口改变大小时, 改变蒙板的大小,\n<br />这个方法主要为了兼容 IE6",
            "itemtype": "method",
            "name": "_logic.setMaskSizeForIe6",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 181,
            "description": "保存会话弹框的所有默认模板",
            "itemtype": "property",
            "name": "_logic.tpls",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 189,
            "description": "会话弹框的蒙板模板",
            "itemtype": "property",
            "name": "_logic.tpls.mask",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.js",
            "line": 203,
            "description": "响应窗口改变大小和滚动",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 37,
            "description": "自定义 JC.Dialog.alert 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.Dialog.msgbox",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 77,
            "description": "自定义 JC.Dialog.alert 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.Dialog.alert",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 122,
            "description": "自定义 JC.Dialog.confirm 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.Dialog.confirm",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 132,
            "description": "弹框最小宽度",
            "itemtype": "property",
            "name": "_logic.minWidth",
            "type": "int",
            "default": "180",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 141,
            "description": "弹框最大宽度",
            "itemtype": "property",
            "name": "_logic.maxWidth",
            "type": "int",
            "default": "500",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 150,
            "description": "获取弹框的显示状态, 默认为0(成功)",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_status",
                    "description": "弹框状态: 0:成功, 1:失败, 2:警告",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 168,
            "description": "修正弹框的默认显示宽度",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_msg",
                    "description": "查显示的文本",
                    "type": "String"
                },
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                }
            ],
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 184,
            "description": "保存会话弹框的所有默认模板",
            "itemtype": "property",
            "name": "_logic.tpls",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 192,
            "description": "msgbox 会话弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.msgbox",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 212,
            "description": "alert 会话弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.alert",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Dialog.popup.js",
            "line": 235,
            "description": "confirm 会话弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.confirm",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 137,
            "description": "存放数据的model层, see <a href='JC.Panel.Model.html'>Panel.Model</a>",
            "itemtype": "property",
            "name": "_model",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 143,
            "description": "控制视图的view层, see <a href='JC.Panel.View.html'>Panel.View</a>",
            "itemtype": "property",
            "name": "_view",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 152,
            "description": "从 selector 获取 Panel 的实例\n<br /><b>如果从DOM初始化, 不进行判断的话, 会重复初始化多次</b>",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Panel instance"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 167,
            "description": "显示Panel时, 是否 focus 到 按钮上\nfocusButton",
            "itemtype": "property",
            "name": "focusButton",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 176,
            "description": "页面点击时, 是否自动关闭 Panel",
            "itemtype": "property",
            "name": "clickClose",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 184,
            "description": "自动关闭的时间间隔, 单位毫秒\n<br />调用 ins.autoClose() 时生效",
            "itemtype": "property",
            "name": "autoCloseMs",
            "type": "int",
            "default": "2000",
            "static": 1,
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 193,
            "description": "修正弹框的默认显示宽度",
            "itemtype": "method",
            "name": "_fixWidth",
            "params": [
                {
                    "name": "_msg",
                    "description": "查显示的文本",
                    "type": "String"
                },
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                },
                {
                    "name": "_minWidth",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_maxWidth",
                    "description": "",
                    "type": "Int"
                }
            ],
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 216,
            "description": "获取 显示的 BUTTON",
            "itemtype": "method",
            "name": "_getButton",
            "params": [
                {
                    "name": "_type",
                    "description": "0: 没有 BUTTON, 1: confirm, 2: confirm + cancel",
                    "type": "Int"
                }
            ],
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 240,
            "description": "初始化Panel",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 250,
            "description": "初始化Panel 默认事件",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 273,
            "description": "为Panel绑定事件\n<br /> 内置事件类型有 show, hide, close, center, confirm, cancel\n, beforeshow, beforehide, beforeclose, beforecenter\n<br /> 用户可通过 HTML eventtype 属性自定义事件类型",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "_evtName",
                    "description": "要绑定的事件名",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "要绑定的事件回调函数",
                    "type": "Function"
                }
            ],
            "example": [
                "\n               //绑定内置事件\n               <button type=\"button\" eventtype=\"close\">text</button>\n               <script>\n               panelInstace.on( 'close', function( _evt, _panel ){ do something } );\n               </script>\n\n               //绑定自定义事件\n               <button type=\"button\" eventtype=\"userevent\">text</button>\n               <script>\n               panelInstace.on( 'userevent', function( _evt, _pan:el ){ do something } );\n               </script>"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 299,
            "description": "显示 Panel\n<br /> Panel初始后, 默认是隐藏状态, 显示 Panel 需要显式调用 show 方法",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "_position",
                    "description": "指定 panel 要显示的位置, \n <br />如果 _position 为 int:  0, 表示屏幕居中显示\n <br />如果 _position 为 selector:  Paenl 的显示位置将基于 _position 的上下左右",
                    "type": "Int|selector"
                }
            ],
            "example": [
                "\n     panelInstace.show();            //默认显示\n     panelInstace.show( 0 );         //居中显示\n     panelInstace.show( _selector ); //位于 _selector 的上下左右"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 351,
            "description": "设置Panel的显示位置基于 _src 的左右上下",
            "itemtype": "method",
            "name": "positionWith",
            "params": [
                {
                    "name": "_src",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_selectorDiretion",
                    "description": "如果 _src 为 selector, _selectorDiretion 可以指定 top, 显示在上方",
                    "type": "String"
                }
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 363,
            "description": "隐藏 Panel\n<br /> 隐藏 Panel 设置 css display:none, 不会从DOM 删除 Panel",
            "itemtype": "method",
            "name": "hide",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 374,
            "description": "关闭 Panel\n<br /> <b>关闭 Panel 是直接从 DOM 中删除 Panel</b>",
            "itemtype": "method",
            "name": "close",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 386,
            "description": "判断点击页面时, 是否自动关闭 Panel",
            "itemtype": "method",
            "name": "isClickClose",
            "return": {
                "description": "bool"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 395,
            "description": "点击页面时, 添加自动隐藏功能",
            "itemtype": "method",
            "name": "clickClose",
            "params": [
                {
                    "name": "_removeAutoClose",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 406,
            "description": "clickClose 的别名\n<br />这个方法的存在是为了向后兼容, 请使用 clickClose",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 415,
            "description": "添加自动关闭功能",
            "itemtype": "method",
            "name": "autoClose",
            "params": [
                {
                    "name": "_removeAutoClose",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 441,
            "description": "focus 到 button\n<br />优先查找 input[eventtype=confirm], input[type=submit], button[eventtype=confirm], button[type=submit]\n<br />input[eventtype=cancel], input[type=buton], button[eventtype=cancel], button[type=button]",
            "itemtype": "method",
            "name": "focusButton",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 448,
            "description": "从DOM清除Panel\n<br /> <b>close 方法清除 Panel可以被用户阻止, 该方法不会被用户阻止</b>",
            "itemtype": "method",
            "name": "dispose",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 459,
            "description": "把 Panel 位置设为屏幕居中",
            "itemtype": "method",
            "name": "center",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 470,
            "description": "返回 Panel 的 jquery dom选择器对象\n<br />这个方法以后将会清除, 请使用 layout 方法",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "",
                "type": "Selector"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 477,
            "description": "返回 Panel 的 jquery dom选择器对象",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "",
                "type": "Selector"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 483,
            "description": "从 Panel 选择器中查找内容\n<br />添加这个方法是为了方便jquery 使用者的习惯",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 491,
            "description": "触发 Panel 已绑定的事件\n<br />用户可以使用该方法主动触发绑定的事件",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "_evtName",
                    "description": "要触发的事件名, 必填参数",
                    "type": "String"
                },
                {
                    "name": "_srcElement",
                    "description": "触发事件的源对象, 可选参数",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n     panelInstace.trigger('close');\n     panelInstace.trigger('userevent', sourceElement);"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 527,
            "description": "获取或者设置 Panel Header 的HTML内容\n<br />如果 Panel默认没有 Header的话, 使用该方法 _html 非空可动态创建一个Header",
            "itemtype": "method",
            "name": "header",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "header 的HTML内容",
                "type": "String"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 541,
            "description": "获取或者设置 Panel body 的HTML内容",
            "itemtype": "method",
            "name": "body",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "body 的HTML内容",
                "type": "String"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 554,
            "description": "获取或者设置 Panel footer 的HTML内容\n<br />如果 Panel默认没有 footer的话, 使用该方法 _html 非空可动态创建一个footer",
            "itemtype": "method",
            "name": "footer",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "footer 的HTML内容",
                "type": "String"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 568,
            "description": "获取或者设置 Panel 的HTML内容",
            "itemtype": "method",
            "name": "panel",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "panel 的HTML内容",
                "type": "String"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 581,
            "description": "获取 html popup/dialog 的触发 node",
            "itemtype": "method",
            "name": "triggerSelector",
            "params": [
                {
                    "name": "_setterSelector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Selector|null"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 592,
            "description": "Panel 显示前会触发的事件<br/>\n这个事件在用户调用 _panelInstance.show() 时触发",
            "itemtype": "event",
            "name": "beforeshow",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'beforeshow', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 600,
            "description": "显示Panel时会触发的事件",
            "itemtype": "event",
            "name": "show",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'show', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 607,
            "description": "Panel 隐藏前会触发的事件<br/>\n<br />这个事件在用户调用 _panelInstance.hide() 时触发",
            "itemtype": "event",
            "name": "beforehide",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'beforehide', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 615,
            "description": "Panel 隐藏时会触发的事件<br/>\n<br />这个事件在用户调用 _panelInstance.hide() 时触发",
            "itemtype": "event",
            "name": "hide",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'hide', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 623,
            "description": "Panel 关闭前会触发的事件<br/>\n这个事件在用户调用 _panelInstance.close() 时触发",
            "itemtype": "event",
            "name": "beforeclose",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"close\">text</button>\n     <script>\n     panelInstace.on( 'beforeclose', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 634,
            "description": "关闭事件",
            "itemtype": "event",
            "name": "close",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"close\">text</button>\n     <script>\n     panelInstace.on( 'close', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 644,
            "description": "Panel 居中显示前会触发的事件<br/>\n这个事件在用户调用 _panelInstance.center() 时触发",
            "itemtype": "event",
            "name": "beforecenter",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'beforecenter', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 652,
            "description": "Panel 居中后会触发的事件",
            "itemtype": "event",
            "name": "center",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'center', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 659,
            "description": "Panel 点击确认按钮触发的事件",
            "itemtype": "event",
            "name": "confirm",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"confirm\">text</button>\n     <script>\n     panelInstace.on( 'confirm', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 669,
            "description": "Panel 点击确取消按钮触发的事件",
            "itemtype": "event",
            "name": "cancel",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"cancel\">text</button>\n     <script>\n     panelInstace.on( 'cancel', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 692,
            "description": "panel 的 HTML 对象或者字符串\n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "selector",
            "type": "selector|string",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 699,
            "description": "header 内容 \n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "headers",
            "type": "string",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 706,
            "description": "body 内容\n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "bodys",
            "type": "string",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 713,
            "description": "footers 内容\n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "footers",
            "type": "string",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 720,
            "description": "panel 初始化后的 selector 对象",
            "itemtype": "property",
            "name": "panel",
            "type": "selector",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 726,
            "description": "存储用户事件和默认事件的对象",
            "itemtype": "property",
            "name": "_events",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 737,
            "description": "Model 初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Model instance"
            },
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 770,
            "description": "添加事件方法",
            "itemtype": "method",
            "name": "addEvent",
            "params": [
                {
                    "name": "_evtName",
                    "description": "事件名",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "事件的回调函数",
                    "type": "Function"
                }
            ],
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 786,
            "description": "获取事件方法",
            "itemtype": "method",
            "name": "getEvent",
            "params": [
                {
                    "name": "_evtName",
                    "description": "事件名",
                    "type": "String"
                }
            ],
            "return": {
                "description": "某类事件类型的所有回调",
                "type": "Array"
            },
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 839,
            "description": "Panel的基础数据类, see <a href='JC.Panel.Model.html'>Panel.Model</a>",
            "itemtype": "property",
            "name": "_model",
            "type": "Panel.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel.View",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 846,
            "description": "默认模板",
            "prototype": "_tpl",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel.View",
            "namespace": "JC.Panel"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 858,
            "description": "View 的初始方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 882,
            "description": "设置Panel的显示位置基于 _src 的左右上下",
            "itemtype": "method",
            "name": "positionWith",
            "params": [
                {
                    "name": "_src",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 919,
            "description": "显示 Panel",
            "itemtype": "method",
            "name": "show",
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 928,
            "description": "focus button",
            "itemtype": "method",
            "name": "focus button",
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 939,
            "description": "隐藏 Panel",
            "itemtype": "method",
            "name": "hide",
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 947,
            "description": "关闭 Panel",
            "itemtype": "method",
            "name": "close",
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 956,
            "description": "获取 Panel 的 selector 对象",
            "itemtype": "method",
            "name": "getPanel",
            "return": {
                "description": "selector"
            },
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 968,
            "description": "获取或设置Panel的 header 内容, see <a href='JC.Panel.html#method_header'>Panel.header</a>",
            "itemtype": "method",
            "name": "getHeader",
            "params": [
                {
                    "name": "_udata",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 988,
            "description": "获取或设置Panel的 body 内容, see <a href='JC.Panel.html#method_body'>Panel.body</a>",
            "itemtype": "method",
            "name": "getBody",
            "params": [
                {
                    "name": "_udata",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 1004,
            "description": "获取或设置Panel的 footer 内容, see <a href='JC.Panel.html#method_footer'>Panel.footer</a>",
            "itemtype": "method",
            "name": "getFooter",
            "params": [
                {
                    "name": "_udata",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 1024,
            "description": "居中显示 Panel",
            "itemtype": "method",
            "name": "center",
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 1056,
            "description": "Panel 的默认模板",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel.View"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 1114,
            "description": "监听Panel的所有点击事件\n<br />如果事件源有 eventtype 属性, 则会触发eventtype的事件类型",
            "itemtype": "event",
            "name": "Panel click",
            "access": "private",
            "tagname": "",
            "class": "JC.hideAllPopup",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 1167,
            "description": "从 HTML 属性 自动执行 popup",
            "attr": "{function}  panelcancelcallback cancel  回调",
            "class": "JC.hideAllPopup",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.default.js",
            "line": 1209,
            "description": "隐藏关闭按钮",
            "class": "JC.hideAllPopup",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.js",
            "line": 3,
            "description": "这个判断是为了向后兼容 JC 0.1\n使用 requirejs 的项目可以移除这段判断代码",
            "class": "JC.msgbox",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 41,
            "description": "自定义 JC.msgbox 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.msgbox",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 79,
            "description": "自定义 JC.alert 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 123,
            "description": "自定义 JC.confirm 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.confirm",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 131,
            "description": "弹框逻辑处理方法集",
            "itemtype": "property",
            "name": "_logic",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 138,
            "description": "弹框最小宽度",
            "itemtype": "property",
            "name": "_logic.minWidth",
            "type": "int",
            "default": "180",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 147,
            "description": "弹框最大宽度",
            "itemtype": "property",
            "name": "_logic.maxWidth",
            "type": "int",
            "default": "500",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 156,
            "description": "显示时 X轴的偏移值",
            "itemtype": "property",
            "name": "_logic.xoffset",
            "type": "number",
            "default": "9",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 165,
            "description": "显示时 Y轴的偏移值",
            "itemtype": "property",
            "name": "_logic.yoffset",
            "type": "number",
            "default": "3",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 174,
            "description": "设置弹框的唯一性",
            "itemtype": "method",
            "name": "_logic.popupIdentifier",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                }
            ],
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 198,
            "description": "弹框通用处理方法",
            "itemtype": "method",
            "name": "_logic.popup",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_tpl",
                    "description": "弹框模板",
                    "type": "String"
                },
                {
                    "name": "_msg",
                    "description": "弹框提示",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "弹框事件源对象",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "弹框状态",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "confirm 回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "JC.Panel"
            },
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 270,
            "description": "隐藏弹框缓动效果",
            "itemtype": "method",
            "name": "_logic.hideEffect",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                },
                {
                    "name": "_popupSrc",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_doneCb",
                    "description": "缓动完成后的回调",
                    "type": "Function"
                }
            ],
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 323,
            "description": "隐藏弹框缓动效果",
            "itemtype": "method",
            "name": "_logic.showEffect",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                },
                {
                    "name": "_popupSrc",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 378,
            "description": "设置 Panel 的默认X,Y轴",
            "itemtype": "method",
            "name": "_logic.onresize",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 414,
            "description": "取得弹框最要显示的 y 轴",
            "itemtype": "method",
            "name": "_logic.getTop",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_scrTop",
                    "description": "滚动条Y位置",
                    "type": "Number"
                },
                {
                    "name": "_srcHeight",
                    "description": "事件源 高度",
                    "type": "Number"
                },
                {
                    "name": "_targetHeight",
                    "description": "弹框高度",
                    "type": "Number"
                },
                {
                    "name": "_offset",
                    "description": "Y轴偏移值",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 435,
            "description": "取得弹框最要显示的 x 轴",
            "itemtype": "method",
            "name": "_logic.getLeft",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_scrTop",
                    "description": "滚动条Y位置",
                    "type": "Number"
                },
                {
                    "name": "_srcHeight",
                    "description": "事件源 高度",
                    "type": "Number"
                },
                {
                    "name": "_targetHeight",
                    "description": "弹框高度",
                    "type": "Number"
                },
                {
                    "name": "_offset",
                    "description": "Y轴偏移值",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 458,
            "description": "修正弹框的默认显示宽度",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_msg",
                    "description": "查显示的文本",
                    "type": "String"
                },
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                }
            ],
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 475,
            "description": "获取弹框的显示状态, 默认为0(成功)",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_status",
                    "description": "弹框状态: 0:成功, 1:失败, 2:警告",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 493,
            "description": "保存弹框的所有默认模板",
            "itemtype": "property",
            "name": "_logic.tpls",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 501,
            "description": "msgbox 弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.msgbox",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 521,
            "description": "alert 弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.alert",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 544,
            "description": "confirm 弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.confirm",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Panel/0.2/Panel.popup.js",
            "line": 570,
            "description": "响应窗口改变大小",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Placeholder/0.1/Placeholder.js",
            "line": 42,
            "description": "获取或设置 Placeholder 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "PlaceholderInstance"
            },
            "class": "JC.Placeholder",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Placeholder/0.1/Placeholder.js",
            "line": 58,
            "description": "初始化可识别的 Placeholder 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of PlaceholderInstance"
            },
            "class": "JC.Placeholder",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Placeholder/0.1/Placeholder.js",
            "line": 103,
            "description": "更新所有 placeholder 实现的状态",
            "itemtype": "method",
            "name": "update",
            "static": 1,
            "class": "JC.Placeholder",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Placeholder/0.1/Placeholder.js",
            "line": 118,
            "description": "设置 Placeholder 的默认 className",
            "itemtype": "property",
            "name": "className",
            "type": "string",
            "default": "xplaceholder",
            "static": 1,
            "class": "JC.Placeholder",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Placeholder/0.1/Placeholder.js",
            "line": 126,
            "description": "判断 input/textarea 默认是否支持 placeholder 功能",
            "itemtype": "property",
            "name": "isSupport",
            "type": "bool",
            "static": 1,
            "class": "JC.Placeholder",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Placeholder/0.1/Placeholder.js",
            "line": 181,
            "description": "更新 placeholder 状态",
            "itemtype": "method",
            "name": "update",
            "class": "JC.Placeholder",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Placeholder/0.1/Placeholder.js",
            "line": 302,
            "description": "设置 控件 光标位置\nx@btbtd.org  2012-3-1",
            "class": "JC.Placeholder",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Placeholder/0.1/Placeholder.js",
            "line": 339,
            "description": "inject jquery show, hide func, for Placeholder change event",
            "class": "JC.Placeholder",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.PopTips/0.1/PopTips.js",
            "line": 139,
            "description": "获取或设置 PopTips 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "PopTipsInstance"
            },
            "class": "JC.PopTips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.PopTips/0.1/PopTips.js",
            "line": 154,
            "description": "初始化可识别的 PopTips 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of PopTipsInstance"
            },
            "class": "JC.PopTips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.PopTips/0.1/PopTips.js",
            "line": 288,
            "description": "更新 PopTips 状态",
            "itemtype": "method",
            "name": "update",
            "class": "JC.PopTips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.PopTips/0.1/PopTips.js",
            "line": 626,
            "description": "PopTips显示前的回调",
            "class": "JC.PopTips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.PopTips/0.1/PopTips.js",
            "line": 637,
            "description": "PopTips隐藏后的回调",
            "class": "JC.PopTips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 135,
            "description": "初始化数据模型",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 139,
            "description": "初始化视图模型( 根据不同的滚动方向, 初始化不同的视图类 )",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 151,
            "description": "内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "bool"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 179,
            "description": "自定义事件绑定函数\n<br />使用 jquery on 方法绑定 为 Slider 实例绑定事件",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 192,
            "description": "自定义事件触发函数\n<br />使用 jquery trigger 方法绑定 为 Slider 实例函数自定义事件",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 204,
            "description": "控制 Slider 向左或向右划动",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "_backwrad",
                    "description": "_backwrad = ture(向左), false(向右), 默认false",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 211,
            "description": "控制 Slider 划动到指定索引",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "_newpointer",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 218,
            "description": "获取 Slider 的总索引数",
            "itemtype": "method",
            "name": "totalpage",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 224,
            "description": "获取 Slider 的当前索引数",
            "itemtype": "method",
            "name": "pointer",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 230,
            "description": "获取指定索引页的 selector 对象",
            "itemtype": "method",
            "name": "page",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "array"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 237,
            "description": "获取 Slider 的主外观容器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 243,
            "description": "查找 layout 的内容",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 284,
            "description": "初始化自动滚动\n<br />如果 layout 的 html属性 sliderautomove=ture, 则会执行本函数",
            "itemtype": "method",
            "name": "_initAutoMove",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "SliderInstance"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 345,
            "itemtype": "event",
            "name": "inited",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 348,
            "itemtype": "event",
            "name": "beforemove",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 351,
            "itemtype": "event",
            "name": "movedone",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 354,
            "itemtype": "event",
            "name": "outmin",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 357,
            "itemtype": "event",
            "name": "outmax",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 360,
            "description": "页面加载完毕后, 是否自动初始化 带有 class=js_autoSlider 的应用",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 368,
            "description": "批量初始化 Slider",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "array"
            },
            "static": 1,
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 401,
            "description": "从 selector 获得 或 设置 Slider 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ins",
                    "description": "",
                    "type": "SliderInstance"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "static": 1,
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 414,
            "description": "判断 selector 是否具备 实例化 Slider 的条件",
            "itemtype": "method",
            "name": "isSlider",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 435,
            "description": "保存 layout 的引用",
            "itemtype": "property",
            "name": "_layout",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 442,
            "description": "自动移动的方向\n<br /> true = 向右|向下, false = 向左|向上",
            "itemtype": "property",
            "name": "_moveDirection",
            "type": "bool",
            "default": "true",
            "access": "private",
            "tagname": "",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 451,
            "description": "滚动时的 interval 引用",
            "itemtype": "property",
            "name": "_interval",
            "type": "interval",
            "access": "private",
            "tagname": "",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 458,
            "description": "自动滚动时的 timeout 引用",
            "itemtype": "property",
            "name": "_timeout",
            "type": "timeout",
            "access": "private",
            "tagname": "",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 470,
            "description": "内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Slider.Model"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 491,
            "description": "获取 slider 外观的 selector",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 497,
            "description": "获取 左移的 selector",
            "itemtype": "method",
            "name": "leftbutton",
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 503,
            "description": "获取 右移的 selector",
            "itemtype": "method",
            "name": "rightbutton",
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 509,
            "description": "获取移动方向\n<br />horizontal, vertical",
            "itemtype": "method",
            "name": "direction",
            "default": "horizontal",
            "return": {
                "description": "string"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 517,
            "description": "获取/设置自动移动的方向\n<br /> true = 向右|向下, false = 向左|向上",
            "itemtype": "method",
            "name": "moveDirection",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 530,
            "description": "获取每次移动多少项",
            "itemtype": "method",
            "name": "howmanyitem",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 536,
            "description": "获取宽度",
            "itemtype": "method",
            "name": "width",
            "default": "800",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 543,
            "description": "获取高度",
            "itemtype": "method",
            "name": "height",
            "default": "230",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 550,
            "description": "获取项宽度",
            "itemtype": "method",
            "name": "itemwidth",
            "default": "160",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 557,
            "description": "获取项高度",
            "itemtype": "method",
            "name": "itemheight",
            "default": "230",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 564,
            "description": "每次移动的总时间, 单位毫秒",
            "itemtype": "method",
            "name": "loop",
            "default": "false",
            "return": {
                "description": "bool"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 571,
            "description": "获取每次移动间隔的毫秒数",
            "itemtype": "method",
            "name": "stepms",
            "default": "10",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 578,
            "description": "获取每次移动持续的毫秒数",
            "itemtype": "method",
            "name": "durationms",
            "default": "300",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 585,
            "description": "获取自动滚动的间隔",
            "itemtype": "method",
            "name": "automovems",
            "default": "2000",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 592,
            "description": "获取是否自动滚动",
            "itemtype": "method",
            "name": "automove",
            "default": "false",
            "return": {
                "description": "bool"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 599,
            "description": "获取默认显示的索引",
            "itemtype": "method",
            "name": "defaultpage",
            "return": {
                "description": "int"
            },
            "default": "0",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 606,
            "description": "获取划动的所有项",
            "itemtype": "method",
            "name": "subitems",
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 620,
            "description": "获取分页总数\n<br /> Math.ceil( subitems / howmanyitem )",
            "itemtype": "method",
            "name": "totalpage",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 636,
            "description": "获取指定页的所有划动项",
            "itemtype": "method",
            "name": "page",
            "params": [
                {
                    "name": "_index",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "array"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 655,
            "description": "获取/设置当前索引位置",
            "itemtype": "method",
            "name": "pointer",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 667,
            "description": "获取新的划动位置\n<br />根据划向的方向 和 是否循环",
            "itemtype": "method",
            "name": "newpointer",
            "params": [
                {
                    "name": "_isbackward",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 683,
            "description": "修正指针的索引位置, 防止范围溢出",
            "itemtype": "method",
            "name": "fixpointer",
            "params": [
                {
                    "name": "_pointer",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 701,
            "description": "获取自动萌动的新索引",
            "itemtype": "method",
            "name": "automoveNewPointer",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 732,
            "description": "获取/设置 划动的 interval 对象",
            "itemtype": "method",
            "name": "interval",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Interval"
                }
            ],
            "return": {
                "description": "interval"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 743,
            "description": "清除划动的 interval",
            "itemtype": "method",
            "name": "clearInterval",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 751,
            "description": "获取/设置 自动划动的 timeout",
            "itemtype": "method",
            "name": "timeout",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Timeout"
                }
            ],
            "return": {
                "description": "timeout"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 762,
            "description": "清除自动划动的 timeout",
            "itemtype": "method",
            "name": "clearTimeout",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 770,
            "description": "获取/设置当前鼠标是否位于 slider 及其控件上面",
            "itemtype": "method",
            "name": "controlover",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 781,
            "description": "获取初始化后的回调函数",
            "itemtype": "method",
            "name": "initedcb",
            "return": {
                "description": "function|undefined"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Slider/0.1/Slider.js",
            "line": 968,
            "description": "页面加载后, 自动初始化符合 Slider 规则的 Slider",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 125,
            "description": "suggest_so({ \"p\" : true,\n              \"q\" : \"shinee\",\n              \"s\" : [ \"shinee 综艺\",\n                  \"shinee美好的一天\",\n                  \"shinee hello baby\",\n                  \"shinee吧\",\n                  \"shinee泰民\",\n                  \"shinee fx\",\n                  \"shinee快乐大本营\",\n                  \"shinee钟铉车祸\",\n                  \"shinee年下男的约会\",\n                  \"shinee dream girl\"\n                ]\n            });",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 157,
            "description": "显示 Suggest",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "SuggestInstance"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 163,
            "description": "隐藏 Suggest",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "SuggestInstance"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 169,
            "description": "获取 显示 Suggest 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 175,
            "description": "获取 Suggest 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 181,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "SuggestInstance"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 189,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "SuggestInstance"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 369,
            "description": "获取或设置 Suggest 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "",
                    "type": "SuggestInstace|null"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Suggest instance"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 386,
            "description": "判断 selector 是否可以初始化 Suggest",
            "itemtype": "method",
            "name": "isSuggest",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 401,
            "description": "设置 Suggest 是否需要自动初始化",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 409,
            "description": "自定义列表显示模板",
            "itemtype": "property",
            "name": "layoutTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 417,
            "description": "Suggest 返回列表的内容是否只使用",
            "itemtype": "property",
            "name": "layoutTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 425,
            "description": "数据过滤回调",
            "itemtype": "property",
            "name": "dataFilter",
            "type": "function",
            "default": "undefined",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 433,
            "description": "保存所有初始化过的实例",
            "itemtype": "property",
            "name": "_allIns",
            "type": "array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 442,
            "description": "隐藏其他 Suggest 显示列表",
            "itemtype": "method",
            "name": "_hideOther",
            "params": [
                {
                    "name": "_ins",
                    "description": "",
                    "type": "SuggestInstance"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 769,
            "description": "初始化完后的事件",
            "itemtype": "event",
            "name": "SuggestInited",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 773,
            "description": "获得新数据的事件",
            "itemtype": "event",
            "name": "SuggestUpdate",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 777,
            "description": "数据更新完毕后的事件",
            "itemtype": "event",
            "name": "SuggestUpdated",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 781,
            "description": "显示前的事件",
            "itemtype": "event",
            "name": "SuggestBeforeShow",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Suggest/0.1/Suggest.js",
            "line": 785,
            "description": "显示后的事件",
            "itemtype": "event",
            "name": "SuggestShow",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 153,
            "description": "Tab 模型类的实例",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.Tab.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 160,
            "description": "Tab 视图类的实例",
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 168,
            "description": "页面加载完毕后, 是否要添加自动初始化事件\n<br /> 自动初始化是 鼠标移动到 Tab 容器时去执行的, 不是页面加载完毕后就开始自动初始化",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 177,
            "description": "label 当前状态的样式",
            "itemtype": "property",
            "name": "activeClass",
            "type": "string",
            "default": "cur",
            "static": 1,
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 185,
            "description": "label 的触发事件",
            "itemtype": "property",
            "name": "activeEvent",
            "type": "string",
            "default": "click",
            "static": 1,
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 193,
            "description": "获取或设置 Tab 容器的 Tab 实例属性",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "_setter 不为空是设置",
                    "type": "JC.Tab"
                }
            ],
            "static": 1,
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 209,
            "description": "全局的 ajax 处理回调",
            "itemtype": "property",
            "name": "ajaxCallback",
            "type": "function",
            "default": "null",
            "static": 1,
            "example": [
                "\n           $(document).ready( function(){\n               JC.Tab.ajaxCallback =\n                   function( _data, _label, _container, _textStatus, _jqXHR ){\n                       _data && ( _data = $.parseJSON( _data ) );\n                       if( _data && _data.errorno === 0 ){\n                           _container.html( JC.f.printf( '<h2>JC.Tab.ajaxCallback</h2>{0}', _data.data ) );\n                       }else{\n                           Tab.isAjaxInited( _label, 0 );\n                           _container.html( '<h2>内容加载失败!</h2>' );\n                       }\n                   };\n           });"
            ],
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 230,
            "description": "ajax 请求是否添加随机参数 rnd, 以防止页面缓存的结果差异",
            "itemtype": "property",
            "name": "ajaxRandom",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 238,
            "description": "判断一个 label 是否为 ajax",
            "itemtype": "method",
            "name": "isAjax",
            "static": 1,
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "String|undefined"
            },
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 249,
            "description": "判断一个 ajax label 是否已经初始化过\n<br /> 这个方法需要跟 Tab.isAjax 结合判断才更为准确",
            "itemtype": "method",
            "name": "isAjaxInited",
            "static": 1,
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "如果 _setter 不为空, 则进行赋值",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n       function tabactive( _evt, _container, _tabIns ){\n           var _label = $(this);\n           JC.log( 'tab ', _evt.type, _label.html(), new Date().getTime() );\n           if( JC.Tab.isAjax( _label ) && ! JC.Tab.isAjaxInited( _label ) ){\n               _container.html( '<h2>内容加载中...</h2>' );\n           }\n       }"
            ],
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 272,
            "description": "Tab 内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 289,
            "description": "把 _label 设置为活动状态",
            "itemtype": "method",
            "name": "active",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 315,
            "description": "Tab 的主容器",
            "itemtype": "property",
            "name": "_layout",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 322,
            "description": "Tab 初始完毕后要触发的label, 可选",
            "itemtype": "property",
            "name": "_triggerTarget",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 329,
            "description": "Tab 的标签列表选择器",
            "itemtype": "property",
            "name": "_tablabels",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 336,
            "description": "Tab 的内容列表选择器",
            "itemtype": "property",
            "name": "_tabcontainers",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 343,
            "description": "当前标签的所在索引位置",
            "itemtype": "property",
            "name": "currentIndex",
            "type": "int",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 354,
            "description": "Tab Model 内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 382,
            "description": "判断是否从 layout 下查找内容",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 389,
            "description": "获取 Tab 的主容器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 395,
            "description": "获取 Tab 所有 label 或 特定索引的 label",
            "itemtype": "method",
            "name": "tablabels",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 405,
            "description": "获取 Tab 所有内容container 或 特定索引的 container",
            "itemtype": "method",
            "name": "tabcontainers",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 415,
            "description": "获取初始化要触发的 label",
            "itemtype": "method",
            "name": "triggerTarget",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 421,
            "description": "判断一个容器是否 符合 Tab 数据要求",
            "itemtype": "method",
            "name": "layoutIsTab",
            "return": {
                "description": "bool"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 427,
            "description": "获取 Tab 活动状态的 class",
            "itemtype": "method",
            "name": "activeClass",
            "return": {
                "description": "string"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 433,
            "description": "获取 Tab label 的触发事件名称",
            "itemtype": "method",
            "name": "activeEvent",
            "return": {
                "description": "string"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 439,
            "description": "判断 label 是否符合要求, 或者设置一个 label为符合要求",
            "itemtype": "method",
            "name": "tablabel",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 452,
            "description": "判断 container 是否符合要求, 或者设置一个 container为符合要求",
            "itemtype": "method",
            "name": "tabcontent",
            "params": [
                {
                    "name": "_content",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 466,
            "description": "获取或设置 label 的索引位置",
            "itemtype": "method",
            "name": "tabindex",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 480,
            "description": "获取Tab label 触发事件后的回调",
            "itemtype": "method",
            "name": "tabactivecallback",
            "return": {
                "description": "function"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 491,
            "description": "获取 Tab label 变更后的回调",
            "itemtype": "method",
            "name": "tabchangecallback",
            "return": {
                "description": "function"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 502,
            "description": "获取 Tab label 活动状态显示样式的标签",
            "itemtype": "method",
            "name": "tablabelparent",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 516,
            "description": "获取 ajax label 的 URL",
            "itemtype": "method",
            "name": "tabajaxurl",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 523,
            "description": "获取 ajax label 的请求方法 get/post",
            "itemtype": "method",
            "name": "tabajaxmethod",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 530,
            "description": "获取 ajax label 的请求数据",
            "itemtype": "method",
            "name": "tabajaxdata",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 544,
            "description": "获取 ajax label 请求URL后的回调",
            "itemtype": "method",
            "name": "tabajaxcallback",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "function"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 565,
            "description": "Tab 数据模型类实例引用",
            "itemtype": "property",
            "name": "_model",
            "type": "{JC.Tab.Model}",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.View",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 575,
            "description": "Tab 视图类初始化方法",
            "itemtype": "method",
            "name": "init",
            "class": "JC.Tab.View",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 597,
            "description": "设置特定索引位置的 label 为活动状态",
            "itemtype": "method",
            "name": "active",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "JC.Tab.View",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 621,
            "description": "请求特定索引位置的 ajax tab 数据",
            "itemtype": "method",
            "name": "activeAjax",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "JC.Tab.View",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.Tab/0.1/Tab.js",
            "line": 649,
            "description": "自动化初始 Tab 实例\n如果 Tab.autoInit = true, 鼠标移至 Tab 后会自动初始化 Tab",
            "class": "JC.Tab.View",
            "namespace": "JC.Tab"
        },
        {
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 214,
            "description": "获取或设置 TableFreeze 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "TableFreezeInstance"
            },
            "class": "JC.TableFreeze",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 229,
            "description": "初始化可识别的 TableFreeze 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of TableFreezeInstance"
            },
            "class": "JC.TableFreeze",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 260,
            "description": "为了解决ie6下表格的宽度超出父容器的宽度，父容器的宽度会跟随表格的宽度",
            "class": "JC.TableFreeze",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 338,
            "description": "冻结类型:prev, both, last; 默认为prev",
            "class": "JC.TableFreeze",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 349,
            "description": "冻结列数:num,num 默认为1",
            "class": "JC.TableFreeze",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 381,
            "description": "滚动区域的宽度默认120%",
            "class": "JC.TableFreeze",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 392,
            "description": "tr 是否需要hover效果,默认为true",
            "class": "JC.TableFreeze",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 411,
            "description": "tr的隔行换色",
            "class": "JC.TableFreeze",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 653,
            "description": "TableFreeze调用前的回调",
            "class": "JC.TableFreeze",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableFreeze/0.2/TableFreeze.js",
            "line": 664,
            "description": "TableFreeze调用后的回调",
            "class": "JC.TableFreeze",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableSort/0.1/TableSort.js",
            "line": 26,
            "description": "获取或设置 TableSort 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "TableSortInstance"
            },
            "class": "JC.TableSort",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.TableSort/0.1/TableSort.js",
            "line": 47,
            "description": "初始化可识别的 TableSort 实例",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Array of TableSortInstance"
            },
            "class": "JC.TableSort",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 62,
            "description": "数据模型类实例引用",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.Tips.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 69,
            "description": "视图类实例引用",
            "itemtype": "property",
            "name": "_view",
            "type": "JC.Tips.View",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 81,
            "description": "初始化 Tips 内部属性",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 103,
            "description": "显示 Tips",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "_evt",
                    "description": "_evt 可以是事件/或者带 pageX && pageY 属性的 Object\n                                 <br />pageX 和 pageY 是显示位于整个文档的绝对 x/y 轴位置",
                    "type": "Event|object"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 115,
            "description": "隐藏 Tips",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "TipsInstance"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 121,
            "description": "获取 显示 tips 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 127,
            "description": "获取 tips 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "_update",
                    "description": "是否更新 Tips 数据",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 134,
            "description": "获取 tips 显示的内容",
            "itemtype": "method",
            "name": "data",
            "return": {
                "description": "string"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 140,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 148,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 156,
            "description": "tips 初始化实例后的触发的事件\n<br />在HTML属性定义回调 tipsinitedcallback =\"function name\"",
            "itemtype": "event",
            "name": "TipsInited",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 161,
            "description": "tips 显示后的回调\n<br />在HTML属性定义回调 tipsshowcallback=\"function name\"",
            "itemtype": "event",
            "name": "TipsShow",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 166,
            "description": "tips 显示前的回调\n<br />在HTML属性定义回调 tipsbeforeshowcallback=\"function name\"",
            "itemtype": "event",
            "name": "TipsBeforeShow",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 171,
            "description": "tips 隐藏后的回调\n<br />在HTML属性定义回调 tipshidecallback=\"function name\"",
            "itemtype": "event",
            "name": "TipsHide",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 176,
            "description": "批量初始化 Tips 效果",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "选择器列表对象, 如果带 title/tipsData 属性则会初始化 Tips 效果",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "example": [
                "\n           <script src=\"../../../lib.js\"></script>\n           <script src=\"../../../config.js\"></script>\n           <script>\n               requirejs( [ 'JC.Tips' ], function(){\n                   JC.Tips.autoInit = false;\n                   JC.Tips.init( $( 'a' ) ); \n               });\n           </script>"
            ],
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 204,
            "description": "隐藏 Tips",
            "itemtype": "method",
            "name": "hide",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 213,
            "description": "页面加载完毕后, 是否自动初始化",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 221,
            "description": "用户自定义模板\n<br /> 如果用户显式覆盖此属性, Tips 会使用用户定义的模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "null",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 230,
            "description": "设置 Tips 超过边界的默认偏移像素\n<p>\nbottom: 边界超过屏幕底部的偏移\n<br />left: 边界低于屏幕左侧的偏移\n<br />top: 边界低于屏幕顶部的偏移\n</p>",
            "itemtype": "property",
            "name": "offset",
            "type": "{point object}",
            "default": "{ 'bottom': { 'x': 15, 'y': 15 }, 'left': { 'x': -28, 'y': 5 }, 'top': { 'x': -2, 'y': -22 } };",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 247,
            "description": "Tips 的最小宽度",
            "itemtype": "property",
            "name": "minWidth",
            "type": "int",
            "default": "200",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 255,
            "description": "Tips 的最大宽度",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "int",
            "default": "400",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 263,
            "description": "把 tag 的 title 属性 转为 tipsData \n<p><b>注意:</b> 这个方法只有当 Tips.autoInit 为假时, 或者浏览器会 IE时才会生效\n<br />Tips.autoInit 为真时, 非IE浏览器无需转换\n<br />如果为IE浏览器, 无论 Tips.autoInit 为真假, 都会进行转换\n<br />方法内部已经做了判断, 可以直接调用, 对IE会生效\n, 这个方法的存在是因为 IE 的 title为延时显示, 所以tips显示后, 默认title会盖在tips上面\n</p>",
            "itemtype": "method",
            "name": "titleToTipsdata",
            "params": [
                {
                    "name": "_selector",
                    "description": "要转title 为 tipsData的选择器列表",
                    "type": "Selector"
                }
            ],
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 283,
            "description": "从 selector 获得 或 设置 Tips 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ins",
                    "description": "",
                    "type": "TipsInstance"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 305,
            "description": "tips 默认模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "<div class=\"UTips\"></div>",
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 312,
            "description": "保存 tips 的触发源选择器",
            "itemtype": "property",
            "name": "_selector",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 319,
            "description": "tips 的显示内容\n<br />标签的 title/tipsData 会保存在这个属性, 然后 title/tipsData 会被清除掉",
            "itemtype": "property",
            "name": "_data",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 331,
            "description": "初始化 tips 模型类",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 343,
            "description": "获取/更新 tips 显示内容",
            "itemtype": "method",
            "name": "data",
            "params": [
                {
                    "name": "_update",
                    "description": "是否更新 tips 数据",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 354,
            "description": "更新 tips 数据",
            "itemtype": "method",
            "name": "update",
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 367,
            "description": "判断 selector 是否初始化过 Tips 功能",
            "itemtype": "method",
            "name": "isInited",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 378,
            "description": "获取 tips 触发源选择器",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 454,
            "description": "保存 Tips 数据模型类的实例引用",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.Tips.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 461,
            "description": "保存 Tips 的显示外观选择器",
            "itemtype": "property",
            "name": "_layout",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 471,
            "description": "初始化 Tips 视图类",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 483,
            "description": "显示 Tips",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "_evt",
                    "description": "_evt 可以是事件/或者带 pageX && pageY 属性的 Object\n                                 <br />pageX 和 pageY 是显示位于整个文档的绝对 x/y 轴位置",
                    "type": "Event|object"
                }
            ],
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 520,
            "description": "隐藏 Tips",
            "itemtype": "method",
            "name": "hide",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 528,
            "description": "获取 Tips 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "_update",
                    "description": "是否更新 Tips 数据",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 558,
            "description": "鼠标移动到 Tips 触发源的触发事件",
            "itemtype": "method",
            "name": "tipMouseenter",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 590,
            "description": "Tips 的默认模板",
            "itemtype": "property",
            "name": "_defTpl",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tips/0.1/Tips.js",
            "line": 598,
            "description": "页面加载完毕后, 是否自动初始化 Tips",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 53,
            "description": "树的数据模型引用",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.Tree.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 60,
            "description": "树的视图模型引用",
            "itemtype": "property",
            "name": "_view",
            "type": "JC.Tree.View",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 68,
            "description": "从选择器获取 树的 实例, 如果实例有限, 加以判断可避免重复初始化",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "JC.Tree Instance|undefined"
            },
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 80,
            "description": "树的数据过滤函数\n<br /> 如果树的初始数据格式不符合要求, 可通过该属性定义函数进行数据修正",
            "itemtype": "property",
            "name": "dataFilter",
            "type": "function",
            "default": "undefined",
            "static": 1,
            "example": [
                "\n           JC.Tree.dataFilter =\n           function( _data ){\n               var _r = {};\n\n               if( _data ){\n                   if( _data.root.length > 2 ){\n                       _data.root.shift();\n                       _r.root = _data.root;\n                    }\n                   _r.data = {};\n                   for( var k in _data.data ){\n                       _r.data[ k ] = [];\n                       for( var i = 0, j = _data.data[k].length; i < j; i++ ){\n                           if( _data.data[k][i].length < 3 ) continue;\n                           _data.data[k][i].shift();\n                           _r.data[k].push( _data.data[k][i] );\n                       }\n                   }\n               }\n               return _r;\n           };"
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 113,
            "description": "初始化树\n<br /> 实例化树后, 需要显式调用该方法初始化树的可视状态",
            "itemtype": "method",
            "name": "init",
            "example": [
                "\n               var _tree = new JC.Tree( $('#tree_box'), treeData );\n               _tree.init();"
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 127,
            "description": "展开树到某个具体节点, 或者展开树的所有节点",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "如果_nodeId='undefined', 将会展开树的所有节点\n                                     <br />_nodeId 不为空, 将展开树到 _nodeId 所在的节点",
                    "type": "String|int"
                }
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 142,
            "description": "关闭某个节点, 或者关闭整个树",
            "itemtype": "method",
            "name": "close",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "如果_nodeId='undefined', 将会关闭树的所有节点\n                                     <br />_nodeId 不为空, 将关闭树 _nodeId 所在的节点",
                    "type": "String|int"
                }
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 157,
            "description": "获取树的 ID 前缀\n<br />每个树都会有自己的随机ID前缀",
            "itemtype": "method",
            "name": "idPrefix",
            "return": {
                "description": "树的ID前缀",
                "type": "String"
            },
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 164,
            "description": "获取树的节点 label",
            "itemtype": "method",
            "name": "getItem",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "",
                    "type": "String|int"
                }
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 175,
            "description": "绑定树内部事件\n<br /><b>注意:</b> 所有事件名最终会被转换成小写",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 188,
            "description": "获取树的某类事件类型的所有回调",
            "itemtype": "method",
            "name": "event",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 195,
            "description": "获取或设置树的高亮节点",
            "itemtype": "method",
            "name": "selectedItem",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 215,
            "description": "树节点的点击事件",
            "itemtype": "event",
            "name": "click",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "example": [
                "\n           _tree.on('click', function( _evt ){\n               var _p = $(this);\n               JC.log( 'tree click:', _p.html(), _p.attr('dataid'), _p.attr('dataname') );\n           });"
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 226,
            "description": "树节点的展现事件",
            "itemtype": "event",
            "name": "RenderLabel",
            "params": [
                {
                    "name": "_data",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           _tree.on('RenderLabel', function( _data ){\n               var _node = $(this);\n               _node.html( JC.f.printf( '<a href=\"javascript:\" dataid=\"{0}\">{1}</a>', _data[0], _data[1] ) );\n           });"
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 238,
            "description": "树文件夹的点击事件",
            "itemtype": "event",
            "name": "FolderClick",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "example": [
                "\n           _tree.on('FolderClick', function( _evt ){\n               var _p = $(this);\n               alert( 'folder click' );\n           });"
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 256,
            "description": "树要展示的容器",
            "itemtype": "property",
            "name": "_container",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 263,
            "description": "展现树需要的数据",
            "itemtype": "property",
            "name": "_data",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 270,
            "description": "树的随机ID前缀",
            "itemtype": "property",
            "name": "_id",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 277,
            "description": "树当前的高亮节点",
            "itemtype": "property",
            "name": "_highlight",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 284,
            "description": "保存树的所有绑定事件",
            "itemtype": "property",
            "name": "_events",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 298,
            "description": "树模型类内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 308,
            "description": "获取树所要展示的容器",
            "itemtype": "method",
            "name": "container",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 314,
            "description": "获取节点将要显示的ID",
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "_id",
                    "description": "节点的原始ID",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string  节点的最终ID"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 321,
            "description": "获取树的随机ID前缀",
            "itemtype": "method",
            "name": "idPrefix",
            "return": {
                "description": "string"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 327,
            "description": "获取树的原始数据",
            "itemtype": "method",
            "name": "data",
            "return": {
                "description": "object"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 333,
            "description": "获取树生成后的根节点",
            "itemtype": "method",
            "name": "root",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 339,
            "description": "获取ID的具体节点",
            "itemtype": "method",
            "name": "child",
            "params": [
                {
                    "name": "_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 346,
            "description": "判断原始数据的某个ID是否有子级节点",
            "itemtype": "method",
            "name": "hasChild",
            "params": [
                {
                    "name": "_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 353,
            "description": "获取树的某类绑定事件的所有回调",
            "itemtype": "method",
            "name": "event",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array|undefined"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 364,
            "description": "添加树内部事件",
            "itemtype": "method",
            "name": "addEvent",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 376,
            "description": "获取或设置树的高亮节点\n<br /><b>注意:</b> 这个只是数据层面的设置, 不会影响视觉效果",
            "itemtype": "method",
            "name": "highlight",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 389,
            "description": "树的视图模型类",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 393,
            "description": "树的数据模型引用",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.Tree.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 400,
            "description": "树生成后的根节点",
            "itemtype": "property",
            "name": "_treeRoot",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 410,
            "description": "初始化树的可视状态",
            "itemtype": "method",
            "name": "init",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 420,
            "description": "获取或设置树生成后的根节点",
            "itemtype": "method",
            "name": "treeRoot",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 431,
            "description": "处理树的展现效果",
            "itemtype": "method",
            "name": "_process",
            "params": [
                {
                    "name": "_data",
                    "description": "节点数据",
                    "type": "Array"
                },
                {
                    "name": "_parentNode",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 452,
            "description": "初始化树根节点",
            "itemtype": "method",
            "name": "_initRoot",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 482,
            "description": "初始化树的文件夹节点",
            "itemtype": "method",
            "name": "_initFolder",
            "params": [
                {
                    "name": "_parentNode",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_isLast",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 507,
            "description": "初始化树的文件节点",
            "itemtype": "method",
            "name": "_initFile",
            "params": [
                {
                    "name": "_parentNode",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_isLast",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 528,
            "description": "初始化树的节点标签",
            "itemtype": "method",
            "name": "_initLabel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 552,
            "description": "展开树的所有节点",
            "itemtype": "method",
            "name": "openAll",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 563,
            "description": "关闭树的所有节点",
            "itemtype": "method",
            "name": "closeAll",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 575,
            "description": "展开树到具体节点",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 611,
            "description": "关闭树的具体节点",
            "itemtype": "method",
            "name": "close",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 630,
            "description": "树的最后的 hover 节点\n<br />树的 hover 是全局属性, 页面上的所有树只会有一个当前 hover",
            "itemtype": "property",
            "name": "lastHover",
            "type": "selector",
            "default": "null",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 646,
            "description": "捕获树文件标签的点击事件",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Tree/0.1/Tree.js",
            "line": 672,
            "description": "捕获树文件夹图标的点击事件",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 314,
            "description": "兼容函数式使用",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 363,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "ValidInstance"
            },
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 372,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ValidInstance"
            },
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 380,
            "description": "分析_item是否附合规则要求",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 502,
            "description": "验证一个表单项, 如 文本框, 下拉框, 复选框, 单选框, 文本域, 隐藏域",
            "itemtype": "method",
            "name": "check",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "需要验证规则正确与否的表单/表单项( <b>可同时传递多个_item</b> )",
                    "type": "Selector"
                }
            ],
            "example": [
                " \n         JC.Valid.check( $( selector ) );\n         JC.Valid.check( $( selector ), $( anotherSelector );\n         JC.Valid.check( document.getElementById( item ) );\n\n         if( !JC.Valid.check( $('form') ) ){\n             _evt.preventDefault();\n             return false;\n         }"
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 520,
            "description": "这个方法是 <a href='JC.Valid.html#method_check'>Valid.check</a> 的别名",
            "itemtype": "method",
            "name": "checkAll",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "-   需要验证规则正确与否的表单/表单项",
                    "type": "Selector"
                }
            ],
            "see": [
                "Valid.check"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 527,
            "description": "获取 Valid 的实例 ( <b>Valid 是单例模式</b> )",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Valid instance"
            },
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 535,
            "description": "检查是否需要延时 check\n<br />以 html 属性 validCheckTimeout 定义, int 类型, type = ms",
            "itemtype": "method",
            "name": "checkTimeout",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_tm",
                    "description": "",
                    "type": "Int"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Valid instance"
            },
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 559,
            "description": "判断/设置 selector 的数据是否合法\n<br /> 通过 datavalid 属性判断",
            "itemtype": "method",
            "name": "dataValid",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_settter",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "_noStatus",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "_customMsg",
                    "description": "",
                    "type": "String"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 595,
            "description": "判断 selector 是否 Valid 的处理对象",
            "itemtype": "method",
            "name": "isValid",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 603,
            "description": "提供对各种显示状态 setTimeout 执行的正确性 控制逻辑",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 650,
            "description": "把一个表单项的状态设为正确状态",
            "itemtype": "method",
            "name": "setValid",
            "params": [
                {
                    "name": "_items",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_tm",
                    "description": "延时 _tm 毫秒显示处理结果, 默认=150",
                    "type": "Int"
                }
            ],
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 667,
            "description": "把一个表单项的状态设为错误状态",
            "itemtype": "method",
            "name": "setError",
            "params": [
                {
                    "name": "_items",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_msgAttr",
                    "description": "- 显示指定需要读取的错误信息属性名, 默认为 reqmsg, errmsg, 通过该属性可以指定别的属性名\n                                   <br /> 如果 _msgAttr 的第一个字符为空格, 将视为提示信息, 并自动生成属性 autoGenerateErrorMsg",
                    "type": "String"
                },
                {
                    "name": "_fullMsg",
                    "description": "- 显示指定错误信息为属性的值, 而不是自动添加的 请上传/选择/填写",
                    "type": "Bool"
                }
            ],
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 692,
            "description": "显示 focusmsg 属性的提示信息( 如果有的话 )",
            "itemtype": "method",
            "name": "setFocusMsg",
            "params": [
                {
                    "name": "_items",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setHide",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "_msgAttr",
                    "description": "- 显示指定需要读取的focusmsg信息属性名, 默认为 focusmsg, 通过该属性可以指定别的属性名\n                                   <br /> 如果 _msgAttr 的第一个字符为空格, 将视为提示信息, 并自动生成属性 autoGenerateFocusMsg",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 720,
            "description": "focus 时,是否总是显示 focusmsg 提示信息",
            "itemtype": "property",
            "name": "focusmsgEverytime",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 728,
            "description": "设置 em 的 css display 属性",
            "itemtype": "property",
            "name": "emDisplayType",
            "type": "string",
            "default": "inline",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 737,
            "description": "验证正确时, 是否显示正确的样式",
            "itemtype": "property",
            "name": "showValidStatus",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 745,
            "description": "清除Valid生成的错误样式",
            "itemtype": "method",
            "name": "clearError",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "-     需要清除错误的选择器",
                    "type": "Form|input|textarea|select|file|password"
                }
            ],
            "example": [
                "\n         JC.Valid.clearError( 'form' );\n         JC.Valid.clearError( 'input.some' );"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 756,
            "description": "验证发生错误时, 是否终止继续验证\n<br /> 为真终止继续验证, 为假将验证表单的所有项, 默认为 false",
            "itemtype": "property",
            "name": "errorAbort",
            "type": "bool",
            "default": "false",
            "static": 1,
            "example": [
                "\n           $(document).ready( function($evt){\n               JC.Valid.errorAbort = true;\n           });"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 769,
            "description": "是否自动清除两边的空格",
            "itemtype": "property",
            "name": "autoTrim",
            "type": "bool",
            "default": "true",
            "static": 1,
            "example": [
                "\n           $(document).ready( function($evt){\n               JC.Valid.autoTrim = false;\n           });"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 781,
            "description": "对一个 control 作检查后的回调, 无论正确与否都会触发",
            "itemtype": "property",
            "name": "itemCallback",
            "type": "function",
            "default": "undefined",
            "static": 1,
            "example": [
                "\n           $(document).ready( function($evt){\n               JC.Valid.itemCallback =\n                   function( _item, _isValid ){\n                       JC.log( 'JC.Valid.itemCallback _isValid:', _isValid );\n                   };\n           });"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 796,
            "description": "判断 表单控件是否为忽略检查 或者 设置 表单控件是否为忽略检查",
            "itemtype": "method",
            "name": "ignore",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_delIgnore",
                    "description": "是否删除忽略属性, 如果为 undefined 将不执行 添加删除操作",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 828,
            "description": "定义 form control",
            "itemtype": "property",
            "name": "_formControls",
            "return": {
                "description": "bool"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC",
            "subprops": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ]
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 837,
            "description": "判断 _selector 是否为 form control",
            "itemtype": "method",
            "name": "isFormControl",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 853,
            "description": "是否禁用 自动 check 事件( focus, blur, change )",
            "itemtype": "property",
            "name": "ignoreAutoCheckEvent",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 888,
            "description": "获取 _item 的检查类型",
            "itemtype": "method",
            "name": "parseDatatype",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 905,
            "description": "获取 _item 的检查子类型, 所有可用的检查子类型位于 _logic.subdatatype 对象",
            "itemtype": "method",
            "name": "parseSubdatatype",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1068,
            "description": "检查内容的长度",
            "itemtype": "method",
            "name": "lengthValid",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{integer}   maxlength       内容最大长度",
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_name\" minlength=\"2\" maxlength=\"120\" reqmsg=\"公司名称\" errmsg=\"请检查格式,长度2-120\" /> <em>公司名称描述</em>\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1095,
            "description": "根据特殊的 datatype 实现不同的计算方法",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1121,
            "description": "检查是否为正确的数字<br />\n<br>默认范围 0 - Math.pow(10, 10)",
            "itemtype": "method",
            "name": "n",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{integer|optional}      maxvalue    - 数值的上限",
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_n\" errmsg=\"请填写正确的正整数\" datatype=\"n\" >\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_n1\" errmsg=\"请填写正确的数字, 范围1-100\" datatype=\"n\" minvalue=\"1\", maxvalue=\"100\" >\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_n2\" errmsg=\"请填写正确的数字\" datatype=\"n-7.2\" >\n               </div>\n"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1195,
            "description": "检查两个输入框的数值\n<br /> 数字格式为 0-pow(10,10)\n<br /> 带小数点使用 nrange-int.float, 例: nrange-1.2  nrange-2.2\n<br /> <b>注意:</b> 如果不显示指定 fromNEl, toNEl, \n             将会从父级查找 datatype=nrange属性的input, 如果数量等于2, 则会进行验证, 不等2将忽略",
            "itemtype": "method",
            "name": "nrange",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{date string|optional}  maxvalue    - 数值的上限",
            "example": [
                "\n           <div class=\"f-l label\">\n               <label>(datatype nrange)正数:<br/><b style=\"color:red\">注意: 这个是大小颠倒位置的nrange</b></label>\n               大<input type=\"text\" name=\"company_n10\" id=\"company_n10\" fromNEl=\"company_n11\"\n                   errmsg=\"请填写正确的数值范围\" datatype=\"nrange\" emEl=\"nrange_n1011\" >\n               - 小<input type=\"text\" name=\"company_n11\" id=\"company_n11\" toNEl=\"company_n10\"\n                   errmsg=\"请填写正确的数值范围\" datatype=\"nrange\" emEl=\"nrange_n1011\" >\n               <em id=\"nrange_n1011\"></em>\n           </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1269,
            "description": "检查是否为合法的日期,\n<br />日期格式为 YYYYMMDD, YYYY/MM/DD, YYYY-MM-DD, YYYY.MM.DD",
            "itemtype": "method",
            "name": "d",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{date string|optional}  maxvalue    - 日期的上限",
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_d\" errmsg=\"请填写正确的日期范围2013-05-01 - 2013-05-31\" datatype=\"daterange\" minvalue=\"2013-05-01\" maxvalue=\"2013-05-31\" >\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1310,
            "description": "检查两个输入框的日期\n<br />日期格式为 YYYYMMDD, YYYY/MM/DD, YYYY-MM-DD, YYYY.MM.DD\n<br /> <b>注意:</b> 如果不显示指定 fromDateEl, toDateEl, \n             将会从父级查找 datatype=daterange属性的input, 如果数量等于2, 则会进行验证, 不等2将忽略",
            "itemtype": "method",
            "name": "daterange",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{date string|optional}  maxvalue    - 日期的上限",
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_daterange\" errmsg=\"请填写正确的日期范围,并且起始日期不能大于结束日期\" id=\"start_date\" \n                       datatype=\"daterange\" toDateEl=\"end_date\" emEl=\"date-err-em\" >\n                   - <input type=\"TEXT\" name=\"company_daterange\" errmsg=\"请填写正确的日期范围,并且起始日期不能大于结束日期\" id=\"end_date\" \n                       datatype=\"daterange\" fromDateEl=\"start_date\" emEl=\"date-err-em\" >\n                   <br /><em id=\"date-err-em\"></em>\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1382,
            "description": "检查时间格式, 格式为 hh:mm:ss",
            "itemtype": "method",
            "name": "time",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_time\" errmsg=\"正确的时间, 格式为 hh:mm:ss\" datatype=\"time\" >\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1399,
            "description": "检查时间格式, 格式为 hh:mm",
            "itemtype": "method",
            "name": "minute",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_time\" errmsg=\"正确的时间, 格式为 hh:mm\" datatype=\"minute\" >\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1416,
            "description": "检查银行卡号码\n<br />格式为: d{15}, d{16}, d{17}, d{19}",
            "itemtype": "method",
            "name": "bankcard",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_idnumber\" \n                       datatype=\"idnumber\" errmsg=\"请填写正确的身份证号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1442,
            "description": "检查中文姓名\n<br>格式: 汉字和大小写字母\n<br>规则: 长度 2-32个字节, 非 ASCII 算2个字节",
            "itemtype": "method",
            "name": "cnname",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_cnname\" \n                       datatype=\"cnname\" reqmsg=\"姓名\" errmsg=\"请填写正确的姓名\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1463,
            "description": "检查英文\n<br>格式: 大小写字母 + 空格\n<br>规则: 长度 2-32个字节, 非 ASCII 算2个字节",
            "itemtype": "method",
            "name": "enname",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_enname\" \n                       datatype=\"enname\" reqmsg=\"姓名\" errmsg=\"请填写正确的姓名\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1484,
            "description": "检查 英文名称/中文名称\n<br>allname = cnname + enname\n<br>规则: 长度 2-32个字节, 非 ASCII 算2个字节",
            "itemtype": "method",
            "name": "allname",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_allname\" \n                       datatype=\"allname\" reqmsg=\"姓名\" errmsg=\"请填写正确的姓名\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1507,
            "description": "检查注册用户名\n<br>格式: a-zA-Z0-9_-\n<br>规则: 首字母必须为 [a-zA-Z0-9], 长度 2 - 30",
            "itemtype": "method",
            "name": "username",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_username\" \n                       datatype=\"username\" reqmsg=\"用户名\" errmsg=\"请填写正确的用户名\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1527,
            "description": "检查身份证号码<br />\n目前只使用最简单的位数判断~ 有待完善",
            "itemtype": "method",
            "name": "idnumber",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           <div class=\"f-l\">\n               <input type=\"TEXT\" name=\"company_idnumber\" \n                   datatype=\"idnumber\" errmsg=\"请填写正确的身份证号码\">\n           </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1546,
            "description": "检查手机号码<br />",
            "itemtype": "method",
            "name": "mobilecode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n           <div class=\"f-l\">\n               <input type=\"TEXT\" name=\"company_mobile\" \n                   datatype=\"mobilecode\" subdatatype=\"alternative\" datatarget=\"input[name=company_phonecode]\" alternativemsg=\" \"\n                   errmsg=\"请填写正确的手机号码\">\n           </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1566,
            "description": "检查手机号码\n<br />这个方法是 mobilecode 的别名",
            "itemtype": "method",
            "name": "mobile",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1579,
            "description": "检查手机号码加强方法\n<br>格式: [+国家代码] [零]11位数字",
            "itemtype": "method",
            "name": "mobilezonecode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_mobilezone\" \n                       datatype=\"mobilezonecode\" \n                       errmsg=\"请填写正确的手机号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1600,
            "description": "检查电话号码\n<br>格式: 7/8位数字",
            "itemtype": "method",
            "name": "phonecode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div>\n                   <input type='TEXT' name='company_phonecode' style=\"width:80px;\" value='' size=\"8\" \n                       datatype=\"phonecode\" errmsg=\"请检查电话号码格式\" emEl=\"#phone-err-em\" />\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1619,
            "description": "检查电话号码\n<br>格式: [区号]7/8位电话号码",
            "itemtype": "method",
            "name": "phone",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_phone\" \n                       datatype=\"phone\" \n                       errmsg=\"请填写正确的电话号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1640,
            "description": "检查电话号码\n<br>格式: [+国家代码][ ][电话区号][ ]7/8位电话号码[#分机号]",
            "itemtype": "method",
            "name": "phoneall",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_mobilezone\" \n                       datatype=\"phoneall\" \n                       errmsg=\"请填写正确的电话号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1662,
            "description": "检查电话区号",
            "itemtype": "method",
            "name": "phonezone",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div>\n                   <input type='TEXT' name='company_phonezone' style=\"width:40px;\" value='' size=\"4\" \n                       datatype=\"phonezone\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的电话区号\" />\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1685,
            "description": "检查电话分机号码",
            "itemtype": "method",
            "name": "phoneext",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div>\n                   <input type='TEXT' name='company_phoneext' style=\"width:40px;\" value='' size=\"4\" \n                       datatype=\"phoneext\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的分机号\" />\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1703,
            "description": "检查手机号码/电话号码\n<br />这个方法是原有方法的混合验证 mobilecode + phone",
            "itemtype": "method",
            "name": "mobilephone",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l label\">\n                   <label>(datatype mobilephone, phone + mobilecode)手机号码或电话号码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"text\" name=\"company_mobilephone\" \n                       datatype=\"mobilephone\"\n                       errmsg=\"请填写正确的手机/电话号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1727,
            "description": "检查手机号码/电话号码, 泛匹配\n<br />这个方法是原有方法的混合验证 mobilezonecode + phoneall",
            "itemtype": "method",
            "name": "mobilephoneall",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l label\">\n                   <label>(datatype mobilephoneall, phoneall + mobilezonecode)手机号码或电话号码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"text\" name=\"company_mobilephoneall\" \n                       datatype=\"mobilephoneall\"\n                       errmsg=\"请填写正确的手机/电话号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1750,
            "description": "自定义正则校验",
            "itemtype": "method",
            "name": "reg",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{string}    reg-pattern     正则规则 /规则/选项",
            "example": [
                "\n                   <div><input type=\"TEXT\" name=\"company_addr\" datatype=\"reg\" reg-pattern=\"/^[\\s\\S]{2,120}$/i\" errmsg=\"请填写正确的地址\"></div>\n                   <div><input type=\"TEXT\" name=\"company_addr\" datatype=\"reg-/^[\\s\\S]{2,120}$/i\" errmsg=\"请填写正确的地址\"></div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1776,
            "description": "检查验证码<br />\n格式: 为 0-9a-zA-Z, 长度 默认为4",
            "itemtype": "method",
            "name": "vcode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{string}    datatype    vcode|vcode-[\\d]+",
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_vcode\" style=\"width: 40px;\"\n                       datatype=\"vcode\" reqmsg=\"验证码\" errmsg=\"请填写正确的验证码\">\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_vcode\" style=\"width: 40px;\"\n                       datatype=\"vcode-5\" errmsg=\"请填写正确的验证码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1802,
            "description": "检查文本长度",
            "itemtype": "method",
            "name": "text",
            "access": "private",
            "tagname": "",
            "static": 1,
            "see": [
                "length"
            ],
            "attr": "{string}    datatype    text",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1811,
            "description": "检查文本的字节长度",
            "itemtype": "method",
            "name": "bytetext",
            "access": "private",
            "tagname": "",
            "static": 1,
            "see": [
                "length"
            ],
            "attr": "{string}    datatype    bytetext",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1820,
            "description": "检查富文本的字节\n<br />TODO: 完成富文本长度检查",
            "itemtype": "method",
            "name": "richtext",
            "access": "private",
            "tagname": "",
            "static": 1,
            "see": [
                "length"
            ],
            "attr": "{string}    datatype    richtext",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1830,
            "description": "计算字符串的字节长度, 非 ASCII 0-255的字符视为两个字节",
            "itemtype": "method",
            "name": "bytelen",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_s",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1841,
            "description": "检查URL",
            "itemtype": "method",
            "name": "url",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_url\" datatype=\"url\" errmsg=\"请填写正确的网址\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1861,
            "description": "检查域名",
            "itemtype": "method",
            "name": "domain",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item!~YUIDOC_LINE~!",
                    "description": "<div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_domain\" datatype=\"domain\" reqmsg=\"域名\" errmsg=\"请填写正确的域名\">\n               </div>",
                    "type": "Selector"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1879,
            "description": "检查域名",
            "itemtype": "method",
            "name": "stricdomain",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item!~YUIDOC_LINE~!",
                    "description": "<div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_domain\" datatype=\"stricdomain\" reqmsg=\"域名\" errmsg=\"请填写正确的域名\">\n               </div>",
                    "type": "Selector"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1896,
            "description": "检查电子邮件",
            "itemtype": "method",
            "name": "email",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_email\" datatype=\"email\" reqmsg=\"邮箱\" errmsg=\"请填写正确的邮箱\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1913,
            "description": "检查地区代码",
            "itemtype": "method",
            "name": "countrycode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_countrycode\" datatype=\"countrycode\" errmsg=\"请填写正确的地区代码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1930,
            "description": "检查邮政编码",
            "itemtype": "method",
            "name": "zipcode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_zipcode\" datatype=\"zipcode\" errmsg=\"请填写正确的邮编\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1947,
            "description": "纳税人识别号, 15, 18, 20位字符",
            "itemtype": "method",
            "name": "taxcode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"\" datatype=\"taxcode\" errmsg=\"请填空正确的纳税人识别号\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 1968,
            "description": "此类型检查 2|N 个对象填写的值必须一致\n常用于注意时密码验证/重置密码",
            "itemtype": "method",
            "name": "reconfirm",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <dd>\n               <div class=\"f-l label\">\n                   <label>(datatype text, subdatatype reconfirm)用户密码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"PASSWORD\" name=\"company_pwd\" \n                   datatype=\"text\" subdatatype=\"reconfirm\" datatarget=\"input[name=company_repwd]\" reconfirmmsg=\"用户密码和确认密码不一致\"\n                   minlength=\"6\" maxlength=\"15\" reqmsg=\"用户密码\" errmsg=\"请填写正确的用户密码\">\n               </div>\n               </dd>\n\n               <dd>\n               <div class=\"f-l label\">\n                   <label>(datatype text, subdatatype reconfirm)确认密码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"PASSWORD\" name=\"company_repwd\" \n                   datatype=\"text\" subdatatype=\"reconfirm\" datatarget=\"input[name=company_pwd]\" reconfirmmsg=\"确认密码和用户密码不一致\"\n                   minlength=\"6\" maxlength=\"15\" reqmsg=\"确认密码\" errmsg=\"请填写正确的确认密码\">\n               </div>\n               </dd>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2056,
            "description": "此类型检查 2|N个对象必须至少有一个是有输入内容的, \n<br> 常用于 手机/电话 二填一",
            "itemtype": "method",
            "name": "alternative",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <dd>\n               <div class=\"f-l label\">\n                   <label>(datatype phonezone, phonecode, phoneext)电话号码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type='TEXT' name='company_phonezone' style=\"width:40px;\" value='' size=\"4\" \n                       datatype=\"phonezone\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的电话区号\" />\n                   - <input type='TEXT' name='company_phonecode' style=\"width:80px;\" value='' size=\"8\" \n                       datatype=\"phonecode\" subdatatype=\"alternative\" datatarget=\"input[name=company_mobile]\" alternativemsg=\"电话号码和手机号码至少填写一个\"\n                       errmsg=\"请检查电话号码格式\" emEl=\"#phone-err-em\" />\n                   - <input type='TEXT' name='company_phoneext' style=\"width:40px;\" value='' size=\"4\" \n                       datatype=\"phoneext\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的分机号\" />\n                   <em id=\"phone-err-em\"></em>\n               </div>\n               </dd>\n\n               <dd>\n               <div class=\"f-l label\">\n                   <label>(datatype mobilecode)手机号码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_mobile\" \n                       datatype=\"mobilecode\" subdatatype=\"alternative\" datatarget=\"input[name=company_phonecode]\" alternativemsg=\" \"\n                       errmsg=\"请填写正确的手机号码\">\n               </div>\n               </dd>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2205,
            "description": "如果 _item 的值非空, 那么 reqtarget 的值也不能为空",
            "itemtype": "method",
            "name": "reqtarget",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2229,
            "description": "N 个值必须保持唯一性, 不能有重复",
            "itemtype": "method",
            "name": "unique",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2405,
            "description": "获取 _selector 对象\n<br />这个方法的存在是为了向后兼容qwrap, qwrap DOM参数都为ID",
            "itemtype": "method",
            "name": "getElement",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2428,
            "description": "获取对应的错误信息, 默认的错误信息有 reqmsg, errmsg, <br />\n注意: 错误信息第一个字符如果为空格的话, 将完全使用用户定义的错误信息, 将不会动态添加 请上传/选择/填写",
            "itemtype": "method",
            "name": "errorMsg",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_msgAttr",
                    "description": "- 显示指定需要读取的错误信息属性名, 默认为 reqmsg, errmsg, 通过该属性可以指定别的属性名",
                    "type": "String"
                },
                {
                    "name": "_fullMsg",
                    "description": "- 显示指定错误信息为属性的值, 而不是自动添加的 请上传/选择/填写",
                    "type": "Bool"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2463,
            "description": "检查内容是否为空,\n<br>如果声明了该属性, 那么 value 须不为空",
            "itemtype": "method",
            "name": "reqmsg",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_name\" reqmsg=\"公司名称\" /> <em>公司名称描述</em>\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2550,
            "description": "这里需要优化检查, 目前会重复检查",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2640,
            "description": "验证文件扩展名",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2760,
            "description": "显示正确的视觉效果",
            "itemtype": "method",
            "name": "valid",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_tm",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_noStyle",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2818,
            "description": "显示错误的视觉效果",
            "itemtype": "method",
            "name": "error",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_msgAttr",
                    "description": "- 显示指定需要读取的错误信息属性名, 默认为 reqmsg, errmsg, 通过该属性可以指定别的属性名",
                    "type": "String"
                },
                {
                    "name": "_fullMsg",
                    "description": "- 显示指定错误信息为属性的值, 而不是自动添加的 请上传/选择/填写",
                    "type": "Bool"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2891,
            "description": "解析错误时触发的时件",
            "itemtype": "event",
            "name": "ValidError",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2895,
            "description": "解析正确时触发的时件",
            "itemtype": "event",
            "name": "ValidCorrect",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2899,
            "description": "响应表单子对象的 blur事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2909,
            "description": "响应没有 type 的 文本框",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2919,
            "description": "响应表单子对象的 change 事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2929,
            "description": "响应表单子对象的 focus 事件, 触发事件时, 如果有 focusmsg 属性, 则显示对应的提示信息",
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2940,
            "description": "响应表单子对象的 blur事件, 触发事件时, 如果有 focusmsg 属性, 则显示对应的提示信息",
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.Valid/0.2/Valid.js",
            "line": 2968,
            "description": "初始化 subdatatype = datavalid 相关事件",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 2,
            "description": "如果 console 不可用, 生成一个模拟的 console 对象",
            "class": "JC.f",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 9,
            "description": "声明主要命名空间, 方便迁移",
            "class": "JC.f",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 89,
            "description": "判断 JC.common 是否需要向后兼容, 如果需要的话, 向 window 添加全局静态函数",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 111,
            "description": "jquery 1.9.1 默认 string 没有 trim 方法, 这里对 string 原型添加一个默认的 trim 方法",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 115,
            "description": "全局 css z-index 控制属性\n<br /> <b>注意</b>: 这个变量是 window.ZINDEX_COUNT",
            "itemtype": "property",
            "name": "ZINDEX_COUNT",
            "type": "int",
            "default": "50001",
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 133,
            "description": "把函数的参数转为数组",
            "itemtype": "method",
            "name": "sliceArgs",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "type": "Arguments"
                }
            ],
            "return": {
                "description": "Array"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 147,
            "description": "取 URL 的 host name",
            "itemtype": "method",
            "name": "urlHostName",
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 163,
            "description": "把 URL 相对路径 转换为 绝对路径",
            "itemtype": "method",
            "name": "relativePath",
            "params": [
                {
                    "name": "_path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 191,
            "description": "按格式输出字符串",
            "itemtype": "method",
            "name": "printf",
            "static": 1,
            "params": [
                {
                    "name": "_str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "example": [
                "\n     printf( 'asdfasdf{0}sdfasdf{1}', '000', 1111 );\n     //return asdfasdf000sdfasdf1111"
            ],
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 207,
            "description": "判断URL中是否有某个get参数",
            "itemtype": "method",
            "name": "hasUrlParam",
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "example": [
                "\n     var bool = hasUrlParam( 'getkey' );"
            ],
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 229,
            "description": "添加URL参数\n<br /><b>require:</b> delUrlParam, filterXSS",
            "itemtype": "method",
            "name": "addUrlParams",
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "example": [
                "\n           var url = addUrlParams( location.href, {'key1': 'key1value', 'key2': 'key2value' } );"
            ],
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 255,
            "description": "xss 过滤函数",
            "itemtype": "method",
            "name": "filterXSS",
            "params": [
                {
                    "name": "_s",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 270,
            "description": "取URL参数的值\n<br /><b>require:</b> filterXSS",
            "itemtype": "method",
            "name": "getUrlParam",
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "example": [
                "\n           var defaultTag = getUrlParam(location.href, 'tag');  "
            ],
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 298,
            "description": "取URL参数的值, 这个方法返回数组\n<br />与 getUrlParam 的区别是可以获取 checkbox 的所有值\n<br /><b>require:</b> filterXSS",
            "itemtype": "method",
            "name": "getUrlParams",
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array"
            },
            "static": 1,
            "example": [
                "\n           var params = getUrlParams(location.href, 'tag');  "
            ],
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 328,
            "description": "删除URL参数\n<br /><b>require:</b> filterXSS",
            "itemtype": "method",
            "name": "delUrlParam",
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "example": [
                "\n           var url = delUrlParam( location.href, 'tag' );"
            ],
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 358,
            "description": "提示需要 HTTP 环境",
            "itemtype": "method",
            "name": "httpRequire",
            "static": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "要提示的文字, 默认 \"本示例需要HTTP环境'",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool     如果是HTTP环境返回true, 否则返回false"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 373,
            "description": "删除 URL 的锚点\n<br /><b>require:</b> addUrlParams, filterXSS",
            "itemtype": "method",
            "name": "removeUrlSharp",
            "static": 1,
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_nornd",
                    "description": "是否不添加随机参数",
                    "type": "Bool"
                },
                {
                    "name": "_rndName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 395,
            "description": "重载页面\n<br /><b>require:</b> removeUrlSharp, addUrlParams, filterXSS",
            "itemtype": "method",
            "name": "reloadPage",
            "static": 1,
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_nornd",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "_delayms",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 416,
            "description": "取小数点的N位\n<br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题",
            "itemtype": "method",
            "name": "parseFinance",
            "static": 1,
            "params": [
                {
                    "name": "_i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "_dot,",
                    "description": "default = 2",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "number"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 431,
            "description": "js 附加字串函数",
            "itemtype": "method",
            "name": "padChar",
            "static": 1,
            "params": [
                {
                    "name": "_str",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_len",
                    "description": "",
                    "type": "Intl"
                },
                {
                    "name": "_char",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 447,
            "description": "格式化日期为 YYYY-mm-dd 格式\n<br /><b>require</b>: pad\\_char\\_f",
            "itemtype": "method",
            "name": "formatISODate",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "要格式化日期的日期对象",
                    "type": "Date"
                },
                {
                    "name": "_split",
                    "description": "定义年月日的分隔符, 默认为 '-'",
                    "type": "String|undefined"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 461,
            "description": "从 ISODate 字符串解析日期对象",
            "itemtype": "method",
            "name": "parseISODate",
            "static": 1,
            "params": [
                {
                    "name": "_datestr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "date"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 479,
            "description": "从日期字符串解析日期对象\n<br />兼容 JC.Calendar 日期格式",
            "itemtype": "method",
            "name": "parseDate",
            "params": [
                {
                    "name": "_date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "_selector",
                    "description": "如果 _selector 为真, 则尝试从 _selector 的 html 属性 dateParse 对日期进行格式化",
                    "type": "Selector"
                },
                {
                    "name": "_forceISO",
                    "description": "是否强制转换为ISO日期",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Date|null"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 503,
            "description": "获取不带 时分秒的 日期对象",
            "itemtype": "method",
            "name": "pureDate",
            "params": [
                {
                    "name": "_d",
                    "description": "可选参数, 如果为空 = new Date",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Date"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 515,
            "description": "克隆日期对象",
            "itemtype": "method",
            "name": "cloneDate",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "需要克隆的日期",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "需要克隆的日期对象",
                "type": "Date"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 523,
            "description": "判断两个日期是否为同一天",
            "itemtype": "method",
            "name": "isSameDay",
            "static": 1,
            "params": [
                {
                    "name": "_d1",
                    "description": "需要判断的日期1",
                    "type": "Date"
                },
                {
                    "name": "_d2",
                    "description": "需要判断的日期2",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 535,
            "description": "判断两个日期是否为同一月份",
            "itemtype": "method",
            "name": "isSameMonth",
            "static": 1,
            "params": [
                {
                    "name": "_d1",
                    "description": "需要判断的日期1",
                    "type": "Date"
                },
                {
                    "name": "_d2",
                    "description": "需要判断的日期2",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 548,
            "description": "判断两个日期是否为同一季度",
            "itemtype": "method",
            "name": "isSameWeek",
            "static": 1,
            "params": [
                {
                    "name": "_d1",
                    "description": "需要判断的日期1",
                    "type": "Date"
                },
                {
                    "name": "_d2",
                    "description": "需要判断的日期2",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 579,
            "description": "判断两个日期是否为同一季度",
            "itemtype": "method",
            "name": "isSameSeason",
            "static": 1,
            "params": [
                {
                    "name": "_d1",
                    "description": "需要判断的日期1",
                    "type": "Date"
                },
                {
                    "name": "_d2",
                    "description": "需要判断的日期2",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 611,
            "description": "判断两个日期是否为同一年",
            "itemtype": "method",
            "name": "isSameSeason",
            "static": 1,
            "params": [
                {
                    "name": "_d1",
                    "description": "需要判断的日期1",
                    "type": "Date"
                },
                {
                    "name": "_d2",
                    "description": "需要判断的日期2",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 623,
            "description": "取一年中所有的星期, 及其开始结束日期",
            "itemtype": "method",
            "name": "weekOfYear",
            "static": 1,
            "params": [
                {
                    "name": "_year",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_dayOffset",
                    "description": "每周的默认开始为周几, 默认0(周一)",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Array"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 635,
            "description": "元旦开始的第一个星期一开始的一周为政治经济上的第一周",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 660,
            "description": "取一年中所有的季度, 及其开始结束日期",
            "itemtype": "method",
            "name": "seasonOfYear",
            "static": 1,
            "params": [
                {
                    "name": "_year",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Array"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 697,
            "description": "取得一个月份中最大的一天",
            "itemtype": "method",
            "name": "maxDayOfMonth",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "月份中最大的一天",
                "type": "Int"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 710,
            "description": "取当前脚本标签的 src路径",
            "itemtype": "method",
            "name": "scriptPath",
            "static": 1,
            "return": {
                "description": "脚本所在目录的完整路径",
                "type": "String"
            },
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 722,
            "description": "缓动函数, 动画效果为按时间缓动 \n<br />这个函数只考虑递增, 你如果需要递减的话, 在回调里用 _maxVal - _stepval",
            "itemtype": "method",
            "name": "easyEffect",
            "static": 1,
            "params": [
                {
                    "name": "_cb",
                    "description": "缓动运动时的回调",
                    "type": "Function"
                },
                {
                    "name": "_maxVal",
                    "description": "缓动的最大值, default = 200",
                    "type": "Number"
                },
                {
                    "name": "_startVal",
                    "description": "缓动的起始值, default = 0",
                    "type": "Number"
                },
                {
                    "name": "_duration",
                    "description": "缓动的总时间, 单位毫秒, default = 200",
                    "type": "Number"
                },
                {
                    "name": "_stepMs",
                    "description": "缓动的间隔, 单位毫秒, default = 2",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "interval"
            },
            "example": [
                "\n           $(document).ready(function(){\n               window.js_output = $('span.js_output');\n               window.ls = [];\n               window.EFF_INTERVAL = easyEffect( effectcallback, 100);\n           });\n\n           function effectcallback( _stepval, _done ){\n               js_output.html( _stepval );\n               ls.push( _stepval );\n\n               !_done && js_output.html( _stepval );\n               _done && js_output.html( _stepval + '<br />' + ls.join() );\n           }"
            ],
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 775,
            "description": "把输入值转换为布尔值",
            "itemtype": "method",
            "name": "parseBool",
            "params": [
                {
                    "name": "_input",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 794,
            "description": "绑定或清除 mousewheel 事件",
            "itemtype": "method",
            "name": "mousewheelEvent",
            "params": [
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "_detach",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 816,
            "description": "获取 selector 的指定父级标签",
            "itemtype": "method",
            "name": "getJqParent",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_filter",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "require": "jquery",
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 842,
            "description": "扩展 jquery 选择器\n<br />扩展起始字符的 '/' 符号为 jquery 父节点选择器\n<br />扩展起始字符的 '|' 符号为 jquery 子节点选择器\n<br />扩展起始字符的 '(' 符号为 jquery 父节点查找识别符( getJqParent )",
            "itemtype": "method",
            "name": "parentSelector",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_selector",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_finder",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "require": "jquery",
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 910,
            "description": "获取脚本模板的内容",
            "itemtype": "method",
            "name": "scriptContent",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 925,
            "description": "取函数名 ( 匿名函数返回空 )",
            "itemtype": "method",
            "name": "funcName",
            "params": [
                {
                    "name": "_func",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 940,
            "description": "动态添加内容时, 初始化可识别的组件\n<dl>\n     <dt>目前会自动识别的组件</dt>\n     <dd>\n         Bizs.CommonModify, JC.Panel, JC.Dialog\n         <br /><b>自动识别的组件不用显式调用  jcAutoInitComps 去识别可识别的组件</b>\n     </dd>\n</d>\n<dl>\n     <dt>可识别的组件</dt>\n     <dd>\n         JC.AutoSelect, JC.AutoChecked, JC.AjaxUpload, JC.Calendar\n         , JC.Drag, JC.DCalendar, JC.Placeholder, JC.TableFreeze, JC.ImageCutter\n         <br />Bizs.DisableLogic, Bizs.FormLogic, Bizs.MoneyTips, Bizs.AutoSelectComplete\n     </dd>\n</d>",
            "itemtype": "method",
            "name": "jcAutoInitComps",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 965,
            "description": "联动下拉框",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 969,
            "description": "日历组件",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 973,
            "description": "双日历组件",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 977,
            "description": "全选反选",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 981,
            "description": "Ajax 上传",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 985,
            "description": "占位符",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 989,
            "description": "表格冻结",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 993,
            "description": "拖曳",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 997,
            "description": "图片裁切",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1003,
            "description": "disable / enable",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1007,
            "description": "表单提交逻辑",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1011,
            "description": "格式化金额",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1015,
            "description": "自动完成",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1020,
            "description": "URL 占位符识别功能\n<br /><b>require:</b> addUrlParams, filterXSS",
            "itemtype": "method",
            "name": "urlDetect",
            "params": [
                {
                    "name": "_url",
                    "description": "如果 起始字符为 URL, 那么 URL 将祝为本页的URL",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "example": [
                "\n     urlDetect( '?test' ); //output: ?test\n\n     urlDetect( 'URL,a=1&b=2' ); //output: your.com?a=1&b=2\n     urlDetect( 'URL,a=1,b=2' ); //output: your.com?a=1&b=2\n     urlDetect( 'URLa=1&b=2' ); //output: your.com?a=1&b=2"
            ],
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1061,
            "description": "日期占位符识别功能",
            "itemtype": "method",
            "name": "dateDetect",
            "params": [
                {
                    "name": "_dateStr",
                    "description": "如果起始字符为 NOW, 那么将视为当前日期\n                                 , 如果起始字符为 NOWFirst, 那么将视为当前月的1号",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Date|null"
            },
            "static": 1,
            "example": [
                "\n     dateDetect( 'now' ); //2014-10-02\n     dateDetect( 'now,3d' ); //2013-10-05\n     dateDetect( 'now,-3d' ); //2013-09-29\n     dateDetect( 'now,2w' ); //2013-10-16\n     dateDetect( 'now,-2m' ); //2013-08-02\n     dateDetect( 'now,4y' ); //2017-10-02\n\n     dateDetect( 'now,1d,1w,1m,1y' ); //2014-11-10"
            ],
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1125,
            "description": "inject jquery val func, for hidden change event",
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1143,
            "description": "逗号格式化金额",
            "itemtype": "method",
            "name": "moneyFormat",
            "params": [
                {
                    "name": "_number",
                    "description": "",
                    "type": "Int|string"
                },
                {
                    "name": "_len",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_floatLen",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_splitSymbol",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1193,
            "description": "日期格式化 (具体格式请查看 PHP Date Formats)",
            "itemtype": "method",
            "name": "dateFormat",
            "params": [
                {
                    "name": "_date",
                    "description": "default = now",
                    "type": "Date"
                },
                {
                    "name": "_format",
                    "description": "default = \"YY-MM-DD\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1268,
            "description": "扩展对象属性",
            "itemtype": "method",
            "name": "extendObject",
            "params": [
                {
                    "name": "_source",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_new",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_overwrite",
                    "description": "是否覆盖已有属性, default = true",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "object"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1290,
            "description": "timeout 控制逻辑, 避免相同功能的 setTimeout 重复执行",
            "itemtype": "method",
            "name": "safeTimeout",
            "params": [
                {
                    "name": "_timeout",
                    "description": "",
                    "type": "Timeout|function"
                },
                {
                    "name": "_obj",
                    "description": "default = window.TIMEOUT_HOST || {}",
                    "type": "Object"
                },
                {
                    "name": "_name",
                    "description": "default = 'NORMAL'",
                    "type": "String"
                },
                {
                    "name": "_ms",
                    "description": "default = 50",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "object"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1311,
            "description": "URL 请求时, 获取对URL参数进行编码的函数",
            "itemtype": "method",
            "name": "encoder",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "default encodeURIComponent",
                "type": "Encode function"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/JC.common/0.2/common.js",
            "line": 1329,
            "description": "深度克隆对象",
            "itemtype": "method",
            "name": "cloneObject",
            "params": [
                {
                    "name": "_inObj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object"
            },
            "static": 1,
            "class": "JC.common",
            "namespace": "JC"
        },
        {
            "file": "../modules/SWFUpload/2.5.0/SWFUpload.js",
            "line": 1,
            "description": "SWFUpload: http://www.swfupload.org, http://swfupload.googlecode.com\n\nmmSWFUpload 1.0: Flash upload dialog - http://profandesign.se/swfupload/,  http://www.vinterwebb.se/\n\nSWFUpload is (c) 2006-2007 Lars Huring, Olov Nilzén and Mammon Media and is released under the MIT License:\nhttp://www.opensource.org/licenses/mit-license.php\n\nSWFUpload 2 is (c) 2007-2008 Jake Roberts and is released under the MIT License:\nhttp://www.opensource.org/licenses/mit-license.php\n\nSWFObject v2.2 <http://code.google.com/p/swfobject/> \n\tis released under the MIT License <http://www.opensource.org/licenses/mit-license.php>",
            "class": "window.jQuery",
            "namespace": "JC"
        },
        {
            "file": "../plugins/Aes/0.1/Aes.js",
            "line": 8,
            "description": "AES Cipher function: encrypt 'input' state with Rijndael algorithm\n  applies Nr rounds (10/12/14) using key schedule w for 'add round key' stage",
            "params": [
                {
                    "name": "input",
                    "description": "16-byte (128-bit) input state array",
                    "type": "Number[]"
                },
                {
                    "name": "w",
                    "description": "Key schedule as 2D byte-array (Nr+1 x Nb bytes)",
                    "type": "Number[][]"
                }
            ],
            "return": {
                "description": "Encrypted output state array",
                "type": "Number[]"
            },
            "class": "window.jQuery",
            "namespace": "JC"
        },
        {
            "file": "../plugins/Aes/0.1/Aes.js",
            "line": 41,
            "description": "Perform Key Expansion to generate a Key Schedule",
            "params": [
                {
                    "name": "key",
                    "description": "Key as 16/24/32-byte array",
                    "type": "Number[]"
                }
            ],
            "return": {
                "description": "Expanded key schedule as 2D byte-array (Nr+1 x Nb bytes)",
                "type": "Number[][]"
            },
            "class": "window.jQuery",
            "namespace": "JC"
        },
        {
            "file": "../plugins/Aes/0.1/Aes.js",
            "line": 171,
            "description": "Encrypt a text using AES encryption in Counter mode of operation\n\nUnicode multi-byte character safe",
            "params": [
                {
                    "name": "plaintext",
                    "description": "Source text to be encrypted",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "The password to use to generate a key",
                    "type": "String"
                },
                {
                    "name": "nBits",
                    "description": "Number of bits to be used in the key (128, 192, or 256)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Encrypted text",
                "type": "String"
            },
            "class": "window.jQuery",
            "namespace": "JC"
        },
        {
            "file": "../plugins/Aes/0.1/Aes.js",
            "line": 248,
            "description": "Decrypt a text encrypted by AES in counter mode of operation",
            "params": [
                {
                    "name": "ciphertext",
                    "description": "Source text to be encrypted",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "The password to use to generate a key",
                    "type": "String"
                },
                {
                    "name": "nBits",
                    "description": "Number of bits to be used in the key (128, 192, or 256)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Decrypted text",
                "type": "String"
            },
            "class": "window.jQuery",
            "namespace": "JC"
        },
        {
            "file": "../plugins/Aes/0.1/Aes.js",
            "line": 323,
            "description": "Encode string into Base64, as defined by RFC 4648 [http://tools.ietf.org/html/rfc4648]\n(instance method extending String object). As per RFC 4648, no newlines are added.",
            "params": [
                {
                    "name": "str",
                    "description": "The string to be encoded as base-64",
                    "type": "String"
                },
                {
                    "name": "utf8encode",
                    "description": "Flag to indicate whether str is Unicode string to be encoded \n  to UTF8 before conversion to base64; otherwise string is assumed to be 8-bit characters",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Base64-encoded string",
                "type": "String"
            },
            "class": "window.jQuery",
            "namespace": "JC"
        },
        {
            "file": "../plugins/Aes/0.1/Aes.js",
            "line": 366,
            "description": "Decode string from Base64, as defined by RFC 4648 [http://tools.ietf.org/html/rfc4648]\n(instance method extending String object). As per RFC 4648, newlines are not catered for.",
            "params": [
                {
                    "name": "str",
                    "description": "The string to be decoded from base-64",
                    "type": "String"
                },
                {
                    "name": "utf8decode",
                    "description": "Flag to indicate whether str is Unicode string to be decoded \n  from UTF8 after conversion from base64",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "decoded string",
                "type": "String"
            },
            "class": "window.jQuery",
            "namespace": "JC"
        },
        {
            "file": "../plugins/Aes/0.1/Aes.js",
            "line": 413,
            "description": "Encode multi-byte Unicode string into utf-8 multiple single-byte characters \n(BMP / basic multilingual plane only)\n\nChars in range U+0080 - U+07FF are encoded in 2 chars, U+0800 - U+FFFF in 3 chars",
            "params": [
                {
                    "name": "strUni",
                    "description": "Unicode string to be encoded as UTF-8",
                    "type": "String"
                }
            ],
            "return": {
                "description": "encoded string",
                "type": "String"
            },
            "class": "window.jQuery",
            "namespace": "JC"
        },
        {
            "file": "../plugins/Aes/0.1/Aes.js",
            "line": 440,
            "description": "Decode utf-8 encoded string back into multi-byte Unicode characters",
            "params": [
                {
                    "name": "strUtf",
                    "description": "UTF-8 string to be decoded back to Unicode",
                    "type": "String"
                }
            ],
            "return": {
                "description": "decoded string",
                "type": "String"
            },
            "class": "window.jQuery",
            "namespace": "JC"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 3,
            "description": "Top level namespace for Jasmine, a lightweight JavaScript BDD/spec/testing framework.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 10,
            "access": "private",
            "tagname": "",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 17,
            "description": "Use <code>jasmine.undefined</code> instead of <code>undefined</code>, since <code>undefined</code> is just\na plain old variable and may be redefined by somebody else.",
            "access": "private",
            "tagname": "",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 25,
            "description": "Show diagnostic messages in the console if set to true",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 31,
            "description": "Default interval in milliseconds for event loop yields (e.g. to allow network activity or to refresh the screen with the HTML-based runner). Small values here may result in slow test running. Zero means no updates until all tests have completed.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 37,
            "description": "Default timeout interval in milliseconds for waitsFor() blocks.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 50,
            "description": "Allows for bound functions to be compared.  Internal use only.",
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "base",
                    "description": "bound 'this' for the function",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "function to find",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 114,
            "description": "Getter for the Jasmine environment. Ensures one gets created",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 122,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 132,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 142,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 152,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "typeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 163,
            "description": "Pretty printer for expecations.  Takes any object and turns it into a human-readable string.",
            "params": [
                {
                    "name": "value",
                    "description": "an object to be outputted",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 175,
            "description": "Returns true if the object is a DOM Node.",
            "params": [
                {
                    "name": "obj",
                    "description": "object to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 185,
            "description": "Returns a matchable 'generic' object of the class type.  For use in expecations of type when values don't matter.",
            "example": [
                "\n// don't care about which function is passed in, as long as it's a function\nexpect(mySpy).toHaveBeenCalledWith(jasmine.any(Function));"
            ],
            "params": [
                {
                    "name": "clazz",
                    "description": "",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "matchable object of the type clazz"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 199,
            "description": "Returns a matchable subset of a JSON object. For use in expectations when you don't care about all of the\nattributes on the object.",
            "example": [
                "\n// don't care about any other attributes than foo.\nexpect(mySpy).toHaveBeenCalledWith(jasmine.objectContaining({foo: \"bar\"});"
            ],
            "params": [
                {
                    "name": "sample",
                    "description": "sample",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "matchable object for the sample"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 214,
            "description": "Jasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks.\n\nSpies should be created in test setup, before expectations.  They can then be checked, using the standard Jasmine\nexpectation syntax. Spies can be checked if they were called or not and what the calling params were.\n\nA Spy has the following fields: wasCalled, callCount, mostRecentCall, and argsForCall (see docs).\n\nSpies are torn down at the end of every spec.\n\nNote: Do <b>not</b> call new jasmine.Spy() directly - a spy must be created using spyOn, jasmine.createSpy or jasmine.createSpyObj.",
            "example": [
                "\n// a stub\nvar myStub = jasmine.createSpy('myStub');  // can be used anywhere\n\n// spy example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\n\n// actual foo.not will not be called, execution stops\nspyOn(foo, 'not');\n\n// foo.not spied upon, execution will continue to implementation\nspyOn(foo, 'not').andCallThrough();\n\n// fake example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\n\n// foo.not(val) will return val\nspyOn(foo, 'not').andCallFake(function(value) {return value;});\n\n// mock example\nfoo.not(7 == 7);\nexpect(foo.not).toHaveBeenCalled();\nexpect(foo.not).toHaveBeenCalledWith(true);"
            ],
            "is_constructor": 1,
            "see": [
                "spyOn",
                "jasmine.createSpy",
                "jasmine.createSpyObj"
            ],
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 259,
            "description": "The name of the spy, if provided.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 263,
            "description": "Is this Object a spy?",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 267,
            "description": "The actual function this spy stubs.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 272,
            "description": "Tracking of the most recent call to the spy.",
            "example": [
                "\nvar mySpy = jasmine.createSpy('foo');\nmySpy(1, 2);\nmySpy.mostRecentCall.args = [1, 2];"
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 281,
            "description": "Holds arguments for each call to the spy, indexed by call count",
            "example": [
                "\nvar mySpy = jasmine.createSpy('foo');\nmySpy(1, 2);\nmySpy(7, 8);\nmySpy.mostRecentCall.args = [7, 8];\nmySpy.argsForCall[0] = [1, 2];\nmySpy.argsForCall[1] = [7, 8];"
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 295,
            "description": "Tells a spy to call through to the actual implemenatation.",
            "example": [
                "\nvar foo = {\n  bar: function() { // do some stuff }\n}\n\n// defining a spy on an existing property: foo.bar\nspyOn(foo, 'bar').andCallThrough();"
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 311,
            "description": "For setting the return value of a spy.",
            "example": [
                "\n// defining a spy from scratch: foo() returns 'baz'\nvar foo = jasmine.createSpy('spy on foo').andReturn('baz');\n\n// defining a spy on an existing property: foo.bar() returns 'baz'\nspyOn(foo, 'bar').andReturn('baz');"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 330,
            "description": "For throwing an exception when a spy is called.",
            "example": [
                "\n// defining a spy from scratch: foo() throws an exception w/ message 'ouch'\nvar foo = jasmine.createSpy('spy on foo').andThrow('baz');\n\n// defining a spy on an existing property: foo.bar() throws an exception w/ message 'ouch'\nspyOn(foo, 'bar').andThrow('baz');"
            ],
            "params": [
                {
                    "name": "exceptionMsg",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 349,
            "description": "Calls an alternate implementation when a spy is called.",
            "example": [
                "\nvar baz = function() {\n  // do some stuff, return something\n}\n// defining a spy from scratch: foo() calls the function baz\nvar foo = jasmine.createSpy('spy on foo').andCall(baz);\n\n// defining a spy on an existing property: foo.bar() calls an anonymnous function\nspyOn(foo, 'bar').andCall(function() { return 'baz';} );"
            ],
            "params": [
                {
                    "name": "fakeFunc",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 369,
            "description": "Resets all of a spy's the tracking variables so that it can be used again.",
            "example": [
                "\nspyOn(foo, 'bar');\n\nfoo.bar();\n\nexpect(foo.bar.callCount).toEqual(1);\n\nfoo.bar.reset();\n\nexpect(foo.bar.callCount).toEqual(0);"
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 415,
            "description": "Determines whether an object is a spy.",
            "params": [
                {
                    "name": "putativeSpy",
                    "description": "",
                    "type": "jasmine.Spy|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 425,
            "description": "Creates a more complicated spy: an Object that has every property a function that is a spy.  Used for stubbing something\nlarge in one call.",
            "params": [
                {
                    "name": "baseName",
                    "description": "name of spy class",
                    "type": "String"
                },
                {
                    "name": "methodNames",
                    "description": "array of names of methods to make spies",
                    "type": "Array"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 443,
            "description": "All parameters are pretty-printed and concatenated together, then written to the current spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 453,
            "description": "Function that installs a spy on an existing object's method name.  Used within a Spec to create a spy.",
            "example": [
                "\n// spy example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\nspyOn(foo, 'not'); // actual foo.not will not be called, execution stops"
            ],
            "see": [
                "jasmine.createSpy"
            ],
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "methodName",
                    "description": ""
                }
            ],
            "return": {
                "description": "a Jasmine spy that can be chained with all spy methods"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 473,
            "description": "Creates a Jasmine spec that will be added to the current suite.\n\n// TODO: pending tests",
            "example": [
                "\nit('should be true', function() {\n  expect(true).toEqual(true);\n});"
            ],
            "params": [
                {
                    "name": "desc",
                    "description": "description of this specification",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "defines the preconditions and expectations of the spec",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 491,
            "description": "Creates a <em>disabled</em> Jasmine spec.\n\nA convenience method that allows existing specs to be disabled temporarily during development.",
            "params": [
                {
                    "name": "desc",
                    "description": "description of this specification",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "defines the preconditions and expectations of the spec",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 504,
            "description": "Starts a chain for a Jasmine expectation.\n\nIt is passed an Object that is the actual value and should chain to one of the many\njasmine.Matchers functions.",
            "params": [
                {
                    "name": "actual",
                    "description": "Actual value to test against and expected value",
                    "type": "Object"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 517,
            "description": "Defines part of a jasmine spec.  Used in cominbination with waits or waitsFor in asynchrnous specs.",
            "params": [
                {
                    "name": "func",
                    "description": "Function that defines part of a jasmine spec.",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 527,
            "description": "Waits a fixed time period before moving to the next block.",
            "deprecated": true,
            "deprecationMessage": "Use waitsFor() instead",
            "params": [
                {
                    "name": "timeout",
                    "description": "milliseconds to wait",
                    "type": "Number"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 538,
            "description": "Waits for the latchFunction to return true before proceeding to the next block.",
            "params": [
                {
                    "name": "latchFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "optional_timeoutMessage",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional_timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 550,
            "description": "A function that is called before each spec in a suite.\n\nUsed for spec setup, including validating assumptions.",
            "params": [
                {
                    "name": "beforeEachFunction",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 562,
            "description": "A function that is called after each spec in a suite.\n\nUsed for restoring any state that is hijacked during spec execution.",
            "params": [
                {
                    "name": "afterEachFunction",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 574,
            "description": "Defines a suite of specifications.\n\nStores the description and all defined specs in the Jasmine environment as one suite of specs. Variables declared\nare accessible by calls to beforeEach, it, and afterEach. Describe blocks can be nested, allowing for specialization\nof setup in some tests.",
            "example": [
                "\n// TODO: a simple suite\n\n// TODO: a simple suite with a nested describe block"
            ],
            "params": [
                {
                    "name": "description",
                    "description": "A string, usually the class under test.",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "function that defines several specs.",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 594,
            "description": "Disables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.",
            "params": [
                {
                    "name": "description",
                    "description": "A string, usually the class under test.",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "function that defines several specs.",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 633,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 638,
            "description": "Declare that a child class inherit it's prototype from the parent class.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "childClass",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "parentClass",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 646,
            "access": "private",
            "tagname": "",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 700,
            "description": "Environment for Jasmine",
            "is_constructor": 1,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 738,
            "return": {
                "description": "an object containing jasmine version build info, if set."
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 749,
            "return": {
                "description": "string containing jasmine version build info, if set."
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 766,
            "return": {
                "description": "a sequential integer starting at 0"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 773,
            "return": {
                "description": "a sequential integer starting at 0"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 780,
            "description": "Register a reporter to receive status updates from Jasmine.",
            "params": [
                {
                    "name": "reporter",
                    "description": "An object which will receive status updates.",
                    "type": "jasmine.Reporter"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 977,
            "is_constructor": 1,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1008,
            "description": "Blocks are functions with executable code that make up a spec.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "func",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "spec",
                    "description": "",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1030,
            "is_constructor": 1,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1132,
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "actual",
                    "description": ""
                },
                {
                    "name": "spec",
                    "description": "",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1209,
            "description": "toBe: compares the actual to the expected using ===",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1217,
            "description": "toNotBe: compares the actual to the expected using !==",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toBe() instead.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1226,
            "description": "toEqual: compares the actual to the expected using common sense equality. Handles Objects, Arrays, etc.",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1235,
            "description": "toNotEqual: compares the actual to the expected using the ! of jasmine.Matchers.toEqual",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toEqual() instead.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1244,
            "description": "Matcher that compares the actual to the expected using a regular expression.  Constructs a RegExp, so takes\na pattern or a String.",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1254,
            "description": "Matcher that compares the actual to the expected using the boolean inverse of jasmine.Matchers.toMatch",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toMatch() instead.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1263,
            "description": "Matcher that compares the actual to jasmine.undefined.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1270,
            "description": "Matcher that compares the actual to jasmine.undefined.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1277,
            "description": "Matcher that compares the actual to null.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1284,
            "description": "Matcher that boolean not-nots the actual.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1292,
            "description": "Matcher that boolean nots the actual.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1300,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was called.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1322,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1325,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was not called.",
            "deprecated": true,
            "deprecationMessage": "Use expect(xxx).not.toHaveBeenCalled() instead",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1349,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was called with a set of parameters.",
            "example": [
                "\n"
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1378,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1381,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1398,
            "description": "Matcher that checks that the expected item is an element in the actual Array.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1407,
            "description": "Matcher that checks that the expected item is NOT an element in the actual Array.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Object"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toContain() instead.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1425,
            "description": "Matcher that checks that the expected item is equal to the actual item\nup to a given level of decimal precision (default 2).",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1442,
            "description": "Matcher that checks that the expected exception was thrown by the actual.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1619,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1715,
            "is_constructor": 1,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1750,
            "description": "Holds results for a set of Jasmine spec. Allows for the results array to hold another jasmine.NestedResults",
            "is_constructor": 1,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1756,
            "description": "The total count of results",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1760,
            "description": "Number of passed results",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1764,
            "description": "Number of failed results",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1768,
            "description": "Was this suite/spec skipped?",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1772,
            "ignore": "",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1778,
            "description": "Roll up the result counts.",
            "params": [
                {
                    "name": "result",
                    "description": ""
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1789,
            "description": "Adds a log message.",
            "params": [
                {
                    "name": "values",
                    "description": "Array of message parts which will be concatenated later."
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1797,
            "description": "Getter for the results: message & results.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1804,
            "description": "Adds a result, tracking counts (total, passed, & failed)",
            "params": [
                {
                    "name": "result",
                    "description": "",
                    "type": "jasmine.ExpectationResult|jasmine.NestedResults"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1824,
            "return": {
                "description": "True if <b>everything</b> below passed",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1830,
            "description": "Base class for pretty printing for expectation results.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 1837,
            "description": "Formats a value in a nice, human-readable string.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 2052,
            "description": "Runner",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 2129,
            "description": "Internal representation of a Jasmine specification, or test.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "suite",
                    "description": "",
                    "type": "jasmine.Suite"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 2168,
            "description": "All parameters are pretty-printed and concatenated together, then written to the spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 2191,
            "params": [
                {
                    "name": "result",
                    "description": "",
                    "type": "jasmine.ExpectationResult"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 2204,
            "description": "Waits a fixed time period before moving to the next block.",
            "deprecated": true,
            "deprecationMessage": "Use waitsFor() instead",
            "params": [
                {
                    "name": "timeout",
                    "description": "milliseconds to wait",
                    "type": "Number"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 2216,
            "description": "Waits for the latchFunction to return true before proceeding to the next block.",
            "params": [
                {
                    "name": "latchFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "optional_timeoutMessage",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional_timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 2372,
            "description": "Internal representation of a Jasmine suite.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "parentSuite",
                    "description": "",
                    "type": "jasmine.Suite"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js",
            "line": 2469,
            "description": "A block which waits for some condition to become true, with timeout.",
            "is_constructor": 1,
            "extends": "jasmine.Block",
            "params": [
                {
                    "name": "env",
                    "description": "The Jasmine environment.",
                    "type": "jasmine.Env"
                },
                {
                    "name": "timeout",
                    "description": "The maximum time in milliseconds to wait for the condition to become true.",
                    "type": "Number"
                },
                {
                    "name": "latchFunction",
                    "description": "A function which returns true when the desired condition has been met.",
                    "type": "Function"
                },
                {
                    "name": "message",
                    "description": "The message to display if the desired condition hasn't been met within the given time period.",
                    "type": "String"
                },
                {
                    "name": "spec",
                    "description": "The Jasmine spec.",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/requirejs.domReady/2.0.1/domReady.js",
            "line": 1,
            "license": "RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/requirejs/domReady for details",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/requirejs.domReady/2.0.1/domReady.js",
            "line": 40,
            "description": "Sets the page as loaded.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/requirejs.domReady/2.0.1/domReady.js",
            "line": 97,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/requirejs.domReady/2.0.1/domReady.js",
            "line": 99,
            "description": "Registers a callback for DOM ready. If DOM is already ready, the\ncallback is called immediately.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/requirejs.domReady/2.0.1/domReady.js",
            "line": 115,
            "description": "Loader Plugin API method",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/requirejs.domReady/2.0.1/domReady.js",
            "line": 126,
            "class": "window.jQuery"
        },
        {
            "file": "../config.js",
            "line": 4,
            "description": "requirejs config.js for JC Project",
            "class": "window.jQuery"
        },
        {
            "file": "../config.js",
            "line": 102,
            "description": "取当前脚本标签的 src路径",
            "static": 1,
            "return": {
                "description": "脚本所在目录的完整路径",
                "type": "String"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../lib.js",
            "line": 2,
            "description": "取当前脚本标签的 src路径",
            "author": "scuehs@btbtd.org 2013-05-23",
            "return": {
                "description": "脚本所在目录的完整路径",
                "type": "String"
            },
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 8,
            "license": "RequireJS 2.1.8 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/jrburke/requirejs for details",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 56,
            "description": "Helper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 71,
            "description": "Helper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 94,
            "description": "Cycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 110,
            "description": "Simple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 161,
            "description": "Constructs an error with a pointer to an URL with more information.",
            "params": [
                {
                    "name": "id",
                    "description": "the error ID that maps to an ID on a web page.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "human readable error.",
                    "type": "String"
                },
                {
                    "name": "err",
                    "description": "the original error, if there is one.",
                    "type": "Error",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            },
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 227,
            "description": "Trims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "params": [
                {
                    "name": "ary",
                    "description": "the array of path segments.",
                    "type": "Array"
                }
            ],
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 260,
            "description": "Given a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "params": [
                {
                    "name": "name",
                    "description": "the relative name",
                    "type": "String"
                },
                {
                    "name": "baseName",
                    "description": "a real name that the name arg is relative\nto.",
                    "type": "String"
                },
                {
                    "name": "applyMap",
                    "description": "apply the map config to the value. Should\nonly be done if this normalization is for a dependency ID.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "normalized name",
                "type": "String"
            },
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 406,
            "description": "Creates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "params": [
                {
                    "name": "name",
                    "description": "the module name",
                    "type": "String"
                },
                {
                    "name": "parentModuleMap",
                    "description": "parent module map\nfor the module name, used to resolve relative names.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "isNormalized:",
                    "description": "is the ID already normalized.\nThis is true if this call is done for a define() module ID.",
                    "type": "Boolean"
                },
                {
                    "name": "applyMap:",
                    "description": "apply the map config to the ID.\nShould only be true if this map is for a dependency.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 548,
            "description": "Internal method to transfer globalQueue items to this context's\ndefQueue.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 836,
            "description": "Checks if the module is ready to define itself, and if so,\ndefine it.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1195,
            "description": "Given an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "params": [
                {
                    "name": "evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1248,
            "description": "Set a configuration for the context.",
            "params": [
                {
                    "name": "cfg",
                    "description": "config object to integrate.",
                    "type": "Object"
                }
            ],
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1432,
            "description": "Converts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1494,
            "description": "Called to enable a module if it is still in the registry\nawaiting enablement. A second arg, parent, the parent module,\nis passed in for context, when this method is overriden by\nthe optimizer. Not shown here to keep code compact.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1507,
            "description": "Internal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "params": [
                {
                    "name": "moduleName",
                    "description": "the name of the module to potentially complete.",
                    "type": "String"
                }
            ],
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1563,
            "description": "Converts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1634,
            "description": "Executes a module callback function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "access": "private",
            "tagname": "",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1645,
            "description": "callback for script loads, used to check status of loading.",
            "params": [
                {
                    "name": "evt",
                    "description": "the event from the browser for the script\nthat was loaded.",
                    "type": "Event"
                }
            ],
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1667,
            "description": "Callback for script errors.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1682,
            "description": "Main entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1732,
            "description": "Support require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1740,
            "description": "Execute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "params": [
                {
                    "name": "fn",
                    "description": "function to execute later.",
                    "type": "Function"
                }
            ],
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1750,
            "description": "Export require as a global, but only if it does not already exist.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1797,
            "description": "Any errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "params": [
                {
                    "name": "err",
                    "description": "the error object.",
                    "type": "Error"
                }
            ],
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1804,
            "description": "Creates the node for the load command. Only used in browser envs.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1817,
            "description": "Does the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "params": [
                {
                    "name": "context",
                    "description": "the require context to find state.",
                    "type": "Object"
                },
                {
                    "name": "moduleName",
                    "description": "the name of the module.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "the URL to the module.",
                    "type": "Object"
                }
            ],
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 1973,
            "description": "The function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "class": "window.requirejs",
            "namespace": "window"
        },
        {
            "file": "../require.js",
            "line": 2047,
            "description": "Executes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "params": [
                {
                    "name": "text",
                    "description": "the text to execute/evaluate.",
                    "type": "String"
                }
            ],
            "class": "window.requirejs",
            "namespace": "window"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.ActionLogic/0.1/ActionLogic.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.AutoSelectComplete/0.1/AutoSelectComplete.js:4"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.ChangeLogic/0.1/ChangeLogic.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.CommonModify/0.1/CommonModify.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.DMultiDate/0.1/DMultiDate.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.DisableLogic/0.1/DisableLogic.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.DropdownTree/0.1/DropdownTree.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.FormLogic/0.2/FormLogic.js:4"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.FormLogic/0.2/FormLogic.js:4"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.KillISPCache/0.1/KillISPCache.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.MoneyTips/0.1/MoneyTips.js:4"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.MultiDate/0.1/MultiDate.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/Bizs.MultiSelect/0.1/MultiSelect.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.AjaxUpload/0.2/AjaxUpload.js:2"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.AjaxUpload/0.2/AjaxUpload.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.AjaxUpload/dev/AjaxUpload.js:4"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.AjaxUpload/dev/AjaxUpload.js:4"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.AutoChecked/0.1/AutoChecked.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.AutoComplete/0.1/AutoComplete.js:4"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.AutoSelect/0.2/AutoSelect.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.AutoSelect/0.2/AutoSelect.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.BaseMVC/0.1/BaseMVC.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.BaseMVC/0.1/BaseMVC.js:215"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Calendar/0.3/Calendar.date.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Calendar/0.3/Calendar.date.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Calendar/0.3/Calendar.date.js:3"
        },
        {
            "message": "unknown tag: prototype",
            "line": " ../modules/JC.Calendar/0.3/Calendar.date.js:522"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Drag/0.1/Drag.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Fixed/0.1/Fixed.js:6"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.Fixed/0.1/Fixed.js:6"
        },
        {
            "message": "unknown tag: require",
            "line": " ../modules/JC.Fixed/0.1/Fixed.js:438"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Form/0.2/Form.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Form/0.2/Form.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.FormFillUrl/0.1/FormFillUrl.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.ImageCutter/0.1/ImageCutter.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.ImageCutter/dev/ImageCutter.js:7"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Lazyload/0.1/Lazyload.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:6"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.NumericStepper/0.1/NumericStepper.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:4"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:4"
        },
        {
            "message": "unknown tag: prototype",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:846"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:1167"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:1167"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:1167"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:1167"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:1167"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Placeholder/0.1/Placeholder.js:2"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.Placeholder/0.1/Placeholder.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.PopTips/0.1/PopTips.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Slider/0.1/Slider.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.Slider/0.1/Slider.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Suggest/0.1/Suggest.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.Suggest/0.1/Suggest.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Tab/0.1/Tab.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.Tab/0.1/Tab.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.TableFreeze/0.2/TableFreeze.js:7"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.TableSort/0.1/TableSort.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Tips/0.1/Tips.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.Tips/0.1/Tips.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Tree/0.1/Tree.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../modules/JC.Tree/0.1/Tree.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Valid/0.2/Valid.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.Valid/0.2/Valid.js:6"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1068"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1068"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1068"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1121"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1121"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1121"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1195"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1195"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1195"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1195"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1195"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1269"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1269"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1269"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1310"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1310"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1310"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1310"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1310"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1750"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1776"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1802"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1811"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1820"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.common/0.2/common.js:25"
        },
        {
            "message": "unknown tag: version",
            "line": " ../modules/JC.common/0.2/common.js:25"
        },
        {
            "message": "unknown tag: require",
            "line": " ../modules/JC.common/0.2/common.js:816"
        },
        {
            "message": "unknown tag: require",
            "line": " ../modules/JC.common/0.2/common.js:842"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/Aes/0.1/Aes.js:8"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/Aes/0.1/Aes.js:41"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/Aes/0.1/Aes.js:171"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/Aes/0.1/Aes.js:248"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/Aes/0.1/Aes.js:323"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/Aes/0.1/Aes.js:366"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/Aes/0.1/Aes.js:413"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/Aes/0.1/Aes.js:440"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:50"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:122"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:132"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:132"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:142"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:142"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:163"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:175"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:185"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:199"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:415"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:453"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:738"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:749"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:766"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:773"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1772"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1824"
        },
        {
            "message": "unknown tag: license",
            "line": " ../plugins/requirejs.domReady/2.0.1/domReady.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " ../require.js:8"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../require.js:161"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../require.js:260"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../require.js:406"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../require.js:1195"
        },
        {
            "message": "Missing item type\n脚本模板 Panel",
            "line": " ../modules/Bizs.ActionLogic/0.1/ActionLogic.js:226"
        },
        {
            "message": "Missing item type\n显示 Panel",
            "line": " ../modules/Bizs.ActionLogic/0.1/ActionLogic.js:232"
        },
        {
            "message": "Missing item type\najax Panel",
            "line": " ../modules/Bizs.ActionLogic/0.1/ActionLogic.js:247"
        },
        {
            "message": "Missing item type\n跳转到 URL",
            "line": " ../modules/Bizs.ActionLogic/0.1/ActionLogic.js:277"
        },
        {
            "message": "Missing item type\najax 执行操作",
            "line": " ../modules/Bizs.ActionLogic/0.1/ActionLogic.js:286"
        },
        {
            "message": "Missing item type\n处理错误提示",
            "line": " ../modules/Bizs.ActionLogic/0.1/ActionLogic.js:334"
        },
        {
            "message": "Missing item type\n处理二次确认",
            "line": " ../modules/Bizs.ActionLogic/0.1/ActionLogic.js:366"
        },
        {
            "message": "Missing item type\n处理成功提示",
            "line": " ../modules/Bizs.ActionLogic/0.1/ActionLogic.js:386"
        },
        {
            "message": "Missing item type\nselectallchanged",
            "line": " ../modules/Bizs.AutoSelectComplete/0.1/AutoSelectComplete.js:214"
        },
        {
            "message": "Missing item type\nupdate current selector",
            "line": " ../modules/Bizs.CommonModify/0.1/CommonModify.js:232"
        },
        {
            "message": "Missing item type\n更新日历的类型day/week/season/year\n日历输入框，及隐藏域的值清空\n打开第一个日历输入框的日历面板",
            "line": " ../modules/Bizs.DMultiDate/0.1/DMultiDate.js:98"
        },
        {
            "message": "Missing item type\n默认 form 提交处理事件\n这个如果是 AJAX 的话, 无法上传 文件",
            "line": " ../modules/Bizs.FormLogic/0.2/FormLogic.js:419"
        },
        {
            "message": "Missing item type\n全局 AJAX 提交完成后的处理事件",
            "line": " ../modules/Bizs.FormLogic/0.2/FormLogic.js:509"
        },
        {
            "message": "Missing item type\n这是个神奇的BUG\nchrome 如果没有 reset button, 触发 reset 会导致页面刷新",
            "line": " ../modules/Bizs.FormLogic/0.2/FormLogic.js:515"
        },
        {
            "message": "Missing item type\n表单内容验证通过后, 开始提交前的处理事件",
            "line": " ../modules/Bizs.FormLogic/0.2/FormLogic.js:561"
        },
        {
            "message": "Missing item type\n这个回调的 this 指针是 window",
            "line": " ../modules/Bizs.FormLogic/0.2/FormLogic.js:780"
        },
        {
            "message": "Missing item type\n文件扩展名错误",
            "line": " ../modules/JC.AjaxUpload/0.2/AjaxUpload.js:246"
        },
        {
            "message": "Missing item type\n上传前触发的事件",
            "line": " ../modules/JC.AjaxUpload/0.2/AjaxUpload.js:253"
        },
        {
            "message": "Missing item type\n上传完毕触发的事件",
            "line": " ../modules/JC.AjaxUpload/0.2/AjaxUpload.js:259"
        },
        {
            "message": "Missing item type\n恢复默认状态",
            "line": " ../modules/JC.AjaxUpload/0.2/AjaxUpload.js:748"
        },
        {
            "message": "Missing item type\n文件扩展名错误",
            "line": " ../modules/JC.AjaxUpload/dev/AjaxUpload.js:211"
        },
        {
            "message": "Missing item type\n上传前触发的事件",
            "line": " ../modules/JC.AjaxUpload/dev/AjaxUpload.js:218"
        },
        {
            "message": "Missing item type\n上传完毕触发的事件",
            "line": " ../modules/JC.AjaxUpload/dev/AjaxUpload.js:224"
        },
        {
            "message": "Missing item type\n恢复默认状态",
            "line": " ../modules/JC.AjaxUpload/dev/AjaxUpload.js:703"
        },
        {
            "message": "Missing item type\n点击列表时, 阻止冒泡",
            "line": " ../modules/JC.AutoComplete/0.1/AutoComplete.js:345"
        },
        {
            "message": "Missing item type\n响应 li 点击时, 更新对应的内容",
            "line": " ../modules/JC.AutoComplete/0.1/AutoComplete.js:403"
        },
        {
            "message": "Missing item type\n验证 key && id 是否正确\n仅在 cacStrictData 为真的时候进行验证",
            "line": " ../modules/JC.AutoComplete/0.1/AutoComplete.js:595"
        },
        {
            "message": "Missing item type\n判断下拉框的option里是否有给定的值",
            "line": " ../modules/JC.AutoSelect/0.2/AutoSelect.js:891"
        },
        {
            "message": "Missing item type\n页面加载完毕时, 延时进行自动化, 延时可以避免来自其他逻辑的干扰",
            "line": " ../modules/JC.AutoSelect/0.2/AutoSelect.js:1001"
        },
        {
            "message": "Missing item type\n初始化 BaseMVC Model 类 和 View 类",
            "line": " ../modules/JC.BaseMVC/0.1/BaseMVC.js:210"
        },
        {
            "message": "Missing item type\n使用 jquery on 为 controler 绑定事件",
            "line": " ../modules/JC.BaseMVC/0.1/BaseMVC.js:473"
        },
        {
            "message": "Missing item type\n使用 jquery trigger 触发 controler 绑定事件",
            "line": " ../modules/JC.BaseMVC/0.1/BaseMVC.js:481"
        },
        {
            "message": "Missing item type\n保存所有类型的 Calendar 日期实例 \n<br />目前有 date, week, month, season 四种类型的实例\n<br />每种类型都是单例模式",
            "line": " ../modules/JC.Calendar/0.3/Calendar.date.js:522"
        },
        {
            "message": "Missing item type\n请使用 isCalendar, 这个方法是为了向后兼容",
            "line": " ../modules/JC.Calendar/0.3/Calendar.date.js:594"
        },
        {
            "message": "Missing item type\n这个方法后续版本不再使用, 请使用 Calendar.position",
            "line": " ../modules/JC.Calendar/0.3/Calendar.date.js:775"
        },
        {
            "message": "Missing item type\n延迟200毫秒初始化页面的所有日历控件\n之所以要延迟是可以让用户自己设置是否需要自动初始化",
            "line": " ../modules/JC.Calendar/0.3/Calendar.date.js:2019"
        },
        {
            "message": "Missing item type\n这个判断是为了向后兼容 JC 0.1\n使用 requirejs 的项目可以移除这段判断代码",
            "line": " ../modules/JC.Calendar/0.3/Calendar.js:5"
        },
        {
            "message": "Missing item type\n如果 atd 为空, 那么是 全选按钮触发的事件",
            "line": " ../modules/JC.Calendar/0.3/Calendar.monthday.js:215"
        },
        {
            "message": "Missing item type\n显示的月份面板为2到12个",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:584"
        },
        {
            "message": "Missing item type\nDCalendar显示时的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1107"
        },
        {
            "message": "Missing item type\nDCalendar隐藏时的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1118"
        },
        {
            "message": "Missing item type\n清除选中的日期后的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1129"
        },
        {
            "message": "Missing item type\n选择日期赋值后的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1140"
        },
        {
            "message": "Missing item type\n更改月份之前的回调，月历面板显示后",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1151"
        },
        {
            "message": "Missing item type\n更改月份后的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1162"
        },
        {
            "message": "Missing item type\n更改年份之前的回调，年份面板显示后",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1173"
        },
        {
            "message": "Missing item type\n更改年份后的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1184"
        },
        {
            "message": "Missing item type\n点击下一月的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1195"
        },
        {
            "message": "Missing item type\n点击上一月的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1206"
        },
        {
            "message": "Missing item type\n点击下一年的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1217"
        },
        {
            "message": "Missing item type\n点击上一年的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1228"
        },
        {
            "message": "Missing item type\n点击下一页年份的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1239"
        },
        {
            "message": "Missing item type\n点击上一页年份的回调",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.date.js:1250"
        },
        {
            "message": "Missing item type\n�����ж���Ϊ���������� JC 0.1\nʹ�� requirejs ����Ŀ�����Ƴ������жϴ���",
            "line": " ../modules/JC.DCalendar/0.1/DCalendar.js:4"
        },
        {
            "message": "Missing item type\n判断两个矩形是否有交集",
            "line": " ../modules/JC.Drag/0.1/Drag.js:853"
        },
        {
            "message": "Missing item type\n把坐标和宽高生成一个 rectangle 数据",
            "line": " ../modules/JC.Drag/0.1/Drag.js:864"
        },
        {
            "message": "Missing item type\n把 rectangle 数据 转换为 坐标数据",
            "line": " ../modules/JC.Drag/0.1/Drag.js:876"
        },
        {
            "message": "Missing item type\n计算两个坐标点之间的距离",
            "line": " ../modules/JC.Drag/0.1/Drag.js:886"
        },
        {
            "message": "Missing item type\n按比例缩放图片\n<br />返回: { width: int, height: int }",
            "line": " ../modules/JC.ImageCutter/0.1/ImageCutter.js:1745"
        },
        {
            "message": "Missing item type\n计算两个坐标点之间的距离",
            "line": " ../modules/JC.ImageCutter/0.1/ImageCutter.js:1769"
        },
        {
            "message": "Missing item type\n从长度和角度求坐标点",
            "line": " ../modules/JC.ImageCutter/0.1/ImageCutter.js:1779"
        },
        {
            "message": "Missing item type\n按比例缩放图片\n<br />返回: { width: int, height: int }",
            "line": " ../modules/JC.ImageCutter/dev/ImageCutter.js:1284"
        },
        {
            "message": "Missing item type\n计算两个坐标点之间的距离",
            "line": " ../modules/JC.ImageCutter/dev/ImageCutter.js:1308"
        },
        {
            "message": "Missing item type\n从长度和角度求坐标点",
            "line": " ../modules/JC.ImageCutter/dev/ImageCutter.js:1318"
        },
        {
            "message": "Missing item type\n滚动的方向，水平，垂直，默认垂直滚动",
            "line": " ../modules/JC.Lazyload/0.1/Lazyload.js:203"
        },
        {
            "message": "Missing item type\n加载范围阀值，以达到预加载效果，默认为0",
            "line": " ../modules/JC.Lazyload/0.1/Lazyload.js:214"
        },
        {
            "message": "Missing item type\n占位图，如果图片没有设置src属性，则用该图片替换",
            "line": " ../modules/JC.Lazyload/0.1/Lazyload.js:221"
        },
        {
            "message": "Missing item type\n可视范围容器，默认为window",
            "line": " ../modules/JC.Lazyload/0.1/Lazyload.js:232"
        },
        {
            "message": "Missing item type\n获取需要延时加载的html tag，图片|textarea|ajax",
            "line": " ../modules/JC.Lazyload/0.1/Lazyload.js:239"
        },
        {
            "message": "Missing item type\n计算可视范围\n垂直滚动 height + scrollTop\n水平滚动 width + scrollLeft",
            "line": " ../modules/JC.Lazyload/0.1/Lazyload.js:275"
        },
        {
            "message": "Missing item type\n监听上一年按钮",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:999"
        },
        {
            "message": "Missing item type\n监听上一月按钮",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:1008"
        },
        {
            "message": "Missing item type\n监听下一月按钮",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:1017"
        },
        {
            "message": "Missing item type\n监听下一年按钮",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:1026"
        },
        {
            "message": "Missing item type\n监听年份按钮, 是否要显示年份列表",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:1035"
        },
        {
            "message": "Missing item type\n监听月份按钮, 是否要显示月份列表",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:1057"
        },
        {
            "message": "Missing item type\n监听年份列表选择状态",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:1072"
        },
        {
            "message": "Missing item type\n监听月份列表选择状态",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:1084"
        },
        {
            "message": "Missing item type\n监听日期单元格点击事件",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:1096"
        },
        {
            "message": "Missing item type\n监听body点击事件, 点击时隐藏日历控件的年份和月份列表",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.default.js:1127"
        },
        {
            "message": "Missing item type\n这个判断是为了向后兼容 JC 0.1\n使用 requirejs 的项目可以移除这段判断代码",
            "line": " ../modules/JC.LunarCalendar/0.1/LunarCalendar.js:8"
        },
        {
            "message": "Missing item type\n响应窗口改变大小和滚动",
            "line": " ../modules/JC.Panel/0.2/Dialog.js:203"
        },
        {
            "message": "Missing item type\n初始化Panel 默认事件",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:250"
        },
        {
            "message": "Missing item type\nclickClose 的别名\n<br />这个方法的存在是为了向后兼容, 请使用 clickClose",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:406"
        },
        {
            "message": "Missing item type\n默认模板",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:846"
        },
        {
            "message": "Missing item type\nPanel 的默认模板",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:1056"
        },
        {
            "message": "Missing item type\n从 HTML 属性 自动执行 popup",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:1167"
        },
        {
            "message": "Missing item type\n隐藏关闭按钮",
            "line": " ../modules/JC.Panel/0.2/Panel.default.js:1209"
        },
        {
            "message": "Missing item type\n这个判断是为了向后兼容 JC 0.1\n使用 requirejs 的项目可以移除这段判断代码",
            "line": " ../modules/JC.Panel/0.2/Panel.js:3"
        },
        {
            "message": "Missing item type\n响应窗口改变大小",
            "line": " ../modules/JC.Panel/0.2/Panel.popup.js:570"
        },
        {
            "message": "Missing item type\n设置 控件 光标位置\nx@btbtd.org  2012-3-1",
            "line": " ../modules/JC.Placeholder/0.1/Placeholder.js:302"
        },
        {
            "message": "Missing item type\ninject jquery show, hide func, for Placeholder change event",
            "line": " ../modules/JC.Placeholder/0.1/Placeholder.js:339"
        },
        {
            "message": "Missing item type\nPopTips显示前的回调",
            "line": " ../modules/JC.PopTips/0.1/PopTips.js:626"
        },
        {
            "message": "Missing item type\nPopTips隐藏后的回调",
            "line": " ../modules/JC.PopTips/0.1/PopTips.js:637"
        },
        {
            "message": "Missing item type\n初始化数据模型",
            "line": " ../modules/JC.Slider/0.1/Slider.js:135"
        },
        {
            "message": "Missing item type\n初始化视图模型( 根据不同的滚动方向, 初始化不同的视图类 )",
            "line": " ../modules/JC.Slider/0.1/Slider.js:139"
        },
        {
            "message": "Missing item type\n页面加载后, 自动初始化符合 Slider 规则的 Slider",
            "line": " ../modules/JC.Slider/0.1/Slider.js:968"
        },
        {
            "message": "Missing item type\nsuggest_so({ \"p\" : true,\n              \"q\" : \"shinee\",\n              \"s\" : [ \"shinee 综艺\",\n                  \"shinee美好的一天\",\n                  \"shinee hello baby\",\n                  \"shinee吧\",\n                  \"shinee泰民\",\n                  \"shinee fx\",\n                  \"shinee快乐大本营\",\n                  \"shinee钟铉车祸\",\n                  \"shinee年下男的约会\",\n                  \"shinee dream girl\"\n                ]\n            });",
            "line": " ../modules/JC.Suggest/0.1/Suggest.js:125"
        },
        {
            "message": "Missing item type\nTab 视图类的实例",
            "line": " ../modules/JC.Tab/0.1/Tab.js:160"
        },
        {
            "message": "Missing item type\n判断是否从 layout 下查找内容",
            "line": " ../modules/JC.Tab/0.1/Tab.js:382"
        },
        {
            "message": "Missing item type\n自动化初始 Tab 实例\n如果 Tab.autoInit = true, 鼠标移至 Tab 后会自动初始化 Tab",
            "line": " ../modules/JC.Tab/0.1/Tab.js:649"
        },
        {
            "message": "Missing item type\n为了解决ie6下表格的宽度超出父容器的宽度，父容器的宽度会跟随表格的宽度",
            "line": " ../modules/JC.TableFreeze/0.2/TableFreeze.js:260"
        },
        {
            "message": "Missing item type\n冻结类型:prev, both, last; 默认为prev",
            "line": " ../modules/JC.TableFreeze/0.2/TableFreeze.js:338"
        },
        {
            "message": "Missing item type\n冻结列数:num,num 默认为1",
            "line": " ../modules/JC.TableFreeze/0.2/TableFreeze.js:349"
        },
        {
            "message": "Missing item type\n滚动区域的宽度默认120%",
            "line": " ../modules/JC.TableFreeze/0.2/TableFreeze.js:381"
        },
        {
            "message": "Missing item type\ntr 是否需要hover效果,默认为true",
            "line": " ../modules/JC.TableFreeze/0.2/TableFreeze.js:392"
        },
        {
            "message": "Missing item type\ntr的隔行换色",
            "line": " ../modules/JC.TableFreeze/0.2/TableFreeze.js:411"
        },
        {
            "message": "Missing item type\nTableFreeze调用前的回调",
            "line": " ../modules/JC.TableFreeze/0.2/TableFreeze.js:653"
        },
        {
            "message": "Missing item type\nTableFreeze调用后的回调",
            "line": " ../modules/JC.TableFreeze/0.2/TableFreeze.js:664"
        },
        {
            "message": "Missing item type\n页面加载完毕后, 是否自动初始化 Tips",
            "line": " ../modules/JC.Tips/0.1/Tips.js:598"
        },
        {
            "message": "Missing item type\n树的视图模型类",
            "line": " ../modules/JC.Tree/0.1/Tree.js:389"
        },
        {
            "message": "Missing item type\n捕获树文件标签的点击事件",
            "line": " ../modules/JC.Tree/0.1/Tree.js:646"
        },
        {
            "message": "Missing item type\n捕获树文件夹图标的点击事件",
            "line": " ../modules/JC.Tree/0.1/Tree.js:672"
        },
        {
            "message": "Missing item type\n兼容函数式使用",
            "line": " ../modules/JC.Valid/0.2/Valid.js:314"
        },
        {
            "message": "Missing item type\n提供对各种显示状态 setTimeout 执行的正确性 控制逻辑",
            "line": " ../modules/JC.Valid/0.2/Valid.js:603"
        },
        {
            "message": "Missing item type\n根据特殊的 datatype 实现不同的计算方法",
            "line": " ../modules/JC.Valid/0.2/Valid.js:1095"
        },
        {
            "message": "Missing item type\n这里需要优化检查, 目前会重复检查",
            "line": " ../modules/JC.Valid/0.2/Valid.js:2550"
        },
        {
            "message": "Missing item type\n验证文件扩展名",
            "line": " ../modules/JC.Valid/0.2/Valid.js:2640"
        },
        {
            "message": "Missing item type\n响应表单子对象的 blur事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "line": " ../modules/JC.Valid/0.2/Valid.js:2899"
        },
        {
            "message": "Missing item type\n响应没有 type 的 文本框",
            "line": " ../modules/JC.Valid/0.2/Valid.js:2909"
        },
        {
            "message": "Missing item type\n响应表单子对象的 change 事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "line": " ../modules/JC.Valid/0.2/Valid.js:2919"
        },
        {
            "message": "Missing item type\n响应表单子对象的 focus 事件, 触发事件时, 如果有 focusmsg 属性, 则显示对应的提示信息",
            "line": " ../modules/JC.Valid/0.2/Valid.js:2929"
        },
        {
            "message": "Missing item type\n响应表单子对象的 blur事件, 触发事件时, 如果有 focusmsg 属性, 则显示对应的提示信息",
            "line": " ../modules/JC.Valid/0.2/Valid.js:2940"
        },
        {
            "message": "Missing item type\n初始化 subdatatype = datavalid 相关事件",
            "line": " ../modules/JC.Valid/0.2/Valid.js:2968"
        },
        {
            "message": "Missing item type\n如果 console 不可用, 生成一个模拟的 console 对象",
            "line": " ../modules/JC.common/0.2/common.js:2"
        },
        {
            "message": "Missing item type\n声明主要命名空间, 方便迁移",
            "line": " ../modules/JC.common/0.2/common.js:9"
        },
        {
            "message": "Missing item type\n判断 JC.common 是否需要向后兼容, 如果需要的话, 向 window 添加全局静态函数",
            "line": " ../modules/JC.common/0.2/common.js:89"
        },
        {
            "message": "Missing item type\njquery 1.9.1 默认 string 没有 trim 方法, 这里对 string 原型添加一个默认的 trim 方法",
            "line": " ../modules/JC.common/0.2/common.js:111"
        },
        {
            "message": "Missing item type\n元旦开始的第一个星期一开始的一周为政治经济上的第一周",
            "line": " ../modules/JC.common/0.2/common.js:635"
        },
        {
            "message": "Missing item type\n联动下拉框",
            "line": " ../modules/JC.common/0.2/common.js:965"
        },
        {
            "message": "Missing item type\n日历组件",
            "line": " ../modules/JC.common/0.2/common.js:969"
        },
        {
            "message": "Missing item type\n双日历组件",
            "line": " ../modules/JC.common/0.2/common.js:973"
        },
        {
            "message": "Missing item type\n全选反选",
            "line": " ../modules/JC.common/0.2/common.js:977"
        },
        {
            "message": "Missing item type\nAjax 上传",
            "line": " ../modules/JC.common/0.2/common.js:981"
        },
        {
            "message": "Missing item type\n占位符",
            "line": " ../modules/JC.common/0.2/common.js:985"
        },
        {
            "message": "Missing item type\n表格冻结",
            "line": " ../modules/JC.common/0.2/common.js:989"
        },
        {
            "message": "Missing item type\n拖曳",
            "line": " ../modules/JC.common/0.2/common.js:993"
        },
        {
            "message": "Missing item type\n图片裁切",
            "line": " ../modules/JC.common/0.2/common.js:997"
        },
        {
            "message": "Missing item type\ndisable / enable",
            "line": " ../modules/JC.common/0.2/common.js:1003"
        },
        {
            "message": "Missing item type\n表单提交逻辑",
            "line": " ../modules/JC.common/0.2/common.js:1007"
        },
        {
            "message": "Missing item type\n格式化金额",
            "line": " ../modules/JC.common/0.2/common.js:1011"
        },
        {
            "message": "Missing item type\n自动完成",
            "line": " ../modules/JC.common/0.2/common.js:1015"
        },
        {
            "message": "Missing item type\ninject jquery val func, for hidden change event",
            "line": " ../modules/JC.common/0.2/common.js:1125"
        },
        {
            "message": "Missing item type\nSWFUpload: http://www.swfupload.org, http://swfupload.googlecode.com\n\nmmSWFUpload 1.0: Flash upload dialog - http://profandesign.se/swfupload/,  http://www.vinterwebb.se/\n\nSWFUpload is (c) 2006-2007 Lars Huring, Olov Nilzén and Mammon Media and is released under the MIT License:\nhttp://www.opensource.org/licenses/mit-license.php\n\nSWFUpload 2 is (c) 2007-2008 Jake Roberts and is released under the MIT License:\nhttp://www.opensource.org/licenses/mit-license.php\n\nSWFObject v2.2 <http://code.google.com/p/swfobject/> \n\tis released under the MIT License <http://www.opensource.org/licenses/mit-license.php>",
            "line": " ../modules/SWFUpload/2.5.0/SWFUpload.js:1"
        },
        {
            "message": "Missing item type\nAES Cipher function: encrypt 'input' state with Rijndael algorithm\n  applies Nr rounds (10/12/14) using key schedule w for 'add round key' stage",
            "line": " ../plugins/Aes/0.1/Aes.js:8"
        },
        {
            "message": "Missing item type\nPerform Key Expansion to generate a Key Schedule",
            "line": " ../plugins/Aes/0.1/Aes.js:41"
        },
        {
            "message": "Missing item type\nEncrypt a text using AES encryption in Counter mode of operation\n\nUnicode multi-byte character safe",
            "line": " ../plugins/Aes/0.1/Aes.js:171"
        },
        {
            "message": "Missing item type\nDecrypt a text encrypted by AES in counter mode of operation",
            "line": " ../plugins/Aes/0.1/Aes.js:248"
        },
        {
            "message": "Missing item type\nEncode string into Base64, as defined by RFC 4648 [http://tools.ietf.org/html/rfc4648]\n(instance method extending String object). As per RFC 4648, no newlines are added.",
            "line": " ../plugins/Aes/0.1/Aes.js:323"
        },
        {
            "message": "Missing item type\nDecode string from Base64, as defined by RFC 4648 [http://tools.ietf.org/html/rfc4648]\n(instance method extending String object). As per RFC 4648, newlines are not catered for.",
            "line": " ../plugins/Aes/0.1/Aes.js:366"
        },
        {
            "message": "Missing item type\nEncode multi-byte Unicode string into utf-8 multiple single-byte characters \n(BMP / basic multilingual plane only)\n\nChars in range U+0080 - U+07FF are encoded in 2 chars, U+0800 - U+FFFF in 3 chars",
            "line": " ../plugins/Aes/0.1/Aes.js:413"
        },
        {
            "message": "Missing item type\nDecode utf-8 encoded string back into multi-byte Unicode characters",
            "line": " ../plugins/Aes/0.1/Aes.js:440"
        },
        {
            "message": "Missing item type\nTop level namespace for Jasmine, a lightweight JavaScript BDD/spec/testing framework.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:3"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:10"
        },
        {
            "message": "Missing item type\nUse <code>jasmine.undefined</code> instead of <code>undefined</code>, since <code>undefined</code> is just\na plain old variable and may be redefined by somebody else.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:17"
        },
        {
            "message": "Missing item type\nShow diagnostic messages in the console if set to true",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:25"
        },
        {
            "message": "Missing item type\nDefault interval in milliseconds for event loop yields (e.g. to allow network activity or to refresh the screen with the HTML-based runner). Small values here may result in slow test running. Zero means no updates until all tests have completed.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:31"
        },
        {
            "message": "Missing item type\nDefault timeout interval in milliseconds for waitsFor() blocks.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:37"
        },
        {
            "message": "Missing item type\nAllows for bound functions to be compared.  Internal use only.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:50"
        },
        {
            "message": "Missing item type\nGetter for the Jasmine environment. Ensures one gets created",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:114"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:122"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:132"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:142"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:152"
        },
        {
            "message": "Missing item type\nPretty printer for expecations.  Takes any object and turns it into a human-readable string.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:163"
        },
        {
            "message": "Missing item type\nReturns true if the object is a DOM Node.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:175"
        },
        {
            "message": "Missing item type\nReturns a matchable 'generic' object of the class type.  For use in expecations of type when values don't matter.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:185"
        },
        {
            "message": "Missing item type\nReturns a matchable subset of a JSON object. For use in expectations when you don't care about all of the\nattributes on the object.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:199"
        },
        {
            "message": "Missing item type\nJasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks.\n\nSpies should be created in test setup, before expectations.  They can then be checked, using the standard Jasmine\nexpectation syntax. Spies can be checked if they were called or not and what the calling params were.\n\nA Spy has the following fields: wasCalled, callCount, mostRecentCall, and argsForCall (see docs).\n\nSpies are torn down at the end of every spec.\n\nNote: Do <b>not</b> call new jasmine.Spy() directly - a spy must be created using spyOn, jasmine.createSpy or jasmine.createSpyObj.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:214"
        },
        {
            "message": "Missing item type\nThe name of the spy, if provided.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:259"
        },
        {
            "message": "Missing item type\nIs this Object a spy?",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:263"
        },
        {
            "message": "Missing item type\nThe actual function this spy stubs.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:267"
        },
        {
            "message": "Missing item type\nTracking of the most recent call to the spy.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:272"
        },
        {
            "message": "Missing item type\nHolds arguments for each call to the spy, indexed by call count",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:281"
        },
        {
            "message": "Missing item type\nTells a spy to call through to the actual implemenatation.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:295"
        },
        {
            "message": "Missing item type\nFor setting the return value of a spy.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:311"
        },
        {
            "message": "Missing item type\nFor throwing an exception when a spy is called.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:330"
        },
        {
            "message": "Missing item type\nCalls an alternate implementation when a spy is called.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:349"
        },
        {
            "message": "Missing item type\nResets all of a spy's the tracking variables so that it can be used again.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:369"
        },
        {
            "message": "Missing item type\nDetermines whether an object is a spy.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:415"
        },
        {
            "message": "Missing item type\nCreates a more complicated spy: an Object that has every property a function that is a spy.  Used for stubbing something\nlarge in one call.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:425"
        },
        {
            "message": "Missing item type\nAll parameters are pretty-printed and concatenated together, then written to the current spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:443"
        },
        {
            "message": "Missing item type\nFunction that installs a spy on an existing object's method name.  Used within a Spec to create a spy.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:453"
        },
        {
            "message": "Missing item type\nCreates a Jasmine spec that will be added to the current suite.\n\n// TODO: pending tests",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:473"
        },
        {
            "message": "Missing item type\nCreates a <em>disabled</em> Jasmine spec.\n\nA convenience method that allows existing specs to be disabled temporarily during development.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:491"
        },
        {
            "message": "Missing item type\nStarts a chain for a Jasmine expectation.\n\nIt is passed an Object that is the actual value and should chain to one of the many\njasmine.Matchers functions.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:504"
        },
        {
            "message": "Missing item type\nDefines part of a jasmine spec.  Used in cominbination with waits or waitsFor in asynchrnous specs.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:517"
        },
        {
            "message": "Missing item type\nWaits a fixed time period before moving to the next block.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:527"
        },
        {
            "message": "Missing item type\nWaits for the latchFunction to return true before proceeding to the next block.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:538"
        },
        {
            "message": "Missing item type\nA function that is called before each spec in a suite.\n\nUsed for spec setup, including validating assumptions.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:550"
        },
        {
            "message": "Missing item type\nA function that is called after each spec in a suite.\n\nUsed for restoring any state that is hijacked during spec execution.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:562"
        },
        {
            "message": "Missing item type\nDefines a suite of specifications.\n\nStores the description and all defined specs in the Jasmine environment as one suite of specs. Variables declared\nare accessible by calls to beforeEach, it, and afterEach. Describe blocks can be nested, allowing for specialization\nof setup in some tests.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:574"
        },
        {
            "message": "Missing item type\nDisables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:594"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:633"
        },
        {
            "message": "Missing item type\nDeclare that a child class inherit it's prototype from the parent class.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:638"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:646"
        },
        {
            "message": "Missing item type\nEnvironment for Jasmine",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:700"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:738"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:749"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:766"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:773"
        },
        {
            "message": "Missing item type\nRegister a reporter to receive status updates from Jasmine.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:780"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:977"
        },
        {
            "message": "Missing item type\nBlocks are functions with executable code that make up a spec.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1008"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1030"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1132"
        },
        {
            "message": "Missing item type\ntoBe: compares the actual to the expected using ===",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1209"
        },
        {
            "message": "Missing item type\ntoNotBe: compares the actual to the expected using !==",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1217"
        },
        {
            "message": "Missing item type\ntoEqual: compares the actual to the expected using common sense equality. Handles Objects, Arrays, etc.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1226"
        },
        {
            "message": "Missing item type\ntoNotEqual: compares the actual to the expected using the ! of jasmine.Matchers.toEqual",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1235"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to the expected using a regular expression.  Constructs a RegExp, so takes\na pattern or a String.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1244"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to the expected using the boolean inverse of jasmine.Matchers.toMatch",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1254"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to jasmine.undefined.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1263"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to jasmine.undefined.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1270"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to null.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1277"
        },
        {
            "message": "Missing item type\nMatcher that boolean not-nots the actual.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1284"
        },
        {
            "message": "Missing item type\nMatcher that boolean nots the actual.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1292"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was called.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1300"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1322"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was not called.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1325"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was called with a set of parameters.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1349"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1378"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1381"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is an element in the actual Array.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1398"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is NOT an element in the actual Array.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1407"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is equal to the actual item\nup to a given level of decimal precision (default 2).",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1425"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected exception was thrown by the actual.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1442"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1619"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1715"
        },
        {
            "message": "Missing item type\nHolds results for a set of Jasmine spec. Allows for the results array to hold another jasmine.NestedResults",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1750"
        },
        {
            "message": "Missing item type\nThe total count of results",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1756"
        },
        {
            "message": "Missing item type\nNumber of passed results",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1760"
        },
        {
            "message": "Missing item type\nNumber of failed results",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1764"
        },
        {
            "message": "Missing item type\nWas this suite/spec skipped?",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1768"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1772"
        },
        {
            "message": "Missing item type\nRoll up the result counts.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1778"
        },
        {
            "message": "Missing item type\nAdds a log message.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1789"
        },
        {
            "message": "Missing item type\nGetter for the results: message & results.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1797"
        },
        {
            "message": "Missing item type\nAdds a result, tracking counts (total, passed, & failed)",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1804"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1824"
        },
        {
            "message": "Missing item type\nBase class for pretty printing for expectation results.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1830"
        },
        {
            "message": "Missing item type\nFormats a value in a nice, human-readable string.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:1837"
        },
        {
            "message": "Missing item type\nRunner",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:2052"
        },
        {
            "message": "Missing item type\nInternal representation of a Jasmine specification, or test.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:2129"
        },
        {
            "message": "Missing item type\nAll parameters are pretty-printed and concatenated together, then written to the spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:2168"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:2191"
        },
        {
            "message": "Missing item type\nWaits a fixed time period before moving to the next block.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:2204"
        },
        {
            "message": "Missing item type\nWaits for the latchFunction to return true before proceeding to the next block.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:2216"
        },
        {
            "message": "Missing item type\nInternal representation of a Jasmine suite.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:2372"
        },
        {
            "message": "Missing item type\nA block which waits for some condition to become true, with timeout.",
            "line": " ../plugins/jquery.rate/2.5.2/spec/lib/jasmine.js:2469"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/requirejs.domReady/2.0.1/domReady.js:1"
        },
        {
            "message": "Missing item type\nSets the page as loaded.",
            "line": " ../plugins/requirejs.domReady/2.0.1/domReady.js:40"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/requirejs.domReady/2.0.1/domReady.js:97"
        },
        {
            "message": "Missing item type\nRegisters a callback for DOM ready. If DOM is already ready, the\ncallback is called immediately.",
            "line": " ../plugins/requirejs.domReady/2.0.1/domReady.js:99"
        },
        {
            "message": "Missing item type\nLoader Plugin API method",
            "line": " ../plugins/requirejs.domReady/2.0.1/domReady.js:115"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/requirejs.domReady/2.0.1/domReady.js:126"
        },
        {
            "message": "Missing item type\nrequirejs config.js for JC Project",
            "line": " ../config.js:4"
        },
        {
            "message": "Missing item type\n取当前脚本标签的 src路径",
            "line": " ../config.js:102"
        },
        {
            "message": "Missing item type\n取当前脚本标签的 src路径",
            "line": " ../lib.js:2"
        },
        {
            "message": "Missing item type",
            "line": " ../require.js:8"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "line": " ../require.js:56"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "line": " ../require.js:71"
        },
        {
            "message": "Missing item type\nCycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "line": " ../require.js:94"
        },
        {
            "message": "Missing item type\nSimple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "line": " ../require.js:110"
        },
        {
            "message": "Missing item type\nConstructs an error with a pointer to an URL with more information.",
            "line": " ../require.js:161"
        },
        {
            "message": "Missing item type\nTrims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "line": " ../require.js:227"
        },
        {
            "message": "Missing item type\nGiven a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "line": " ../require.js:260"
        },
        {
            "message": "Missing item type\nCreates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "line": " ../require.js:406"
        },
        {
            "message": "Missing item type\nInternal method to transfer globalQueue items to this context's\ndefQueue.",
            "line": " ../require.js:548"
        },
        {
            "message": "Missing item type\nChecks if the module is ready to define itself, and if so,\ndefine it.",
            "line": " ../require.js:836"
        },
        {
            "message": "Missing item type\nGiven an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "line": " ../require.js:1195"
        },
        {
            "message": "Missing item type\nSet a configuration for the context.",
            "line": " ../require.js:1248"
        },
        {
            "message": "Missing item type\nConverts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "line": " ../require.js:1432"
        },
        {
            "message": "Missing item type\nCalled to enable a module if it is still in the registry\nawaiting enablement. A second arg, parent, the parent module,\nis passed in for context, when this method is overriden by\nthe optimizer. Not shown here to keep code compact.",
            "line": " ../require.js:1494"
        },
        {
            "message": "Missing item type\nInternal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "line": " ../require.js:1507"
        },
        {
            "message": "Missing item type\nConverts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "line": " ../require.js:1563"
        },
        {
            "message": "Missing item type\nExecutes a module callback function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "line": " ../require.js:1634"
        },
        {
            "message": "Missing item type\ncallback for script loads, used to check status of loading.",
            "line": " ../require.js:1645"
        },
        {
            "message": "Missing item type\nCallback for script errors.",
            "line": " ../require.js:1667"
        },
        {
            "message": "Missing item type\nMain entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "line": " ../require.js:1682"
        },
        {
            "message": "Missing item type\nSupport require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "line": " ../require.js:1732"
        },
        {
            "message": "Missing item type\nExecute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "line": " ../require.js:1740"
        },
        {
            "message": "Missing item type\nExport require as a global, but only if it does not already exist.",
            "line": " ../require.js:1750"
        },
        {
            "message": "Missing item type\nAny errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "line": " ../require.js:1797"
        },
        {
            "message": "Missing item type\nCreates the node for the load command. Only used in browser envs.",
            "line": " ../require.js:1804"
        },
        {
            "message": "Missing item type\nDoes the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "line": " ../require.js:1817"
        },
        {
            "message": "Missing item type\nThe function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "line": " ../require.js:1973"
        },
        {
            "message": "Missing item type\nExecutes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "line": " ../require.js:2047"
        }
    ]
}